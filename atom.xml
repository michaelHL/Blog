<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Heller 的博客</title>
  
  <subtitle>世界不是非黑即白</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://notes.shinemic.cn/"/>
  <updated>2021-02-28T05:58:49.744Z</updated>
  <id>http://notes.shinemic.cn/</id>
  
  <author>
    <name>Heller</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用 ZFile 搭建自己的文件分享站（Linux &amp; Windows）</title>
    <link href="http://notes.shinemic.cn/setting-up-your-own-netdisk-by-zfile-on-windows-and-linux/"/>
    <id>http://notes.shinemic.cn/setting-up-your-own-netdisk-by-zfile-on-windows-and-linux/</id>
    <published>2021-02-28T03:21:10.000Z</published>
    <updated>2021-02-28T05:58:49.744Z</updated>
    
    <content type="html"><![CDATA[<p>网盘目录程序各式各样，这里分享一个页面简洁大方的在线网盘项目 <a href="https://github.com/zhaojun1998/zfile" target="_blank" rel="noopener">Z-File</a>。</p><blockquote><p>此项目是一个在线文件目录的程序，支持各种对象存储和本地存储，使用定位是个人放常用工具下载，或做公共的文件库。不会向多账户方向开发。 前端基于 <a href="https://larsjung.de/h5ai" target="_blank" rel="noopener">h5ai</a> 的原有功能使用 Vue 重新开发了一遍。后端采用 SpringBoot，数据库采用内嵌数据库。</p></blockquote><a id="more"></a><p>为适应不同场景下需求，分别在 Linux 以及 Windows 中进行测试。</p><h2 id="准备工作">准备工作</h2><h3 id="ftp-服务器">FTP 服务器</h3><p>Windows 自带的的 Internet Information Services (IIS) 搭建 FTP 服务器会出现中文文件名乱码、认证错误等问题，于是转向开源的 <a href="https://filezilla-project.org/download.php?type=server" target="_blank" rel="noopener">FileZilla Server</a> 搭建 FTP 服务器。</p><h2 id="linux-部署-zfile">Linux 部署 ZFile</h2><h3 id="安装依赖">安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CentOS系统</span></span><br><span class="line">yum install -y java-1.8.0-openjdk unzip</span><br><span class="line"></span><br><span class="line"><span class="comment"># Debian/Ubuntu系统</span></span><br><span class="line">apt update</span><br><span class="line">apt install -y openjdk-8-jre-headless unzip</span><br></pre></td></tr></table></figure><h3 id="下载项目">下载项目</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -P https://c.jun6.net/ZFILE/zfile-release.war</span><br><span class="line">mkdir zfile &amp;&amp; unzip zfile-release.war -d zfile</span><br><span class="line">chmod +x zfile/bin/*.sh</span><br></pre></td></tr></table></figure><h3 id="常用命令">常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~/zfile/bin/start.sh       <span class="comment"># 启动项目</span></span><br><span class="line">~/zfile/bin/stop.sh        <span class="comment"># 停止项目</span></span><br><span class="line">~/zfile/bin/restart.sh     <span class="comment"># 重启项目</span></span><br></pre></td></tr></table></figure><h3 id="后台配置">后台配置</h3><p>运行 <code>start.sh</code> 启动程序，进入网页端 <code>http://&lt;ip:port&gt;</code> 设置后台管理账密（前端端口在 <code>zfile/WEB-INF/classes/application.xml</code> 中配置，默认为 8080），后台管理界面网址为：<code>http://&lt;ip:port&gt;/#/admin</code>。通过「驱动器列表」页面新增驱动器并进行必要配置，即可在前端显示目录内容。</p><h3 id="挂载-ftp-驱动器">挂载 FTP 驱动器</h3><p>默认情况下挂载的 FTP 驱动器在前端下载协议为 <code>ftp://</code> ，部分客户端浏览器不支持 ftp 协议下载，且 ftp 协议下载链接会暴露用户名密码，故 Zfile 提供「加速域名」的方式，即事先实现以 HTTP 方式访问 FTP 目录，用户通过 HTTP 进行下载从而隐藏敏感信息。而实际情况中 FTP 服务器可能无法搭建 HTTP 服务，故考虑将远程 FTP 挂载到本地目录，在 Zfile 管理界面新增本地存储的方式进行展示。</p><p>下面利用 curlftpfs 挂载 FTP 服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在线安装</span></span><br><span class="line">yum install -y epel-release</span><br><span class="line">yum install -y curlftpfs</span><br><span class="line"><span class="comment"># 离线安装</span></span><br><span class="line"><span class="comment"># yum install --downloadonly curlftpfs --downloaddir=.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载 FTP 目录</span></span><br><span class="line">mkdir -p <span class="variable">$MOUNTPOINT</span></span><br><span class="line">curlftpfs <span class="variable">$IP</span>:<span class="variable">$PORT</span> <span class="variable">$MOUNTPOINT</span> -o user=<span class="variable">$USERNAME</span>:<span class="variable">$PASSWORD</span>,codepage=utf8</span><br><span class="line"><span class="comment"># 取消挂载</span></span><br><span class="line">fusermount -u <span class="variable">$MOUNTPOINT</span></span><br></pre></td></tr></table></figure><h2 id="windows-部署-zfile">Windows 部署 ZFile</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -Dfile.encoding=utf-<span class="number">8</span> -jar -Dserver.port=<span class="number">8080</span> .\zfile-release.jar</span><br><span class="line"># 如需要修改配置文件, 可去 Github 复制一份配置文件, 放到 jar 文件同路径即可.</span><br></pre></td></tr></table></figure><h3 id="挂载-ftp-驱动器-1">挂载 FTP 驱动器</h3><p>与 Linux 下同理，相应需安装 <a href="https://github.com/rclone/rclone" target="_blank" rel="noopener">Rclone</a> 及 <a href="https://github.com/billziss-gh/winfsp" target="_blank" rel="noopener">WinFsp</a>，配置过程不再赘述。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网盘目录程序各式各样，这里分享一个页面简洁大方的在线网盘项目 &lt;a href=&quot;https://github.com/zhaojun1998/zfile&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Z-File&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;此项目是一个在线文件目录的程序，支持各种对象存储和本地存储，使用定位是个人放常用工具下载，或做公共的文件库。不会向多账户方向开发。 前端基于 &lt;a href=&quot;https://larsjung.de/h5ai&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;h5ai&lt;/a&gt; 的原有功能使用 Vue 重新开发了一遍。后端采用 SpringBoot，数据库采用内嵌数据库。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Handy Utilities" scheme="http://notes.shinemic.cn/categories/Handy-Utilities/"/>
    
    
      <category term="ZFile" scheme="http://notes.shinemic.cn/tags/ZFile/"/>
    
      <category term="FTP" scheme="http://notes.shinemic.cn/tags/FTP/"/>
    
      <category term="Fuse" scheme="http://notes.shinemic.cn/tags/Fuse/"/>
    
      <category term="NetDisk" scheme="http://notes.shinemic.cn/tags/NetDisk/"/>
    
      <category term="FileZilla" scheme="http://notes.shinemic.cn/tags/FileZilla/"/>
    
  </entry>
  
  <entry>
    <title>Windows 下多网卡路由表设置</title>
    <link href="http://notes.shinemic.cn/settings-of-multi-nic-and-routing-table-on-windows/"/>
    <id>http://notes.shinemic.cn/settings-of-multi-nic-and-routing-table-on-windows/</id>
    <published>2020-10-11T00:53:00.000Z</published>
    <updated>2020-11-01T01:36:21.844Z</updated>
    
    <content type="html"><![CDATA[<p>经常遇到这样的情形：办公网与外网不通，办公时如需连外网查资料，不得不来回切换网络或通过其他设备上外网再回到办公电脑前，来回折腾苦不堪言。自然产生需求：同一台设备如何同时连接办公内网及外网？</p><a id="more"></a><h2 id="实验配置">实验配置</h2><ul><li>内网端：办公网口 / 可分享网络的办公用电脑</li><li>外网端：连通外网的路由器 / 热点 / 移动设备 USB 分享 / 其他可连至外网的设备或信号</li><li>多网卡计算机</li></ul><p>其中<strong>内网端</strong>可为办公网口，通过网线接入目标笔记本；但一般情况下公司会提供办公专用笔记本，通过网络共享技术，可将办公网络共享给通过网线与之相连的设备。<strong>外网端</strong>顾名思义，可使目标笔记本上外网的设备或手段。多网卡设备中的「多网卡」可以认为是以太网（Ethernet）及无线网（Wi-Fi）或其他计算机中的网络设备。</p><h2 id="实验场景一个人电脑通过办公电脑上公司内网">实验场景一：个人电脑通过办公电脑上公司内网</h2><blockquote><p>首先从简单的场景实验开始：办公电脑 A 通过 Wi-Fi 连接公司内网，并通过网线与个人电脑 B 相连。</p></blockquote><p>将办公电脑 A 中网络适配器设置的 Wi-Fi 适配器（设备名可能不同）共享打开：属性 - 共享 - 勾选允许网络用户通过该电脑连接至网络。此时电脑 A 的以太网适配器会将 IP 设置为 <code>192.168.137.1</code>。</p><p>在电脑 B 中的以太网设置中：</p><ul><li>自动获取 IP 地址 / DNS 服务器地址</li><li>如需固定 IP 地址，则需将默认网关及 DNS 服务器设置为 <code>192.168.137.1</code></li></ul><h2 id="实验场景二设置个人电脑内网外网均可访问">实验场景二：设置个人电脑内网外网均可访问</h2><blockquote><p>有了实验一的经验，可否简单地将外网网线接入个人电脑，并成功访问外网及内网？</p></blockquote><p>此时打开个人电脑 Wi-Fi，发现外网可访问，但实验一中的内网网址无法访问了。<strong>管理员</strong>权限下在 <code>cmd</code> 中输入</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route <span class="built_in">print</span> -<span class="number">4</span></span><br></pre></td></tr></table></figure><p>可获取路由表信息（IPv4）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">===========================================================================</span><br><span class="line">Interface List</span><br><span class="line"> 15...xx xx xx xx xx xx ......Realtek PCIe GbE Family Controller</span><br><span class="line"> 32...xx xx xx xx xx xx ......Microsoft Wi-Fi Direct Virtual Adapter</span><br><span class="line"> 16...xx xx xx xx xx xx ......Realtek 8821CE Wireless LAN 802.11ac PCI-E NIC</span><br><span class="line">  1...........................Software Loopback Interface 1</span><br><span class="line">===========================================================================</span><br><span class="line"></span><br><span class="line">IPv4 Route Table</span><br><span class="line">===========================================================================</span><br><span class="line">Active Routes:</span><br><span class="line">Network Destination        Netmask          Gateway       Interface  Metric</span><br><span class="line">          0.0.0.0          0.0.0.0    192.168.137.1  192.168.137.101    281</span><br><span class="line">          0.0.0.0          0.0.0.0      192.168.8.1    192.168.8.101     50</span><br><span class="line">        127.0.0.0        255.0.0.0         On-link         127.0.0.1    331</span><br><span class="line">        127.0.0.1  255.255.255.255         On-link         127.0.0.1    331</span><br><span class="line">  127.255.255.255  255.255.255.255         On-link         127.0.0.1    331</span><br><span class="line">      192.168.8.0    255.255.255.0         On-link     192.168.8.101    306</span><br><span class="line">    192.168.8.101  255.255.255.255         On-link     192.168.8.101    306</span><br><span class="line">    192.168.8.255  255.255.255.255         On-link     192.168.8.101    306</span><br><span class="line">    192.168.137.0    255.255.255.0         On-link   192.168.137.101    281</span><br><span class="line">  192.168.137.101  255.255.255.255         On-link   192.168.137.101    281</span><br><span class="line">  192.168.137.255  255.255.255.255         On-link   192.168.137.101    281</span><br><span class="line">        224.0.0.0        240.0.0.0         On-link         127.0.0.1    331</span><br><span class="line">        224.0.0.0        240.0.0.0         On-link     192.168.8.101    306</span><br><span class="line">        224.0.0.0        240.0.0.0         On-link   192.168.137.101    281</span><br><span class="line">  255.255.255.255  255.255.255.255         On-link         127.0.0.1    331</span><br><span class="line">  255.255.255.255  255.255.255.255         On-link     192.168.8.101    306</span><br><span class="line">  255.255.255.255  255.255.255.255         On-link   192.168.137.101    281</span><br><span class="line">===========================================================================</span><br><span class="line">Persistent Routes:</span><br><span class="line">  Network Address          Netmask  Gateway Address  Metric</span><br><span class="line">          0.0.0.0          0.0.0.0    192.168.137.1  Default</span><br><span class="line">===========================================================================</span><br></pre></td></tr></table></figure><p>可以看到针对目的网段 <code>0.0.0.0</code>，活动路由中存在 2 条路由设定。Windows 下默认网关是指发往 <code>0.0.0.0</code> 缺省网段的地址，其目的地为所有未知路由的网段，所以设置了 2 个默认网关之后，其中的一个网关将被启用，而另外一个将作为冗余。所以在浏览器中试图访问内网时，例如访问 IP 为 <code>10.30.10.101</code>，系统在 2 条路由中挑选一条进行访问，系统会偏向跳数（Metric）较小的路由进行访问，在测试中的情况即为网关为外网的这条路由，导致内网无法访问。</p><p><strong>解决方案</strong></p><ul><li>针对 <code>0.0.0.0</code> 网段进行针对性设置，如默认网段走外网 <code>192.168.8.1</code>，而内网网段走内网 <code>192.168.137.1</code></li><li>针对内网网段，设定网关为内网 <code>192.168.137.1</code></li></ul><p>例如，公司内网网段为 <code>10.30.*.*</code>，首先删除路由为 <code>0.0.0.0</code> 的 2 条记录，并添加默认网段的路由网关为 <code>192.168.8.1</code>，内网网段的路由网关为 <code>192.168.137.1</code>。需要注意的是命令中的<strong>接口号</strong>是否与实际情况相对应。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">route delete          <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span></span><br><span class="line">route add -p          <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>  mask        <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>      <span class="number">192</span>.<span class="number">168</span>.<span class="number">8</span>.<span class="number">1</span>   <span class="keyword">IF</span> <span class="number">16</span></span><br><span class="line">route add -p        <span class="number">10</span>.<span class="number">30</span>.<span class="number">0</span>.<span class="number">0</span>  mask    <span class="number">255</span>.<span class="number">255</span>.<span class="number">0</span>.<span class="number">0</span>    <span class="number">192</span>.<span class="number">168</span>.<span class="number">137</span>.<span class="number">1</span>   <span class="keyword">IF</span> <span class="number">15</span></span><br><span class="line">route add -p    <span class="number">192</span>.<span class="number">168</span>.<span class="number">137</span>.<span class="number">0</span>  mask  <span class="number">255</span>.<span class="number">255</span>.<span class="number">255</span>.<span class="number">0</span>    <span class="number">192</span>.<span class="number">168</span>.<span class="number">137</span>.<span class="number">1</span>   <span class="keyword">IF</span> <span class="number">15</span></span><br></pre></td></tr></table></figure><p>设定后的路由表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">IPv4 Route Table</span><br><span class="line">===========================================================================</span><br><span class="line">Active Routes:</span><br><span class="line">Network Destination        Netmask          Gateway       Interface  Metric</span><br><span class="line">          0.0.0.0          0.0.0.0      192.168.8.1    192.168.8.101     51</span><br><span class="line">        10.30.0.0      255.255.0.0    192.168.137.1  192.168.137.101     26</span><br><span class="line">        127.0.0.0        255.0.0.0         On-link         127.0.0.1    331</span><br><span class="line">        127.0.0.1  255.255.255.255         On-link         127.0.0.1    331</span><br><span class="line">  127.255.255.255  255.255.255.255         On-link         127.0.0.1    331</span><br><span class="line">      192.168.8.0    255.255.255.0         On-link     192.168.8.101    306</span><br><span class="line">    192.168.8.101  255.255.255.255         On-link     192.168.8.101    306</span><br><span class="line">    192.168.8.255  255.255.255.255         On-link     192.168.8.101    306</span><br><span class="line">    192.168.137.0    255.255.255.0    192.168.137.1  192.168.137.101     26</span><br><span class="line">  192.168.137.101  255.255.255.255         On-link   192.168.137.101    281</span><br><span class="line">        224.0.0.0        240.0.0.0         On-link         127.0.0.1    331</span><br><span class="line">        224.0.0.0        240.0.0.0         On-link     192.168.8.101    306</span><br><span class="line">        224.0.0.0        240.0.0.0         On-link   192.168.137.101    281</span><br><span class="line">  255.255.255.255  255.255.255.255         On-link         127.0.0.1    331</span><br><span class="line">  255.255.255.255  255.255.255.255         On-link     192.168.8.101    306</span><br><span class="line">  255.255.255.255  255.255.255.255         On-link   192.168.137.101    281</span><br><span class="line">===========================================================================</span><br><span class="line">Persistent Routes:</span><br><span class="line">  Network Address          Netmask  Gateway Address  Metric</span><br><span class="line">    192.168.137.0    255.255.255.0    192.168.137.1       1</span><br><span class="line">        10.30.0.0      255.255.0.0    192.168.137.1       1</span><br><span class="line">          0.0.0.0          0.0.0.0      192.168.8.1       1</span><br></pre></td></tr></table></figure><h2 id="gui-程序设定路由表">GUI 程序设定路由表</h2><blockquote><p><a href="https://www.nirsoft.net/utils/network_route_view.html" target="_blank" rel="noopener">NetRouteView - Network Route Utility for Windows</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经常遇到这样的情形：办公网与外网不通，办公时如需连外网查资料，不得不来回切换网络或通过其他设备上外网再回到办公电脑前，来回折腾苦不堪言。自然产生需求：同一台设备如何同时连接办公内网及外网？&lt;/p&gt;
    
    </summary>
    
      <category term="Research" scheme="http://notes.shinemic.cn/categories/Research/"/>
    
    
      <category term="Windows" scheme="http://notes.shinemic.cn/tags/Windows/"/>
    
      <category term="Routing" scheme="http://notes.shinemic.cn/tags/Routing/"/>
    
      <category term="NetMask" scheme="http://notes.shinemic.cn/tags/NetMask/"/>
    
  </entry>
  
  <entry>
    <title>MacOS 安装 Homebrew</title>
    <link href="http://notes.shinemic.cn/homebrew-installation-on-macos/"/>
    <id>http://notes.shinemic.cn/homebrew-installation-on-macos/</id>
    <published>2020-09-01T13:50:29.000Z</published>
    <updated>2020-11-01T01:36:21.843Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">The Missing Package Manager for macOS (or Linux) — Homebrew</blockquote><p>作为一名业余的 Mac User，怎能不会熟练使用 Homebrew？但国内访问官方 Homebrew 速度过慢，需通过更改 Homebrew 安装源为国内源解决，以下操作主要借鉴<a href="https://www.jianshu.com/p/c7c7aa34e579" target="_blank" rel="noopener">成功解决macos 安装homebrew速度慢</a>。</p><a id="more"></a><h2 id="下载-homebrew-安装脚本">下载 Homebrew 安装脚本</h2><p>目前官方已经不推荐利用 Ruby 脚本的方式去安装 Homebrew 了，首先通过科技手段直接下载 <a href="https://raw.githubusercontent.com/Homebrew/install/master/install.sh" target="_blank" rel="noopener">install.sh</a>。</p><h2 id="修改-homebrew-源">修改 Homebrew 源</h2><p>将脚本 <code>install.sh</code> 中的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BREW_REPO=<span class="string">"https://github.com/Homebrew/brew"</span></span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BREW_REPO=<span class="string">"https://mirrors.ustc.edu.cn/brew.git"</span></span><br></pre></td></tr></table></figure><h2 id="执行安装脚本">执行安装脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x install.sh</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><p>脚本会停在</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">==&gt; Tapping homebrew/core</span><br><span class="line">Cloning into ‘/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core’</span><br></pre></td></tr></table></figure><p>此时关闭当前进程，从国内源拉取 <code>homebrew-core</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://mirrors.ustc.edu.cn/homebrew-core.git/ /usr/<span class="built_in">local</span>/Homebrew/Library/Taps/homebrew/homebrew-core --depth=1</span><br></pre></td></tr></table></figure><h2 id="将-brew-切换到国内镜像源">将 <code>brew</code> 切换到国内镜像源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 步骤一</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>"</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-core"</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</span><br><span class="line">brew update</span><br></pre></td></tr></table></figure><p><br></p><p><strong>ENJOY!</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;The Missing Package Manager for macOS (or Linux) — Homebrew&lt;/blockquote&gt;
&lt;p&gt;作为一名业余的 Mac User，怎能不会熟练使用 Homebrew？但国内访问官方 Homebrew 速度过慢，需通过更改 Homebrew 安装源为国内源解决，以下操作主要借鉴&lt;a href=&quot;https://www.jianshu.com/p/c7c7aa34e579&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;成功解决macos 安装homebrew速度慢&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="MacOS" scheme="http://notes.shinemic.cn/tags/MacOS/"/>
    
      <category term="Homebrew" scheme="http://notes.shinemic.cn/tags/Homebrew/"/>
    
  </entry>
  
  <entry>
    <title>Windows 下 Haskell-stack 开发环境搭建</title>
    <link href="http://notes.shinemic.cn/setting-up-haskell-stack-development-environment/"/>
    <id>http://notes.shinemic.cn/setting-up-haskell-stack-development-environment/</id>
    <published>2018-08-11T08:59:52.000Z</published>
    <updated>2019-02-28T13:06:49.501Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><img src="/img/haskell-logo.svg" width="45%"> <br>An advanced, purely functional programming language</blockquote><p>抛却「Haskell 语言能装逼」这一光环，笔者认为学习 Haskell 的另一主要动机在于尝试体验另一种编程思维，即「做什么」而非「怎么做」，Haskell 写出的程序更像是人脑的思维而不是机器的思维。当然了，装 x 也 hin 重要。</p><p>目前 <a href="https://www.haskell.org/downloads" target="_blank" rel="noopener">Haskell 官方下载页</a> 推荐三种下载方案：</p><ul><li><a href="https://www.haskell.org/downloads#minimal" target="_blank" rel="noopener">最小安装程序</a></li><li><a href="http://docs.haskellstack.org" target="_blank" rel="noopener">stack</a></li><li><a href="https://www.haskell.org/downloads#platform" target="_blank" rel="noopener">Haskell 平台</a></li></ul><p>总体而言，Haskell 在 *nix / OS X 操作系统下的生态优于 Windows 环境，但对于熟悉 Windows 操作、醉心于各类工具流的笔者而言，必须要在 Windows 系统下完成环境搭建。为方便后续各类包的安装更新等操作，这里采用 <a href="https://www.haskell.org/cabal" target="_blank" rel="noopener">Cabal</a> 的替代品 – stack。以下诸多关键操作均参考 <a href="https://blog.ramdoot.in" target="_blank" rel="noopener">Arvind Devarajan 的博客</a>。</p><a id="more"></a><h3 id="预热">预热</h3><p>在 Windows 操作系统环境中，如果没有设定环境变量 <code>STACK_ROOT</code>，则通过 stack 下载的程序文件以及包快照会被存放在 <code>%LOCALAPPDATA%\Programs\stack</code> 以及 <code>%APPDATA%\stack</code> 目录下。经常变动的包安放在系统盘总会令人不安，也不便于管理。所以在首次使用 stack 之前，应设定环境变量 <code>STACK_ROOT</code>，这里笔者将其设为 <code>F:\HaskellStack</code>。另外推荐设定编译器 GHC 的下载安装目录，见后文 <code>config.yaml</code> 文件的配置。（<a href="https://docs.haskellstack.org/en/stable/faq/#can-i-change-stacks-default-temporary-directory" target="_blank" rel="noopener">stack 帮助文档关于此问题的说明</a>）</p><h3 id="配置">配置</h3><p>这里有几点关于我个人在开发过程中的习惯配置。</p><ul><li>提前安装好 <a href="https://www.msys2.org" target="_blank" rel="noopener">MSYS2</a> 作为 C/C++ 等工具的开发环境，并添加至环境变量 <code>PATH</code>。详细配置过程见 <a href="/daily-operations-of-msys2">MSYS2 的日常操作</a></li><li>将一个包含常用可执行文件的目录加入环境变量 <code>PATH</code>，如 <code>F:\WorkingDirectory\Bin</code></li></ul><p>stack 默认使用的软件源在国外，这里换上国内的清华大学开源网站镜像。由于之前已设定了 <code>STACK_ROOT</code> 环境变量，首次运行 stack 会在此目录下生成一些文件，修改 <code>config.yaml</code> 文件：</p><figure class="highlight yaml"><figcaption><span>%STACK_ROOT%\config.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">setup-info:</span> <span class="string">"http://mirrors.tuna.tsinghua.edu.cn/stackage/stack-setup.yaml"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">urls:</span></span><br><span class="line"><span class="attr">  latest-snapshot:</span> <span class="attr">http://mirrors.tuna.tsinghua.edu.cn/stackage/snapshots.json</span></span><br><span class="line"><span class="attr">  lts-build-plans:</span> <span class="attr">http://mirrors.tuna.tsinghua.edu.cn/stackage/lts-haskell/</span></span><br><span class="line"><span class="attr">  nightly-build-plans:</span> <span class="attr">http://mirrors.tuna.tsinghua.edu.cn/stackage/stackage-nightly/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">package-indices:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">Tsinghua</span></span><br><span class="line"><span class="attr">    download-prefix:</span> <span class="attr">http://mirrors.tuna.tsinghua.edu.cn/hackage/package/</span></span><br><span class="line"><span class="attr">    http:</span> <span class="attr">http://mirrors.tuna.tsinghua.edu.cn/hackage/00-index.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="attr">skip-msys:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">local-programs-path:</span> <span class="attr">F:\HaskellStack\programs</span></span><br><span class="line"><span class="attr">local-bin-path:</span> <span class="attr">F:\WorkingDirectory\Bin</span></span><br></pre></td></tr></table></figure><p>以上参考 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/stackage" target="_blank" rel="noopener">stackage 镜像使用帮助</a> 以及 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/hackage" target="_blank" rel="noopener">hackage 镜像使用帮助</a>。另作几点说明：</p><ul><li>Windows 下的 stack 会自动安装 MSYS2，由于之前已在机器中安装过，故在配置中跳过 MSYS 的安装</li><li>通过 <code>stack install</code> 生成的可执行文件默认在 <code>%APPDATA%</code> 目录下，这里统一放置于之前提到的可执行文件合集目录中</li></ul><p>执行 <code>stack setup</code> 下载最新版的 GHC，目前版本为 8.4.3。</p><p>如一切顺利，<code>stack path</code> 输出如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">stack-root: F:\HaskellStack</span><br><span class="line">project-root: F:\HaskellStack\global-project</span><br><span class="line">config-location: F:\HaskellStack\global-project\stack.yaml</span><br><span class="line">bin-path: .;F:\HaskellStack\snapshots\55eb7f36\bin;F:\HaskellStack\compiler-tools\x86_64-windows\ghc-8.4.3\bin;F:\HaskellStack\programs\x86_64-windows\ghc-8.4.3\bin;F:\HaskellStack\programs\x86_64-windows\ghc-8.4.3\mingw\bin;C:\Windows\system32;...</span><br><span class="line">programs: F:\HaskellStack\programs\x86_64-windows</span><br><span class="line">compiler-exe: F:\HaskellStack\programs\x86_64-windows\ghc-8.4.3\bin\ghc.EXE</span><br><span class="line">compiler-bin: F:\HaskellStack\programs\x86_64-windows\ghc-8.4.3\bin</span><br><span class="line">compiler-tools-bin: F:\HaskellStack\compiler-tools\x86_64-windows\ghc-8.4.3\bin</span><br><span class="line">local-bin: F:\WorkingDirectory\Bin</span><br><span class="line">extra-include-dirs:</span><br><span class="line">extra-library-dirs:</span><br><span class="line">snapshot-pkg-db: F:\HaskellStack\snapshots\55eb7f36\pkgdb</span><br><span class="line">local-pkg-db: F:\HaskellStack\global-project\.stack-work\install\620260b6\pkgdb</span><br><span class="line">global-pkg-db: F:\HaskellStack\programs\x86_64-windows\ghc-8.4.3\lib\package.conf.d</span><br><span class="line">ghc-package-path: F:\HaskellStack\global-project\.stack-work\install\620260b6\pkgdb;F:\HaskellStack\snapshots\55eb7f36\pkgdb;F:\HaskellStack\programs\x86_64-windows\ghc-8.4.3\lib\package.conf.d</span><br><span class="line">snapshot-install-root: F:\HaskellStack\snapshots\55eb7f36</span><br><span class="line">local-install-root: F:\HaskellStack\global-project\.stack-work\install\620260b6</span><br><span class="line">snapshot-doc-root: F:\HaskellStack\snapshots\55eb7f36\doc</span><br><span class="line">local-doc-root: F:\HaskellStack\global-project\.stack-work\install\620260b6\doc</span><br><span class="line">dist-dir: .stack-work\dist\7d103d30</span><br><span class="line">local-hpc-root: F:\HaskellStack\global-project\.stack-work\install\620260b6\hpc</span><br><span class="line">local-bin-path: F:\WorkingDirectory\Bin</span><br><span class="line">ghc-paths: F:\HaskellStack\programs\x86_64-windows</span><br></pre></td></tr></table></figure><p>最后，如要修改 GHCi 的命令行提示符或在启动时加载某些包，可通过添加 / 修改 <code>%APPDATA%\ghc\ghci.conf</code> 文件为以下内容：</p><figure class="highlight plain"><figcaption><span>ghci.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import Text.Show.Pretty (ppShow, pPrint)</span><br><span class="line"></span><br><span class="line">:set -interactive-print pPrint</span><br><span class="line">:set prompt &quot;|&gt; &quot;</span><br></pre></td></tr></table></figure><h3 id="编辑器">编辑器</h3><p>考虑编辑效率和插件生态，推荐使用 VSCode 作为主力编辑器。安装插件：</p><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=justusadam.language-haskell" target="_blank" rel="noopener">Haskell Syntax Highlight</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=UCL.haskelly" target="_blank" rel="noopener">Haskelly</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=monofon.hindent-format" target="_blank" rel="noopener">hindent-format</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=MaxGabriel.brittany" target="_blank" rel="noopener">brittany</a></li></ul><p>后两者为代码格式化插件，任选一即可。</p><p><code>hindent-format</code> 貌似不能正确读取配置文件，故手动修改之（当前版本 0.0.8）</p><div><div class="fold_hider"><div class="close hider_title">hindent-format 插件修改后代码</div></div><div class="fold"><figure class="highlight javascript"><figcaption><span>extension.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="built_in">Object</span>.defineProperty(exports, <span class="string">"__esModule"</span>, &#123; <span class="attr">value</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"><span class="keyword">const</span> vscode = <span class="built_in">require</span>(<span class="string">"vscode"</span>);</span><br><span class="line"><span class="keyword">const</span> child_process = <span class="built_in">require</span>(<span class="string">"child_process"</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">"path"</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HindentFormatEditsProvider</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>() &#123;</span><br><span class="line">        <span class="keyword">this</span>.hindentAvailable = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.enable = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">this</span>.command = <span class="string">"hindent"</span>;</span><br><span class="line">        <span class="keyword">this</span>.arguments = [];</span><br><span class="line">        <span class="keyword">this</span>.configure();</span><br><span class="line">    &#125;</span><br><span class="line">    configure() &#123;</span><br><span class="line">        <span class="keyword">const</span> config = vscode.workspace.getConfiguration(<span class="string">'hindent-format'</span>);</span><br><span class="line">        <span class="keyword">this</span>.enable = config.get(<span class="string">'enable'</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">this</span>.command = config.get(<span class="string">'command'</span>, <span class="string">'hindent'</span>);</span><br><span class="line">        <span class="keyword">this</span>.arguments = [</span><br><span class="line">            <span class="string">"--indent-size"</span>, <span class="string">"4"</span>,</span><br><span class="line">            <span class="string">"--line-length"</span>, <span class="number">100</span></span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.enable) &#123;</span><br><span class="line">            <span class="keyword">let</span> result = child_process.spawnSync(<span class="keyword">this</span>.command, [<span class="string">'--version'</span>]);</span><br><span class="line">            <span class="keyword">if</span> (!result.status) &#123;</span><br><span class="line">                <span class="keyword">this</span>.hindentAvailable = <span class="literal">true</span>;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"hindent-format: using executable: "</span> + <span class="keyword">this</span>.command);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.hindentAvailable = <span class="literal">false</span>;</span><br><span class="line">                vscode.window.showWarningMessage(<span class="string">"hindent-format: cannot execute hindent command: "</span> + <span class="keyword">this</span>.command);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    formatHindent(text) &#123;</span><br><span class="line">        <span class="keyword">let</span> cwd = <span class="string">'.'</span>;</span><br><span class="line">        <span class="comment">// May this helps hindent pick up the .hindent.yaml file</span></span><br><span class="line">        <span class="keyword">if</span> (vscode.window.activeTextEditor) &#123;</span><br><span class="line">            <span class="keyword">let</span> documentPath = vscode.window.activeTextEditor.document.uri.fsPath;</span><br><span class="line">            cwd = path.dirname(documentPath);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> result = child_process.spawnSync(<span class="keyword">this</span>.command, <span class="keyword">this</span>.arguments, &#123;</span><br><span class="line">            <span class="string">'cwd'</span>: cwd,</span><br><span class="line">            <span class="string">'input'</span>: text</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">if</span> (!result.status) &#123;</span><br><span class="line">            <span class="keyword">return</span> result.stdout.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            vscode.window.showWarningMessage(result.stderr.toString().split(<span class="string">'\n'</span>)[<span class="number">0</span>]);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    provideDocumentFormattingEdits(<span class="built_in">document</span>, options, token) &#123;</span><br><span class="line">        <span class="keyword">let</span> formatted = <span class="keyword">this</span>.formatHindent(<span class="built_in">document</span>.getText());</span><br><span class="line">        <span class="keyword">if</span> (formatted !== <span class="string">''</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> range = <span class="built_in">document</span>.validateRange(<span class="keyword">new</span> vscode.Range(<span class="number">0</span>, <span class="number">0</span>, <span class="built_in">Number</span>.MAX_VALUE, <span class="built_in">Number</span>.MAX_VALUE));</span><br><span class="line">            <span class="keyword">return</span> [vscode.TextEdit.replace(range, formatted)];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> [];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    provideDocumentRangeFormattingEdits(<span class="built_in">document</span>, range, options, token) &#123;</span><br><span class="line">        <span class="keyword">let</span> formatted = <span class="keyword">this</span>.formatHindent(<span class="built_in">document</span>.getText(range));</span><br><span class="line">        <span class="keyword">if</span> (formatted !== <span class="string">''</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> [vscode.TextEdit.replace(range, formatted)];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> [];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">activate</span>(<span class="params">context</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"hindent-format: active!"</span>);</span><br><span class="line">    <span class="keyword">let</span> hindentFormatProvider = <span class="keyword">new</span> HindentFormatEditsProvider();</span><br><span class="line">    <span class="keyword">if</span> (hindentFormatProvider.hindentAvailable) &#123;</span><br><span class="line">        vscode.languages.registerDocumentFormattingEditProvider(<span class="string">'haskell'</span>, hindentFormatProvider);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"hindent-format: registered document formatting provider"</span>);</span><br><span class="line">        vscode.languages.registerDocumentRangeFormattingEditProvider(<span class="string">'haskell'</span>, hindentFormatProvider);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"hindent-format: registered selection formatting provider"</span>);</span><br><span class="line">        vscode.commands.registerTextEditorCommand(<span class="string">'hindent-format.format'</span>, (textEditor, edit, args) =&gt; &#123;</span><br><span class="line">            <span class="keyword">let</span> range = textEditor.selection.with();</span><br><span class="line">            <span class="keyword">if</span> (range.isEmpty) &#123;</span><br><span class="line">                range = textEditor.document.validateRange(<span class="keyword">new</span> vscode.Range(<span class="number">0</span>, <span class="number">0</span>, <span class="built_in">Number</span>.MAX_VALUE, <span class="built_in">Number</span>.MAX_VALUE));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">let</span> formatted = hindentFormatProvider.formatHindent(textEditor.document.getText(range));</span><br><span class="line">            <span class="keyword">if</span> (formatted !== <span class="string">''</span>) &#123;</span><br><span class="line">                edit.replace(range, formatted);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"hindent-format: registered palette command"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">exports.activate = activate;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deactivate</span>(<span class="params"></span>) </span>&#123; &#125;</span><br><span class="line">exports.deactivate = deactivate;</span><br><span class="line"><span class="comment">//# sourceMappingURL=extension.js.map</span></span><br></pre></td></tr></table></figure></div></div><p>个人更青睐 <code>brittany</code> 格式化的效果。 但目前 VSCode 插件 <code>brittany</code> 对未保存文档不能正确执行格式化，同样需要修改插件源代码（当前版本 0.0.1）</p><div><div class="fold_hider"><div class="close hider_title">brittany 插件修改后代码</div></div><div class="fold"><figure class="highlight javascript"><figcaption><span>extension.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="built_in">Object</span>.defineProperty(exports, <span class="string">"__esModule"</span>, &#123; <span class="attr">value</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"><span class="keyword">const</span> vscode = <span class="built_in">require</span>(<span class="string">"vscode"</span>);</span><br><span class="line"><span class="keyword">const</span> proc = <span class="built_in">require</span>(<span class="string">"child_process"</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">"path"</span>);</span><br><span class="line"><span class="keyword">const</span> tmp = <span class="built_in">require</span>(<span class="string">"tmp"</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">activate</span>(<span class="params">context</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Use the console to output diagnostic information (console.log) and errors (console.error)</span></span><br><span class="line">    <span class="comment">// This line of code will only be executed once when your extension is activated</span></span><br><span class="line">    <span class="keyword">if</span> (isEnabled() === <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"brittany extension disabled; not registering it."</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"Registering brittany extension"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    context.subscriptions.push(vscode.languages.registerDocumentRangeFormattingEditProvider(<span class="string">'haskell'</span>, &#123;</span><br><span class="line">        provideDocumentRangeFormattingEdits(<span class="built_in">document</span>, range) &#123;</span><br><span class="line">            <span class="keyword">if</span> (isEnabled() === <span class="literal">false</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> reject([]);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'brittany asked to format'</span>);</span><br><span class="line">            <span class="comment">// If we're formatting the whole document</span></span><br><span class="line">            <span class="comment">// Brittany operates on files only, so we need to </span></span><br><span class="line">            <span class="comment">// Improvement <span class="doctag">TODO:</span> Instead of making a tmp file, pass the source code into STDIN.</span></span><br><span class="line">            <span class="comment">// Could also potentially unify this approach with the full-file approach.</span></span><br><span class="line">            <span class="keyword">let</span> substring = <span class="built_in">document</span>.getText(range);</span><br><span class="line">            <span class="keyword">let</span> tmpobj = tmp.fileSync();</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'brittany: Temporary file: '</span>, tmpobj.name);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">                fs.write(tmpobj.fd, substring, (err, written, str) =&gt; &#123;</span><br><span class="line">                    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                        <span class="keyword">return</span> reject(err);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> resolve(runBrittany(<span class="built_in">document</span>, range, tmpobj.name, tmpobj));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line">&#125;</span><br><span class="line">exports.activate = activate;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">runBrittany</span>(<span class="params">document, range, inputFilename, tmpobj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> file = <span class="built_in">document</span>.uri.fsPath;</span><br><span class="line">        <span class="keyword">var</span> cmd = brittanyCmd() + <span class="string">" \""</span> + inputFilename + <span class="string">"\""</span></span><br><span class="line">        +<span class="string">" "</span> + additionalFlags();</span><br><span class="line">        <span class="keyword">var</span> maybeWorkspaceFolder = vscode.workspace.getWorkspaceFolder(<span class="built_in">document</span>.uri);</span><br><span class="line">        <span class="keyword">var</span> dir = maybeWorkspaceFolder !== <span class="literal">undefined</span> ? maybeWorkspaceFolder.uri.fsPath : path.dirname(<span class="built_in">document</span>.uri.fsPath);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"brittany command is: "</span> + cmd);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"brittany folder is: "</span> + dir);</span><br><span class="line">        <span class="keyword">var</span> options = &#123;</span><br><span class="line">            encoding: <span class="string">'utf8'</span>,</span><br><span class="line">            <span class="comment">// timeout: 0,</span></span><br><span class="line">            <span class="comment">// maxBuffer: 200 * 1024, // ?</span></span><br><span class="line">            <span class="comment">// killSignal: 'SIGTERM',</span></span><br><span class="line">            cwd: dir,</span><br><span class="line">        &#125;;</span><br><span class="line">        proc.exec(cmd, options, (error, stdout, stderr) =&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (error) &#123;</span><br><span class="line">                <span class="keyword">if</span> (tmpobj) &#123;</span><br><span class="line">                    tmpobj.removeCallback();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">console</span>.error(<span class="string">"Error running brittany:"</span>);</span><br><span class="line">                <span class="built_in">console</span>.error(error);</span><br><span class="line">                <span class="built_in">console</span>.error(stdout);</span><br><span class="line">                <span class="built_in">console</span>.error(stderr);</span><br><span class="line">                vscode.window.showErrorMessage(<span class="string">"Failed to run brittany; see the developer tools console for details. "</span> + error);</span><br><span class="line">                <span class="keyword">return</span> reject([]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (tmpobj) &#123;</span><br><span class="line">                    tmpobj.removeCallback();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> resolve([vscode.TextEdit.replace(range, stdout)]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// this method is called when your extension is deactivated</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deactivate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">exports.deactivate = deactivate;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">brittanyCmd</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> vscode.workspace.getConfiguration(<span class="string">"brittany"</span>)[<span class="string">"path"</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">additionalFlags</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> vscode.workspace.getConfiguration(<span class="string">"brittany"</span>)[<span class="string">"additional-flags"</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isEnabled</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> vscode.workspace.getConfiguration(<span class="string">"brittany"</span>)[<span class="string">"enable"</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fullDocumentRange</span>(<span class="params">document</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> lastLineId = <span class="built_in">document</span>.lineCount - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> vscode.Range(<span class="number">0</span>, <span class="number">0</span>, lastLineId, <span class="built_in">document</span>.lineAt(lastLineId).text.length);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//# sourceMappingURL=extension.js.map</span></span><br></pre></td></tr></table></figure></div></div><p>另外，建议利用 <code>config.yaml</code> 文件搭配 <code>brittany</code> 进行深度配置。在控制台执行一次 <code>brittany</code> 命令，生成的配置文件位置为 <code>%APPDATA%\brittany\config.yaml</code>，示例配置如下。</p><div><div class="fold_hider"><div class="close hider_title">brittany 配置文件</div></div><div class="fold"><figure class="highlight yaml"><figcaption><span>%APPDATA%\brittany\config.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">conf_debug:</span></span><br><span class="line"><span class="attr">  dconf_roundtrip_exactprint_only:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  dconf_dump_bridoc_simpl_par:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  dconf_dump_ast_unknown:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  dconf_dump_bridoc_simpl_floating:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  dconf_dump_config:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  dconf_dump_bridoc_raw:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  dconf_dump_bridoc_final:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  dconf_dump_bridoc_simpl_alt:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  dconf_dump_bridoc_simpl_indent:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  dconf_dump_annotations:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  dconf_dump_bridoc_simpl_columns:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  dconf_dump_ast_full:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">conf_forward:</span></span><br><span class="line"><span class="attr">  options_ghc:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="bullet">-XLambdaCase</span></span><br><span class="line"><span class="bullet">    -</span> <span class="bullet">-XMultiWayIf</span></span><br><span class="line"><span class="bullet">    -</span> <span class="bullet">-XGADTs</span></span><br><span class="line"><span class="bullet">    -</span> <span class="bullet">-XPatternGuards</span></span><br><span class="line"><span class="bullet">    -</span> <span class="bullet">-XViewPatterns</span></span><br><span class="line"><span class="bullet">    -</span> <span class="bullet">-XRecursiveDo</span></span><br><span class="line"><span class="bullet">    -</span> <span class="bullet">-XTupleSections</span></span><br><span class="line"><span class="bullet">    -</span> <span class="bullet">-XExplicitForAll</span></span><br><span class="line"><span class="bullet">    -</span> <span class="bullet">-XImplicitParams</span></span><br><span class="line"><span class="bullet">    -</span> <span class="bullet">-XQuasiQuotes</span></span><br><span class="line"><span class="bullet">    -</span> <span class="bullet">-XTemplateHaskell</span></span><br><span class="line"><span class="bullet">    -</span> <span class="bullet">-XBangPatterns</span></span><br><span class="line"><span class="attr">conf_errorHandling:</span></span><br><span class="line"><span class="attr">  econf_ExactPrintFallback:</span> <span class="string">ExactPrintFallbackModeInline</span></span><br><span class="line"><span class="attr">  econf_Werror:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  econf_omit_output_valid_check:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  econf_produceOutputOnErrors:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">conf_preprocessor:</span></span><br><span class="line"><span class="attr">  ppconf_CPPMode:</span> <span class="string">CPPModeAbort</span></span><br><span class="line"><span class="attr">  ppconf_hackAroundIncludes:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">conf_obfuscate:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">conf_roundtrip_exactprint_only:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">conf_version:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">conf_layout:</span></span><br><span class="line"><span class="attr">  lconfig_reformatModulePreamble:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  lconfig_altChooser:</span></span><br><span class="line"><span class="attr">    tag:</span> <span class="string">AltChooserBoundedSearch</span></span><br><span class="line"><span class="attr">    contents:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">  lconfig_allowSingleLineExportList:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  lconfig_importColumn:</span> <span class="number">50</span></span><br><span class="line"><span class="attr">  lconfig_hangingTypeSignature:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  lconfig_importAsColumn:</span> <span class="number">50</span></span><br><span class="line"><span class="attr">  lconfig_alignmentLimit:</span> <span class="number">30</span></span><br><span class="line"><span class="attr">  lconfig_indentListSpecial:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  lconfig_indentAmount:</span> <span class="number">4</span></span><br><span class="line"><span class="attr">  lconfig_alignmentBreakOnMultiline:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  lconfig_cols:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">  lconfig_indentPolicy:</span> <span class="string">IndentPolicyFree</span></span><br><span class="line"><span class="attr">  lconfig_indentWhereSpecial:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  lconfig_columnAlignMode:</span></span><br><span class="line"><span class="attr">    tag:</span> <span class="string">ColumnAlignModeMajority</span></span><br><span class="line"><span class="attr">    contents:</span> <span class="number">0.7</span></span><br></pre></td></tr></table></figure></div></div><h3 id="参考">参考</h3><ul><li><a href="https://blog.ramdoot.in/installing-haskell-stack-in-windows-7c8fd2c79f" target="_blank" rel="noopener">Installing Haskell stack (in Windows)</a></li><li><a href="https://www.zybuluo.com/delight/note/503796" target="_blank" rel="noopener">重拾Haskell</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;img src=&quot;/img/haskell-logo.svg&quot; width=&quot;45%&quot;&gt; &lt;br&gt;
An advanced, purely functional programming language&lt;/blockquote&gt;
&lt;p&gt;抛却「Haskell 语言能装逼」这一光环，笔者认为学习 Haskell 的另一主要动机在于尝试体验另一种编程思维，即「做什么」而非「怎么做」，Haskell 写出的程序更像是人脑的思维而不是机器的思维。当然了，装 x 也 hin 重要。&lt;/p&gt;
&lt;p&gt;目前 &lt;a href=&quot;https://www.haskell.org/downloads&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Haskell 官方下载页&lt;/a&gt; 推荐三种下载方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.haskell.org/downloads#minimal&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;最小安装程序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.haskellstack.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.haskell.org/downloads#platform&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Haskell 平台&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总体而言，Haskell 在 *nix / OS X 操作系统下的生态优于 Windows 环境，但对于熟悉 Windows 操作、醉心于各类工具流的笔者而言，必须要在 Windows 系统下完成环境搭建。为方便后续各类包的安装更新等操作，这里采用 &lt;a href=&quot;https://www.haskell.org/cabal&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Cabal&lt;/a&gt; 的替代品 – stack。以下诸多关键操作均参考 &lt;a href=&quot;https://blog.ramdoot.in&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Arvind Devarajan 的博客&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Development and Deployment" scheme="http://notes.shinemic.cn/categories/Development-and-Deployment/"/>
    
    
      <category term="Windows" scheme="http://notes.shinemic.cn/tags/Windows/"/>
    
      <category term="Stack" scheme="http://notes.shinemic.cn/tags/Stack/"/>
    
      <category term="Haskell" scheme="http://notes.shinemic.cn/tags/Haskell/"/>
    
  </entry>
  
  <entry>
    <title>Lingo 学习（一）</title>
    <link href="http://notes.shinemic.cn/learning-lingo-01/"/>
    <id>http://notes.shinemic.cn/learning-lingo-01/</id>
    <published>2018-07-14T08:15:51.000Z</published>
    <updated>2021-02-28T03:14:52.280Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境搭建">环境搭建</h2><ul><li>Lingo 17.0 (Windows 10 x64)</li><li>Notepad++ 7.4.2 x86<ul><li>NppExec</li><li>Visimulator</li><li><a href="http://bbs.pinggu.org/thread-3875796-1-1.html" target="_blank" rel="noopener">语法高亮及代码补全</a></li></ul></li></ul><a id="more"></a><h2 id="lingo-界面速览">Lingo 界面速览</h2><h3 id="文件类型">文件类型</h3><table><thead><tr class="header"><th style="text-align: center;">扩展名</th><th style="text-align: left;">文件类型</th><th style="text-align: center;">扩展名</th><th style="text-align: left;">文件类型</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">.lg4</td><td style="text-align: left;">Windows 下模型文件，支持字体、格式、OLE</td><td style="text-align: center;">.lng</td><td style="text-align: left;">纯文本格式模型文件</td></tr><tr class="even"><td style="text-align: center;">.ldt</td><td style="text-align: left;">数据文件</td><td style="text-align: center;">.ltf</td><td style="text-align: left;">命令脚本文件</td></tr><tr class="odd"><td style="text-align: center;">.ltx</td><td style="text-align: left;">Lindo 语法的模型文件</td><td style="text-align: center;">.lgr</td><td style="text-align: left;">报告文件</td></tr></tbody></table><h3 id="lingo-菜单">Lingo 菜单</h3><table><thead><tr class="header"><th style="text-align: center;">中文</th><th style="text-align: center;">英文</th><th style="text-align: center;">中文</th><th style="text-align: center;">英文</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">求解结果</td><td style="text-align: center;">Solution</td><td style="text-align: center;">灵敏性分析</td><td style="text-align: center;">Range</td></tr><tr class="even"><td style="text-align: center;">生成模型展开形式</td><td style="text-align: center;">Generate</td><td style="text-align: center;">生成图形</td><td style="text-align: center;">Picture</td></tr><tr class="odd"><td style="text-align: center;">调试</td><td style="text-align: center;">Debug</td><td style="text-align: center;">模型统计资料</td><td style="text-align: center;">Model Statistics</td></tr><tr class="even"><td style="text-align: center;">查看</td><td style="text-align: center;">Look</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr></tbody></table><h3 id="求解器状态窗口信息">求解器状态窗口信息</h3><ul><li>变量数量 (Variables)</li><li>约束变量 (Constraints)</li><li>非零系数数量 (Nonzeroes)</li><li>内存使用量 (Generator Memory Used)</li><li>已运行时间 (Elapsed Runtime)</li><li>求解器状态 (Solver Status)<ul><li>模型类型 (Model Class)：线性规划 (LP)、二次规划 (QP)、整数线性规划 (ILP)、整数二次规划 (IQP)、纯整数线性规划 (PILP)、纯整数二次规划 (PIQP)、非线性规划 (NLP)、混合整数规划 (MIP)、整数非线性工 (INLP)、纯整数非线性规划 (PINLP)、混合整数非线性规划 (MINLP)</li><li>当前解的状态 (State)：全局最优解 (Global Optimum)、局部最优解 (Local Optimum)、可行解 (Feasible)、不可行解 (Infeasible)、无界 (Unbounded)、中断 (Interrupted)、未确定 (Undetermined)</li><li>当前解的目标函数值 (Objective)</li><li>当前约束不满足的总量 (Infeasibility)</li><li>迭代次数 (Iterations)</li><li>扩展求解器状态 (Extended Solver Status)：特殊算法类型 (Solver Type)、可行解的最佳目标函数值 (Best Obj)、目标函数值的界限 (Obj Bound)、特殊求解程序运行步数 (Steps)、有效步数 (Active)</li></ul></li></ul><h2 id="lingo-语言速览">Lingo 语言速览</h2><h3 id="逻辑运算符">逻辑运算符</h3><table><thead><tr class="header"><th style="text-align: center;">运算符</th><th style="text-align: left;">作用</th><th style="text-align: center;">运算符</th><th style="text-align: left;">作用</th><th style="text-align: center;">运算符</th><th style="text-align: left;">作用</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">#EQ#</td><td style="text-align: left;">两操作数相等时为真</td><td style="text-align: center;">#NE#</td><td style="text-align: left;">两操作数不等时为真</td><td style="text-align: center;">#GT#</td><td style="text-align: left;">左边（严格）大于右边时为真</td></tr><tr class="even"><td style="text-align: center;">#GE#</td><td style="text-align: left;">左边大于或等于右边时为真</td><td style="text-align: center;">#LT#</td><td style="text-align: left;">左边（严格）小于右边时为真</td><td style="text-align: center;">#LE#</td><td style="text-align: left;">左边小于或等于右边时为真</td></tr><tr class="odd"><td style="text-align: center;">#NOT#</td><td style="text-align: left;">取反</td><td style="text-align: center;">#AND#</td><td style="text-align: left;">逻辑与</td><td style="text-align: center;">#OR#</td><td style="text-align: left;">逻辑或</td></tr></tbody></table><p>注：#AND# 和 #OR# 优先级较低，但高于 &lt;=、=、&gt;=。</p><h3 id="数学函数">数学函数</h3><table><thead><tr class="header"><th style="text-align: left;">函数名</th><th style="text-align: left;">解释</th><th style="text-align: left;">函数名</th><th style="text-align: left;">解释</th><th style="text-align: left;">函数名</th><th style="text-align: left;">解释</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><span class="citation" data-cites="abs">@abs</span>(x)</td><td style="text-align: left;">绝对值</td><td style="text-align: left;"><span class="citation" data-cites="acos">@acos</span>(x)</td><td style="text-align: left;">反余弦</td><td style="text-align: left;"><span class="citation" data-cites="acosh">@acosh</span>(x)</td><td style="text-align: left;">反双曲余弦</td></tr><tr class="even"><td style="text-align: left;"><span class="citation" data-cites="asin">@asin</span>(x)</td><td style="text-align: left;">反正弦</td><td style="text-align: left;"><span class="citation" data-cites="asinh">@asinh</span>(x)</td><td style="text-align: left;">反双曲正弦</td><td style="text-align: left;"><span class="citation" data-cites="atan">@atan</span>(x)</td><td style="text-align: left;">反正切</td></tr><tr class="odd"><td style="text-align: left;"><span class="citation" data-cites="atan2">@atan2</span>(x, y)</td><td style="text-align: left;"><span class="math inline">\(\arctan (y/x)\)</span></td><td style="text-align: left;"><span class="citation" data-cites="atanh">@atanh</span>(x)</td><td style="text-align: left;">反双曲正切</td><td style="text-align: left;"><span class="citation" data-cites="cos">@cos</span>(x)</td><td style="text-align: left;">余弦</td></tr><tr class="even"><td style="text-align: left;"><span class="citation" data-cites="cosh">@cosh</span>(x)</td><td style="text-align: left;">双曲余弦</td><td style="text-align: left;"><span class="citation" data-cites="exp">@exp</span>(x)</td><td style="text-align: left;"><span class="math inline">\(e^x\)</span></td><td style="text-align: left;"><span class="citation" data-cites="floor">@floor</span>(x)</td><td style="text-align: left;">向 0 取整</td></tr><tr class="odd"><td style="text-align: left;"><span class="citation" data-cites="int">@int</span>(x)</td><td style="text-align: left;">向负无穷取整</td><td style="text-align: left;"><span class="citation" data-cites="integral">@integral</span>(proc, x, xl, xu, y)</td><td style="text-align: left;">辛普森数值积分</td><td style="text-align: left;"><span class="citation" data-cites="lgm">@lgm</span>(x)</td><td style="text-align: left;">Gamma 函数自然对数</td></tr><tr class="even"><td style="text-align: left;"><span class="citation" data-cites="log">@log</span>(x)</td><td style="text-align: left;">自然对数</td><td style="text-align: left;"><span class="citation" data-cites="log10">@log10</span>(x)</td><td style="text-align: left;">10 为底对数</td><td style="text-align: left;"><span class="citation" data-cites="logb">@logb</span>(x, b)</td><td style="text-align: left;">b 为底对数</td></tr><tr class="odd"><td style="text-align: left;"><span class="citation" data-cites="mod">@mod</span>(x, y)</td><td style="text-align: left;">取模</td><td style="text-align: left;"><span class="citation" data-cites="pi">@pi</span>()</td><td style="text-align: left;">圆周率</td><td style="text-align: left;"><span class="citation" data-cites="pow">@pow</span>(x, y)</td><td style="text-align: left;"><span class="math inline">\(x^y\)</span></td></tr><tr class="even"><td style="text-align: left;"><span class="citation" data-cites="round">@round</span>(x, n)</td><td style="text-align: left;">最近四舍五入</td><td style="text-align: left;"><span class="citation" data-cites="rounddown">@rounddown</span>(x, n)</td><td style="text-align: left;">向零四舍五入</td><td style="text-align: left;"><span class="citation" data-cites="roundup">@roundup</span>(x, n)</td><td style="text-align: left;">远离零四舍五入</td></tr><tr class="odd"><td style="text-align: left;"><span class="citation" data-cites="sign">@sign</span>(x)</td><td style="text-align: left;">符号函数</td><td style="text-align: left;"><span class="citation" data-cites="sin">@sin</span>(x)</td><td style="text-align: left;">正弦</td><td style="text-align: left;"><span class="citation" data-cites="sinh">@sinh</span>(x)</td><td style="text-align: left;">双曲正弦</td></tr><tr class="even"><td style="text-align: left;"><span class="citation" data-cites="smax">@smax</span>(x1, x2, …, xn)</td><td style="text-align: left;">最大值</td><td style="text-align: left;"><span class="citation" data-cites="smin">@smin</span>(x1, x2, …, xn)</td><td style="text-align: left;">最小值</td><td style="text-align: left;"><span class="citation" data-cites="sqr">@sqr</span>(x)</td><td style="text-align: left;">平方</td></tr><tr class="odd"><td style="text-align: left;"><span class="citation" data-cites="sqrt">@sqrt</span>(x)</td><td style="text-align: left;">开方</td><td style="text-align: left;"><span class="citation" data-cites="tan">@tan</span>(x)</td><td style="text-align: left;">正切</td><td style="text-align: left;"><span class="citation" data-cites="tanh">@tanh</span>(x)</td><td style="text-align: left;">双曲正切</td></tr></tbody></table><h3 id="概率函数">概率函数</h3><table style="width:100%;"><colgroup><col style="width: 16%"><col style="width: 16%"><col style="width: 16%"><col style="width: 16%"><col style="width: 16%"><col style="width: 16%"></colgroup><thead><tr class="header"><th style="text-align: left;">函数名</th><th style="text-align: left;">解释</th><th style="text-align: left;">函数名</th><th style="text-align: left;">解释</th><th style="text-align: left;">函数名</th><th style="text-align: left;">解释</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><span class="citation" data-cites="norminv">@norminv</span>(p, mu, sigma)</td><td style="text-align: left;">正态分布下分位数</td><td style="text-align: left;"><span class="citation" data-cites="normsinv">@normsinv</span>(p)</td><td style="text-align: left;">标准正态分布分位数</td><td style="text-align: left;"><span class="citation" data-cites="pbn">@pbn</span>(p, n, x)</td><td style="text-align: left;">二项分布 CDF 值</td></tr><tr class="even"><td style="text-align: left;"><span class="citation" data-cites="pcx">@pcx</span>(n, x)</td><td style="text-align: left;">卡方分布 CDF 值</td><td style="text-align: left;"><span class="citation" data-cites="peb">@peb</span>(a, x)</td><td style="text-align: left;">允许无穷排队的 Erlang 繁忙概率</td><td style="text-align: left;"><span class="citation" data-cites="pel">@pel</span>(a, x)</td><td style="text-align: left;">不允许无穷排队的 Erlang 繁忙概率</td></tr><tr class="odd"><td style="text-align: left;"><span class="citation" data-cites="pfd">@pfd</span>(n, d, x)</td><td style="text-align: left;">F 分布 CDF 值</td><td style="text-align: left;"><span class="citation" data-cites="pfs">@pfs</span>(a, x, c)</td><td style="text-align: left;">Poisson 服务系统期望值</td><td style="text-align: left;"><span class="citation" data-cites="phg">@phg</span>(pop, g, n, x)</td><td style="text-align: left;">超几何分布概率值</td></tr><tr class="even"><td style="text-align: left;"><span class="citation" data-cites="ppl">@ppl</span>(a, x)</td><td style="text-align: left;">泊松分布线性损失函数</td><td style="text-align: left;"><span class="citation" data-cites="pps">@pps</span>(a, x)</td><td style="text-align: left;">泊松分布 CDF 值</td><td style="text-align: left;"><span class="citation" data-cites="psl">@psl</span>(x)</td><td style="text-align: left;">单位正态线性损失函数</td></tr><tr class="odd"><td style="text-align: left;"><span class="citation" data-cites="psn">@psn</span>(x)</td><td style="text-align: left;">标准正态分布 CDF 值</td><td style="text-align: left;"><span class="citation" data-cites="ptd">@ptd</span>(n, x)</td><td style="text-align: left;">t 分布 CDF 值</td><td style="text-align: left;"><span class="citation" data-cites="qrand">@qrand</span>(seed)</td><td style="text-align: left;">(0, 1) 间随机数</td></tr></tbody></table><h3 id="变量界定函数">变量界定函数</h3><table style="width:100%;"><colgroup><col style="width: 16%"><col style="width: 16%"><col style="width: 16%"><col style="width: 16%"><col style="width: 16%"><col style="width: 16%"></colgroup><thead><tr class="header"><th style="text-align: left;">函数名</th><th style="text-align: left;">解释</th><th style="text-align: left;">函数名</th><th style="text-align: left;">解释</th><th style="text-align: left;">函数名</th><th style="text-align: left;">解释</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><span class="citation" data-cites="bin">@bin</span>(variable)</td><td style="text-align: left;">限制变量取 0 或 1</td><td style="text-align: left;"><span class="citation" data-cites="bnd">@bnd</span>(lower, variable, upper)</td><td style="text-align: left;">限制 <span class="math inline">\(L\leqslant x \leqslant U\)</span></td><td style="text-align: left;"><span class="citation" data-cites="free">@free</span>(variable)</td><td style="text-align: left;">取消变量限制，可取任意实数</td></tr><tr class="even"><td style="text-align: left;"><span class="citation" data-cites="gin">@gin</span>(variable)</td><td style="text-align: left;">限制为整数</td><td style="text-align: left;"><span class="citation" data-cites="priority">@priority</span>(variable, priority)</td><td style="text-align: left;">设置优先级</td><td style="text-align: left;"><span class="citation" data-cites="semic">@semic</span>(lower, variable, upper)</td><td style="text-align: left;">或者为 0，或者在区间 (lower, upper)</td></tr></tbody></table><h3 id="集合操作函数">集合操作函数</h3><ul><li><span class="citation" data-cites="for">@for</span>(s: e)</li><li><span class="citation" data-cites="max">@max</span>(s: e)</li><li><span class="citation" data-cites="prod">@prod</span>(s: e)</li><li><span class="citation" data-cites="size">@size</span>(s)</li><li><span class="citation" data-cites="insert">@insert</span>(s, idx)</li><li><span class="citation" data-cites="sum">@sum</span>(s: e)</li><li><span class="citation" data-cites="min">@min</span>(s: e)</li><li><span class="citation" data-cites="in">@in</span>(s, e)</li><li><span class="citation" data-cites="index">@index</span>(s: e)</li><li><span class="citation" data-cites="wrap">@wrap</span>(idx, limit)</li></ul><hr><h2 id="一些经典问题">一些经典问题</h2><h3 id="运输问题">运输问题</h3><p>假设 Wireless Widget有 6 个供货仓库，货物分别发往 8 个供销商。每个仓库有一定的库存量，现要制定出最小化运输成本，使得运输方案达到每个供销商需求的运输方案。</p><!-- more --><p>已知信息如下：</p><table><thead><tr class="header"><th style="text-align: center;">仓库</th><th style="text-align: center;">库存</th><th style="text-align: center;">供销商</th><th style="text-align: center;">需求</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">1</td><td style="text-align: center;">60</td><td style="text-align: center;">1</td><td style="text-align: center;">35</td></tr><tr class="even"><td style="text-align: center;">2</td><td style="text-align: center;">55</td><td style="text-align: center;">2</td><td style="text-align: center;">37</td></tr><tr class="odd"><td style="text-align: center;">3</td><td style="text-align: center;">51</td><td style="text-align: center;">3</td><td style="text-align: center;">22</td></tr><tr class="even"><td style="text-align: center;">4</td><td style="text-align: center;">43</td><td style="text-align: center;">4</td><td style="text-align: center;">32</td></tr><tr class="odd"><td style="text-align: center;">5</td><td style="text-align: center;">41</td><td style="text-align: center;">5</td><td style="text-align: center;">41</td></tr><tr class="even"><td style="text-align: center;">6</td><td style="text-align: center;">52</td><td style="text-align: center;">6</td><td style="text-align: center;">32</td></tr><tr class="odd"><td style="text-align: center;"></td><td style="text-align: center;"></td><td style="text-align: center;">7</td><td style="text-align: center;">43</td></tr><tr class="even"><td style="text-align: center;"></td><td style="text-align: center;"></td><td style="text-align: center;">8</td><td style="text-align: center;">38</td></tr></tbody></table><p>每个仓库（WH1 ~ WH6）到每个供销商的单位运费表如下：</p><table><thead><tr class="header"><th style="text-align: center;"></th><th style="text-align: center;">V1</th><th style="text-align: center;">V2</th><th style="text-align: center;">V3</th><th style="text-align: center;">V4</th><th style="text-align: center;">V5</th><th style="text-align: center;">V6</th><th style="text-align: center;">V7</th><th style="text-align: center;">V8</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><strong>WH1</strong></td><td style="text-align: center;">6</td><td style="text-align: center;">2</td><td style="text-align: center;">6</td><td style="text-align: center;">7</td><td style="text-align: center;">4</td><td style="text-align: center;">2</td><td style="text-align: center;">5</td><td style="text-align: center;">9</td></tr><tr class="even"><td style="text-align: center;"><strong>WH2</strong></td><td style="text-align: center;">4</td><td style="text-align: center;">9</td><td style="text-align: center;">5</td><td style="text-align: center;">3</td><td style="text-align: center;">8</td><td style="text-align: center;">5</td><td style="text-align: center;">8</td><td style="text-align: center;">2</td></tr><tr class="odd"><td style="text-align: center;"><strong>WH3</strong></td><td style="text-align: center;">5</td><td style="text-align: center;">2</td><td style="text-align: center;">1</td><td style="text-align: center;">9</td><td style="text-align: center;">7</td><td style="text-align: center;">4</td><td style="text-align: center;">3</td><td style="text-align: center;">3</td></tr><tr class="even"><td style="text-align: center;"><strong>WH4</strong></td><td style="text-align: center;">7</td><td style="text-align: center;">6</td><td style="text-align: center;">7</td><td style="text-align: center;">3</td><td style="text-align: center;">9</td><td style="text-align: center;">2</td><td style="text-align: center;">7</td><td style="text-align: center;">1</td></tr><tr class="odd"><td style="text-align: center;"><strong>WH5</strong></td><td style="text-align: center;">2</td><td style="text-align: center;">3</td><td style="text-align: center;">9</td><td style="text-align: center;">5</td><td style="text-align: center;">7</td><td style="text-align: center;">2</td><td style="text-align: center;">6</td><td style="text-align: center;">5</td></tr><tr class="even"><td style="text-align: center;"><strong>WH6</strong></td><td style="text-align: center;">5</td><td style="text-align: center;">5</td><td style="text-align: center;">2</td><td style="text-align: center;">2</td><td style="text-align: center;">8</td><td style="text-align: center;">1</td><td style="text-align: center;">4</td><td style="text-align: center;">3</td></tr></tbody></table><p>对问题建模，记 <span class="math inline">\(\text{volume}_{ij}\)</span> 为第 <span class="math inline">\(i\)</span> 个仓库到第 <span class="math inline">\(j\)</span> 个供销商的货运量，<span class="math inline">\(\text{cost}_{ij}\)</span> 表示第 <span class="math inline">\(i\)</span> 个仓库到第 <span class="math inline">\(j\)</span> 个供销商的单位货物运价，<span class="math inline">\(\text{capacity}_i\)</span> 表示第 <span class="math inline">\(i\)</span> 个仓库的最大供货量，<span class="math inline">\(\text{demand}_j\)</span> 表示第 <span class="math inline">\(j\)</span> 个供销商的订货量。</p><p>目标函数是令总运输费用最少。约束条件：</p><ul><li>各仓库的出货量不超过其库存</li><li>各供销商收到的货物总量等于订货数</li><li>决策变量 <span class="math inline">\(\text{cost}_{ij}\)</span> 非负。</li></ul><p>数学表达为：</p><p><span class="math display">\[\begin{array}{cl}    \min &amp; z = \sum\limits_{i=1}^6 \sum\limits_{j=1}^8 \text{cost}_{ij}\ \text{volume}_{ij} \\    \text{s.t.} &amp; \begin{cases}        \sum\limits_{j=1}^8 \text{volume}_{ij} \leqslant \text{capacity}_i, &amp; i = 1,2,\ldots,6 \\        \sum\limits_{i=1}^6 \text{volume}_{ij} = \text{demand}_j, &amp; j = 1,2,\ldots,8 \\        \text{volume}_{ij} \geqslant 0, &amp; i=1,2,\ldots,6, \ j=1,2,\ldots,8 \\    \end{cases}\end{array}\]</span></p><p>相应的 Lingo 程序代码：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">model:</span><br><span class="line">    sets:</span><br><span class="line">        warehouses/wh1..wh6/:capacity;</span><br><span class="line">        vendors/vd1..vd8/:demand;</span><br><span class="line">        crosstab(warehouses, vendors): volume, cost;</span><br><span class="line">    endsets</span><br><span class="line"></span><br><span class="line">    data:</span><br><span class="line">       capacity = <span class="number">60</span> <span class="number">55</span> <span class="number">51</span> <span class="number">43</span> <span class="number">41</span> <span class="number">52</span>;</span><br><span class="line">       demand = <span class="number">35</span> <span class="number">37</span> <span class="number">22</span> <span class="number">32</span> <span class="number">41</span> <span class="number">32</span> <span class="number">43</span> <span class="number">38</span>;</span><br><span class="line">       cost = <span class="number">6</span> <span class="number">2</span> <span class="number">6</span> <span class="number">7</span> <span class="number">4</span> <span class="number">2</span> <span class="number">5</span> <span class="number">9</span></span><br><span class="line">              <span class="number">4</span> <span class="number">9</span> <span class="number">5</span> <span class="number">3</span> <span class="number">8</span> <span class="number">5</span> <span class="number">8</span> <span class="number">2</span></span><br><span class="line">              <span class="number">5</span> <span class="number">2</span> <span class="number">1</span> <span class="number">9</span> <span class="number">7</span> <span class="number">4</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line">              <span class="number">7</span> <span class="number">6</span> <span class="number">7</span> <span class="number">3</span> <span class="number">9</span> <span class="number">2</span> <span class="number">7</span> <span class="number">1</span></span><br><span class="line">              <span class="number">2</span> <span class="number">3</span> <span class="number">9</span> <span class="number">5</span> <span class="number">7</span> <span class="number">2</span> <span class="number">6</span> <span class="number">5</span></span><br><span class="line">              <span class="number">5</span> <span class="number">5</span> <span class="number">2</span> <span class="number">2</span> <span class="number">8</span> <span class="number">1</span> <span class="number">4</span> <span class="number">3</span>;</span><br><span class="line">    enddata</span><br><span class="line"></span><br><span class="line">    min = @sum(crosstab(<span class="built_in">i</span>, <span class="built_in">j</span>): volume(<span class="built_in">i</span>, <span class="built_in">j</span>) * cost(<span class="built_in">i</span>, <span class="built_in">j</span>));</span><br><span class="line">    @<span class="keyword">for</span>(warehouses(<span class="built_in">i</span>):</span><br><span class="line">        @sum(vendors(<span class="built_in">j</span>): volume(<span class="built_in">i</span>, <span class="built_in">j</span>)) &lt;= capacity(<span class="built_in">i</span>));</span><br><span class="line">    @<span class="keyword">for</span>(vendors(<span class="built_in">j</span>):</span><br><span class="line">        @sum(warehouses(<span class="built_in">i</span>): volume(<span class="built_in">i</span>, <span class="built_in">j</span>)) = demand(<span class="built_in">j</span>));</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>其中 <code>SET</code> 过程大大简化了程序代码，也提升了程序的可读性，否则对于每个变量都需要进行硬编码。其语法 为 <code>&lt;集合名称&gt;[集合元素][:&lt;集合属性&gt;]</code>。当然 <code>SET</code> 中的前两个关于库存和供销商的描述可以拆分为</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sets:</span><br><span class="line">    warehouses:capacity;</span><br><span class="line">    vendors:demand;</span><br><span class="line">    ...</span><br><span class="line">endsets</span><br><span class="line"></span><br><span class="line">data:</span><br><span class="line">    warehouses = wh1..wh6;</span><br><span class="line">    demand = vd1..vd8;</span><br><span class="line">enddata</span><br></pre></td></tr></table></figure><p>当然笔者更青睐紧凑的方式。<code>crosstab</code> 表示由 <code>warehouses</code> 和 <code>demand</code> 构成的派生集，即包含了 6 × 8 = 48 个变量。在目标函数及约束条件语句中，由于目标函数的操作数完全来自 <code>crosstab</code>，所以可省略部分语句：<code>min = @sum(crosstab: volume * cost);</code>。</p><p>程序经过 17 次迭代后得出的目标函数值为 664.0000，最优运输方案如下表。</p><table><thead><tr class="header"><th style="text-align: center;"></th><th style="text-align: center;">V1</th><th style="text-align: center;">V2</th><th style="text-align: center;">V3</th><th style="text-align: center;">V4</th><th style="text-align: center;">V5</th><th style="text-align: center;">V6</th><th style="text-align: center;">V7</th><th style="text-align: center;">V8</th><th style="text-align: center;">合计</th><th style="text-align: center;">库存</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><strong>WH1</strong></td><td style="text-align: center;">0</td><td style="text-align: center;">19</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">41</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">60</td><td style="text-align: center;">60</td></tr><tr class="even"><td style="text-align: center;"><strong>WH2</strong></td><td style="text-align: center;">1</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">32</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">33</td><td style="text-align: center;">55</td></tr><tr class="odd"><td style="text-align: center;"><strong>WH3</strong></td><td style="text-align: center;">0</td><td style="text-align: center;">11</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">40</td><td style="text-align: center;">0</td><td style="text-align: center;">51</td><td style="text-align: center;">51</td></tr><tr class="even"><td style="text-align: center;"><strong>WH4</strong></td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">5</td><td style="text-align: center;">0</td><td style="text-align: center;">38</td><td style="text-align: center;">43</td><td style="text-align: center;">43</td></tr><tr class="odd"><td style="text-align: center;"><strong>WH5</strong></td><td style="text-align: center;">34</td><td style="text-align: center;">7</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">41</td><td style="text-align: center;">41</td></tr><tr class="even"><td style="text-align: center;"><strong>WH6</strong></td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">22</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">27</td><td style="text-align: center;">3</td><td style="text-align: center;">0</td><td style="text-align: center;">52</td><td style="text-align: center;">52</td></tr><tr class="odd"><td style="text-align: center;"><strong>合计</strong></td><td style="text-align: center;">35</td><td style="text-align: center;">37</td><td style="text-align: center;">22</td><td style="text-align: center;">32</td><td style="text-align: center;">41</td><td style="text-align: center;">32</td><td style="text-align: center;">43</td><td style="text-align: center;">38</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: center;"><strong>需求</strong></td><td style="text-align: center;">35</td><td style="text-align: center;">37</td><td style="text-align: center;">22</td><td style="text-align: center;">32</td><td style="text-align: center;">41</td><td style="text-align: center;">32</td><td style="text-align: center;">43</td><td style="text-align: center;">38</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr></tbody></table><hr><h3 id="值班问题">值班问题</h3><p>某项工作一周 7 天都需有人上班，周一至周日所需的最少人数分别为 20、16、13、16、19、14 和 12。要求员工一周连续工作 5 天接着休息 2 天。给出人员安排，使每周所需人数最少。</p><p>若安排得当，记周一至周日分别安排 <span class="math inline">\(X(i)\)</span> 人上班。那么周一上班的人必然周五、周六休息，以此类推。令总上班人数为 <span class="math inline">\(Z\)</span>，那么上周周二、周三的人仍在休息中，所以有 <span class="math inline">\(X(1) = Z-X(1)-X(2)\)</span>，同样可以得到其他 6 个等式。概括之就是 <span class="math display">\[X(i) = Z-X(i+1)-X(i+2), \ i=1,2,\ldots, 7\]</span> 当然，<span class="math inline">\(X(8)\)</span> 相当于 <span class="math inline">\(X(1)\)</span>，<span class="math inline">\(X(9)\)</span> 相当于 <span class="math inline">\(X(2)\)</span>。所以需要特殊的函数对其进行转化，<code>wrap</code> 函数正合此意。除了此函数，由此 <a href="/essentials-of-matlab-examples#mjx-eqn-J">公式</a> 也可。代码如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">model:</span><br><span class="line">    sets:</span><br><span class="line">        days/mon..sun/: r, x;</span><br><span class="line">    endsets</span><br><span class="line"></span><br><span class="line">    data:</span><br><span class="line">        r = <span class="number">20</span> <span class="number">16</span> <span class="number">13</span> <span class="number">16</span> <span class="number">19</span> <span class="number">14</span> <span class="number">12</span>;</span><br><span class="line">    enddata</span><br><span class="line"></span><br><span class="line">    min = z;</span><br><span class="line">    z = @sum(days: x);</span><br><span class="line">    n = @<span class="built_in">size</span>(days);</span><br><span class="line">    @<span class="keyword">for</span>(days(<span class="built_in">i</span>): z-x(@wrap(<span class="built_in">i</span>+<span class="number">1</span>,n))-x(@wrap(<span class="built_in">i</span>+<span class="number">2</span>,n)) &gt;= r(<span class="built_in">i</span>));</span><br><span class="line">    ! @<span class="keyword">for</span>(days(<span class="built_in">i</span>): z-x(<span class="number">1</span>+@<span class="built_in">mod</span>(<span class="built_in">i</span>,n))-x(<span class="number">1</span>+@<span class="built_in">mod</span>(<span class="built_in">i</span>+<span class="number">1</span>,n)) &gt;= r(<span class="built_in">i</span>));</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>程序得出的最优解为：8、2、0、6、3、3、0。这说明每周最少需要 22 名员工，周一安排 8 人开始上班，或者说这 8 人休周六和周日，周一工作，其余类推。周二安排 2 人，等等。待轮休稳定后即可满足每天所需要的最少上班员工数。</p><hr><h3 id="投资的收益和风险">投资的收益和风险</h3><p>市场上有 <span class="math inline">\(n\)</span> 种资产 <span class="math inline">\(S_i (i=1,2,\ldots,n)\)</span> 供投资者选择，某公司有数额为 <span class="math inline">\(M\)</span> 的一笔资金用于一个时期的投资。公司财务分析人员对这 <span class="math inline">\(n\)</span> 种资产进行了评估，估算出在这一时期内购买 <span class="math inline">\(S_i\)</span> 的平均收益率为 <span class="math inline">\(r_i\)</span>，并预测出购买 <span class="math inline">\(S_i\)</span> 的风险损失率为 <span class="math inline">\(q_i\)</span>。考虑到投资越分散，总的风险越小，公司决定当用这笔资金购买若干种资产时，总体风险可用所投资的 <span class="math inline">\(S_i\)</span> 中最大的一个风险来度量。购买 <span class="math inline">\(S_i\)</span> 要付交易费，费率为 <span class="math inline">\(p_i\)</span>，并且当购买额不超过给定值 <span class="math inline">\(u_i\)</span> 时，交易费按购买 <span class="math inline">\(u_i\)</span> 计算（不买当然无须付费）。另外，假定同期银行存款利率是 <span class="math inline">\(r_0\)</span>, 且既无交易费又无风险（<span class="math inline">\(r_0=5\%\)</span>）。</p><div><div class="fold_hider"><div class="close hider_title">数据表</div></div><div class="fold"><table>  <tr>    <th style="text-align: center;">$E_i$</th>    <th style="text-align: center;">$r_i$(%)</th>    <th style="text-align: center;">$q_i$(%)</th>    <th style="text-align: center;">$p_i$(%)</th>    <th style="text-align: center;">$u_i$(元)</th>  </tr>  <tr>    <td style="text-align: center;"><strong>S1</strong></td>    <td style="text-align: center;">9.6</td>    <td style="text-align: center;">42.0</td>    <td style="text-align: center;">2.1</td>    <td style="text-align: center;">181</td>  </tr>  <tr>    <td style="text-align: center;"><strong>S2</strong></td>    <td style="text-align: center;">18.5</td>    <td style="text-align: center;">54.0</td>    <td style="text-align: center;">3.2</td>    <td style="text-align: center;">407</td>  </tr>  <tr>    <td style="text-align: center;"><strong>S3</strong></td>    <td style="text-align: center;">49.4</td>    <td style="text-align: center;">60.0</td>    <td style="text-align: center;">6.0</td>    <td style="text-align: center;">428</td>  </tr>  <tr>    <td style="text-align: center;"><strong>S4</strong></td>    <td style="text-align: center;">23.9</td>    <td style="text-align: center;">42.0</td>    <td style="text-align: center;">1.5</td>    <td style="text-align: center;">549</td>  </tr>  <tr>    <td style="text-align: center;"><strong>S5</strong></td>    <td style="text-align: center;">8.1</td>    <td style="text-align: center;">1.2</td>    <td style="text-align: center;">7.6</td>    <td style="text-align: center;">270</td>  </tr>  <tr>    <td style="text-align: center;"><strong>S6</strong></td>    <td style="text-align: center;">14.0</td>    <td style="text-align: center;">39.0</td>    <td style="text-align: center;">3.4</td>    <td style="text-align: center;">397</td>  </tr>  <tr>    <td style="text-align: center;"><strong>S7</strong></td>    <td style="text-align: center;">40.7</td>    <td style="text-align: center;">68.0</td>    <td style="text-align: center;">5.6</td>    <td style="text-align: center;">178</td>  </tr>  <tr>    <td style="text-align: center;"><strong>S8</strong></td>    <td style="text-align: center;">31.2</td>    <td style="text-align: center;">33.4</td>    <td style="text-align: center;">3.1</td>    <td style="text-align: center;">220</td>  </tr>  <tr>    <td style="text-align: center;"><strong>S9</strong></td>    <td style="text-align: center;">33.6</td>    <td style="text-align: center;">53.3</td>    <td style="text-align: center;">2.7</td>    <td style="text-align: center;">475</td>  </tr>  <tr>    <td style="text-align: center;"><strong>S10</strong></td>    <td style="text-align: center;">36.8</td>    <td style="text-align: center;">40.0</td>    <td style="text-align: center;">2.9</td>    <td style="text-align: center;">248</td>  </tr>  <tr>    <td style="text-align: center;"><strong>S11</strong></td>    <td style="text-align: center;">11.8</td>    <td style="text-align: center;">31.0</td>    <td style="text-align: center;">5.1</td>    <td style="text-align: center;">195</td>  </tr>  <tr>    <td style="text-align: center;"><strong>S12</strong></td>    <td style="text-align: center;">9.0</td>    <td style="text-align: center;">5.5</td>    <td style="text-align: center;">5.7</td>    <td style="text-align: center;">320</td>  </tr>  <tr>    <td style="text-align: center;"><strong>S13</strong></td>    <td style="text-align: center;">35.0</td>    <td style="text-align: center;">46.0</td>    <td style="text-align: center;">2.7</td>    <td style="text-align: center;">267</td>  </tr>  <tr>    <td style="text-align: center;"><strong>S14</strong></td>    <td style="text-align: center;">9.4</td>    <td style="text-align: center;">5.3</td>    <td style="text-align: center;">4.5</td>    <td style="text-align: center;">328</td>  </tr>  <tr>    <td style="text-align: center;"><strong>S15</strong></td>    <td style="text-align: center;">15.0</td>    <td style="text-align: center;">23.0</td>    <td style="text-align: center;">7.6</td>    <td style="text-align: center;">131</td>  </tr></table></div></div><p>要使净收益尽可能大，总体风险尽可能小，这是一个多目标的规划模型：</p><p><span class="math display">\[    \begin{gather*}        \max \ Q(x) = r_0 x_0 + \sum_{i=1}^n r_ix_i - \sum_{i=1}^n p_iy_i,            \ i=1,2,\ldots,n \\        \min \ F(x) = \max\limits_{1\leqslant i\leqslant n}\{q_ix_i\}    \end{gather*}\]</span></p><p>这里仅考虑模型的一种简化情形：投资者承受风险的程度不同，故给定风险一个界限 <span class="math inline">\(a\)</span>，使得所有风险率均小于此值，即 <span class="math inline">\(q_ix_i \leqslant Ma (i=1,2,\ldots,n)\)</span>。所以目标函数中最小化风险的要求转化为其中一个约束条件。</p><p>约束条件为：</p><p><span class="math display">\[    \begin{cases}        \displaystyle \sum_{i=1}^nx_i + \sum_{i=1}^n p_iy_i = M, &amp; i=1,2,\cdots,n\\        \displaystyle x_i \geqslant 0, &amp; i=1,2,\cdots,n\\        \displaystyle y_i = \begin{cases}            x_i, &amp;x_i&gt;u_i\\            u_i, &amp;0&lt;x_i\leqslant u_i\\            0, &amp;x_i=0        \end{cases}, &amp; i=1,2,\cdots, n    \end{cases}\]</span></p><p>由于约束条件中含有分段函数，这时可引入 0 - 1 变量将模型转化为混合整数线性规划模型，但也可以利用 Lingo 中的 <code>@if</code> 函数来构造条件，但模型为非线性规划模型。</p><div><div class="fold_hider"><div class="close hider_title">混合整数线性规划模型 Lingo 程序</div></div><div class="fold"><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">model:</span><br><span class="line">    sets:</span><br><span class="line">        S/<span class="number">1.</span><span class="number">.15</span>/:x,y,r,p,q,u,z1,z2,z3,b1,b2,b3;</span><br><span class="line">    endsets</span><br><span class="line"></span><br><span class="line">    data:</span><br><span class="line">        M=<span class="number">4000</span>;</span><br><span class="line">        bili=<span class="number">0.05</span>;</span><br><span class="line">        r0=<span class="number">5</span>;</span><br><span class="line">        r=<span class="number">9.6</span> <span class="number">18.5</span> <span class="number">49.4</span> <span class="number">23.9</span> <span class="number">8.1</span> <span class="number">14</span> <span class="number">40.7</span> <span class="number">31.2</span> <span class="number">33.6</span> <span class="number">36.8</span> <span class="number">11.8</span> <span class="number">9</span> <span class="number">35</span> <span class="number">9.4</span> <span class="number">15</span>;</span><br><span class="line">        q=<span class="number">42</span> <span class="number">54</span> <span class="number">60</span> <span class="number">42</span> <span class="number">1.2</span> <span class="number">39</span> <span class="number">68</span> <span class="number">33.4</span> <span class="number">53.3</span> <span class="number">40</span> <span class="number">31</span> <span class="number">5.5</span> <span class="number">46</span> <span class="number">5.3</span> <span class="number">23</span>;</span><br><span class="line">        p=<span class="number">2.1</span> <span class="number">3.2</span> <span class="number">6</span> <span class="number">1.5</span> <span class="number">7.6</span> <span class="number">3.4</span> <span class="number">5.6</span> <span class="number">3.1</span> <span class="number">2.7</span> <span class="number">2.9</span> <span class="number">5.1</span> <span class="number">5.7</span> <span class="number">2.7</span> <span class="number">4.5</span> <span class="number">7.6</span>;</span><br><span class="line">        u=<span class="number">181</span> <span class="number">407</span> <span class="number">428</span> <span class="number">549</span> <span class="number">270</span> <span class="number">397</span> <span class="number">178</span> <span class="number">220</span> <span class="number">475</span> <span class="number">248</span> <span class="number">195</span> <span class="number">320</span> <span class="number">267</span> <span class="number">328</span> <span class="number">131</span>;</span><br><span class="line">    enddata</span><br><span class="line"></span><br><span class="line">    max=r0*x0/<span class="number">100</span>+@Sum(S:r*x/<span class="number">100</span>)-@Sum(S:p*y/<span class="number">100</span>);</span><br><span class="line">    @For(S:q*x/<span class="number">100</span>&lt;M*bili);</span><br><span class="line">    x0+@Sum(S:x)+@Sum(S:p*y/<span class="number">100</span>)=M;</span><br><span class="line"></span><br><span class="line">    @For(S:y=z1+z2+z3);</span><br><span class="line">    @For(S:b1+b2+b3=<span class="number">1</span>);</span><br><span class="line">    @For(S:u-x&lt;<span class="number">2</span>*M*(<span class="number">1</span>-b1)); @For(S:x-M&lt;<span class="number">2</span>*M*(<span class="number">1</span>-b1));</span><br><span class="line">    @For(S:-x&lt;<span class="number">2</span>*M*(<span class="number">1</span>-b2)); @For(S:x-u&lt;<span class="number">2</span>*M*(<span class="number">1</span>-b2));</span><br><span class="line">    @For(S:-x&lt;<span class="number">2</span>*M*(<span class="number">1</span>-b3)); @For(S:x&lt;<span class="number">2</span>*M*(<span class="number">1</span>-b3));</span><br><span class="line"></span><br><span class="line">    @For(S:<span class="number">-2</span>*M*b1&lt;z1); @For(S:z1&lt;<span class="number">2</span>*M*b1);</span><br><span class="line">    @For(S:x<span class="number">-2</span>*M*(<span class="number">1</span>-b1)&lt;z1); @For(S:z1&lt;x+<span class="number">2</span>*M*(<span class="number">1</span>-b1));</span><br><span class="line">    @For(S:<span class="number">-2</span>*M*b2&lt;z2); @For(S:z2&lt;<span class="number">2</span>*M*b2);</span><br><span class="line">    @For(S:u<span class="number">-2</span>*M*(<span class="number">1</span>-b2)&lt;z2); @For(S:z2&lt;u+<span class="number">2</span>*M*(<span class="number">1</span>-b2));</span><br><span class="line">    @For(S:z3=<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    @For(S:@Bin(b1));</span><br><span class="line">    @For(S:@Bin(b2));</span><br><span class="line">    @For(S:@Bin(b3));</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></div></div><div><div class="fold_hider"><div class="close hider_title">非线性规划模型 Lingo 程序</div></div><div class="fold"><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">model:</span><br><span class="line">    sets:</span><br><span class="line">        assets/<span class="number">1.</span><span class="number">.15</span>/: x, y, r, q, p, u;</span><br><span class="line">    endsets</span><br><span class="line">    data:</span><br><span class="line">        M = <span class="number">4000</span>;</span><br><span class="line">        r0 = <span class="number">5</span>;</span><br><span class="line">        a = <span class="number">0.05</span>;</span><br><span class="line">        r =  <span class="number">9.6</span> <span class="number">18.5</span> <span class="number">49.4</span> <span class="number">23.9</span>  <span class="number">8.1</span></span><br><span class="line">            <span class="number">14.0</span> <span class="number">40.7</span> <span class="number">31.2</span> <span class="number">33.6</span> <span class="number">36.8</span></span><br><span class="line">            <span class="number">11.8</span>  <span class="number">9.0</span> <span class="number">35.0</span>  <span class="number">9.4</span> <span class="number">15.0</span>;</span><br><span class="line">        q = <span class="number">42</span>  <span class="number">54</span>   <span class="number">60</span>   <span class="number">42</span> <span class="number">1.2</span></span><br><span class="line">            <span class="number">39</span>  <span class="number">68</span> <span class="number">33.4</span> <span class="number">53.3</span>  <span class="number">40</span></span><br><span class="line">            <span class="number">31</span> <span class="number">5.5</span>   <span class="number">46</span>  <span class="number">5.3</span>  <span class="number">23</span>;</span><br><span class="line">        p = <span class="number">2.1</span> <span class="number">3.2</span> <span class="number">6.0</span> <span class="number">1.5</span> <span class="number">7.6</span></span><br><span class="line">            <span class="number">3.4</span> <span class="number">5.6</span> <span class="number">3.1</span> <span class="number">2.7</span> <span class="number">2.9</span></span><br><span class="line">            <span class="number">5.1</span> <span class="number">5.7</span> <span class="number">2.7</span> <span class="number">4.5</span> <span class="number">7.6</span>;</span><br><span class="line">        u = <span class="number">181</span> <span class="number">407</span> <span class="number">428</span> <span class="number">549</span> <span class="number">270</span></span><br><span class="line">            <span class="number">397</span> <span class="number">178</span> <span class="number">220</span> <span class="number">475</span> <span class="number">248</span></span><br><span class="line">            <span class="number">195</span> <span class="number">320</span> <span class="number">267</span> <span class="number">328</span> <span class="number">131</span>;</span><br><span class="line">    enddata</span><br><span class="line"></span><br><span class="line">    max=(x0*r0+@sum(assets: r*x-p*y))/<span class="number">100</span>;</span><br><span class="line">    @for(assets: y=@if(x #le# u, @if(x #eq# 0, 0, u), x));</span><br><span class="line">    @<span class="keyword">for</span>(assets: q*x/<span class="number">100</span>&lt;=M*a);</span><br><span class="line">    x0+@sum(assets: x)+@sum(assets: p*y/<span class="number">100</span>)=M;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></div></div><p>程序输出结果如下：</p><table><thead><tr class="header"><th style="text-align: center;">Variable</th><th style="text-align: center;">Value</th><th style="text-align: center;">Variable</th><th style="text-align: center;">Value</th><th style="text-align: center;">Variable</th><th style="text-align: center;">Value</th><th style="text-align: center;">Variable</th><th style="text-align: center;">Value</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><strong>X0</strong></td><td style="text-align: center;">0</td><td style="text-align: center;"><strong>X4</strong></td><td style="text-align: center;">476.1905</td><td style="text-align: center;"><strong>X8</strong></td><td style="text-align: center;">598.8024</td><td style="text-align: center;"><strong>X12</strong></td><td style="text-align: center;">0</td></tr><tr class="even"><td style="text-align: center;"><strong>S1</strong></td><td style="text-align: center;">0</td><td style="text-align: center;"><strong>X5</strong></td><td style="text-align: center;">0</td><td style="text-align: center;"><strong>X9</strong></td><td style="text-align: center;">375.2345</td><td style="text-align: center;"><strong>X13</strong></td><td style="text-align: center;">434.7826</td></tr><tr class="odd"><td style="text-align: center;"><strong>X2</strong></td><td style="text-align: center;">370.3704</td><td style="text-align: center;"><strong>X6</strong></td><td style="text-align: center;">479.8182</td><td style="text-align: center;"><strong>X10</strong></td><td style="text-align: center;">500</td><td style="text-align: center;"><strong>X14</strong></td><td style="text-align: center;">0</td></tr><tr class="even"><td style="text-align: center;"><strong>X3</strong></td><td style="text-align: center;">333.3333</td><td style="text-align: center;"><strong>X7</strong></td><td style="text-align: center;">294.1176</td><td style="text-align: center;"><strong>X11</strong></td><td style="text-align: center;">0</td><td style="text-align: center;"><strong>X15</strong></td><td style="text-align: center;">0</td></tr></tbody></table><p>在此种投资组合下，收益 1045.604 元。</p><h4 id="分段函数处理方法">分段函数处理方法</h4><p>上述关于混合整数线性规划模型的 Lingo 程序中引入不少中间决策变量，这里对其展开讨论，下面内容节选自余胜威《MATLAB 数学建模经典案例实战》。（部分改动）</p><div class="note info">设有限区间的有界分段函数：$$    y = f(x) = \begin{cases}            \varphi_1(x), & x\in(a_1, b_1) & \\            \varphi_2(x), & x\in(a_2, b_2) & \\            \hfil \cdots \\            \varphi_n(x), & x\in(a_n, b_n) & \\        \end{cases}, \quad        a_1 < b_1 \leqslant a_2 < b_2 \leqslant \cdots \leqslant a_n < b_n$$等价为：$$    \begin{cases}        y = y_1 + y_2 + \cdots y_n \\        \delta_1 + \delta_2 + \cdots + \delta_n = 1, \delta_i \in \{0,1\} \\        x - a_i \geqslant -(1-\delta_i)L_x \\        x - b_i \leqslant (1-\delta_i)U_x \\        -\delta_i L_{y1} \leqslant y_i \leqslant \delta_i U_{y1} \\        -(1-\delta_i) L_{y2} \leqslant y_i-\varphi_i(x)        \leqslant (1-\delta_i) U_{y2}    \end{cases}$$</div><p>其中 <span class="math inline">\(\delta_i\)</span> 表明 <span class="math inline">\(x\)</span> 所处区间，通过上述约束条件中的第 3、4 式保证。具体而言，给定 <span class="math inline">\(i\in\{1,\ldots,n\}\)</span>，若 <span class="math inline">\(x \in (a_i, b_i)\)</span>，必然有 <span class="math inline">\(x-a_i \geqslant 0\)</span> 以及 <span class="math inline">\(x-b_i \leqslant 0\)</span>；对其他区间而言，有 <span class="math inline">\(x-a_i \geqslant -L\)</span>，以及 <span class="math inline">\(x-b_i \leqslant U\)</span>，其中 <span class="math inline">\(U, L &gt; 0\)</span> 分别为 <span class="math inline">\(x\)</span> 支撑集的上限和下限的绝对值。引入 0 - 1 变量 <span class="math inline">\(\delta_i\)</span>（类似于概率论中示性函数），对于任何区间，整合上述不等式，即为 3、4 式。注意到给定的 <span class="math inline">\(x\)</span> 仅会落入一个区间，故 <span class="math inline">\(\sum \delta_i = 1\)</span>（2 式）。对于 <span class="math inline">\(y_i\)</span>，讨论类似。当然为简单起见，可将所有界限以它们的最大值代替。</p><p>乍看求解模型被复杂化，但把可能为非线性规划的问题转为了混合整数线性规划问题，加快求解收敛速度。</p><hr><h3 id="计划排序模型">计划排序模型</h3><p>完成某产品的装配过程需要 11 项任务（用 A ~ K 表示），每项任务所花费的时间如下：</p><table><tr><td><strong>任务</strong></td><td><strong>A</strong></td><td><strong>B</strong></td><td><strong>C</strong></td><td><strong>D</strong></td><td><strong>E</strong></td><td><strong>F</strong></td></tr><tr><td><strong>时间</strong></td><td>45</td><td>11</td><td>9</td><td>50</td><td>15</td><td>12</td></tr><tr><td><strong>任务</strong></td><td><strong>G</strong></td><td><strong>H</strong></td><td><strong>I</strong></td><td><strong>J</strong></td><td><strong>K</strong></td><td></td></tr><tr><td><strong>时间</strong></td><td>12</td><td>12</td><td>12</td><td>8</td><td>9</td><td></td></tr></table><p>各项任务之间存在先后顺序如下图所示。装配流水线有四个顺序工作站，对于有先后次序的任务，只能在流水线上向后传（如任务 B 和 C 的次序为先 B 后 C，如果安排 B 给第 3 站做，则 C 要么由 B 自己完成，要么传给第 4 站来做，而不能交往 1 或 2 号站），每项任务必须只能分配至一个工作站来做。合理分配生产计划，使整个装配周期最短。</p><p><img src="/img/task_priority.svg" width="50%"></p><p>记 <span class="math inline">\(x_{ik}\)</span> 表示将任务 <span class="math inline">\(i\ (i=A,B,\ldots,K)\)</span> 分配给工作站 <span class="math inline">\(k\ (k=1,2,3,4)\)</span> 的情况，1 表示分配，0 表示不分配，<span class="math inline">\(t_i\)</span> 表示完成各项任务所需时间。则目标函数为 <span class="math inline">\(\min\ T = \max\limits_{1\leqslant k \leqslant 4} \sum\limits_{i=1}^{11} t_ix_{ik}\)</span>。由每项任务只能分配给一个工作站来做，故对所有任务 <span class="math inline">\(i\)</span> 有：<span class="math inline">\(\sum\limits_{k=1}^4 x_{ik}=1\)</span>。对于任务间的优先级，考虑任务 <span class="math inline">\(i\)</span> 先于任务 <span class="math inline">\(j\)</span>，则可行的任务安排表 (11 × 4) 有：</p><span class="math display">\[\begin{array}{ccccc}\begin{array}{ccccc}    \hline      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\    \hline    i &amp; 1 &amp;   &amp;   &amp;   \\    j &amp; 1 &amp;   &amp;   &amp;   \\    \Delta  &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\    \hline\end{array}&amp;\begin{array}{ccccc}    \hline      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\    \hline    i &amp; 1 &amp;   &amp;   &amp;   \\    j &amp;   &amp; 1 &amp;   &amp;   \\    \Delta  &amp; -1 &amp; 1 &amp; 0 &amp; 0 \\    \hline\end{array}&amp;\begin{array}{ccccc}    \hline      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\    \hline    i &amp; 1 &amp;   &amp;   &amp;   \\    j &amp;   &amp;   &amp; 1 &amp;   \\    \Delta  &amp; -1 &amp; 0 &amp; 1 &amp; 0 \\    \hline\end{array}&amp;\begin{array}{ccccc}    \hline      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\    \hline    i &amp; 1 &amp;   &amp;   &amp;   \\    j &amp;   &amp;   &amp;   &amp; 1 \\    \Delta  &amp; -1 &amp; 0 &amp; 0 &amp; 1 \\    \hline\end{array}&amp;\begin{array}{ccccc}    \hline      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\    \hline    i &amp;   &amp; 1 &amp;   &amp;   \\    j &amp;   &amp; 1 &amp;   &amp;   \\    \Delta  &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\    \hline\end{array} \\[15pt]\begin{array}{ccccc}    \hline      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\    \hline    i &amp;   &amp; 1 &amp;   &amp;   \\    j &amp;   &amp;   &amp; 1 &amp;   \\    \Delta  &amp; 0 &amp; -1 &amp; 1 &amp; 0 \\    \hline\end{array}&amp;\begin{array}{ccccc}    \hline      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\    \hline    i &amp;   &amp; 1 &amp;   &amp;   \\    j &amp;   &amp;   &amp;   &amp; 1 \\    \Delta  &amp; 0 &amp; -1 &amp; 0 &amp; 1 \\    \hline\end{array}&amp;\begin{array}{ccccc}    \hline      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\    \hline    i &amp;   &amp;   &amp; 1 &amp;   \\    j &amp;   &amp;   &amp; 1 &amp;   \\    \Delta  &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\    \hline\end{array}&amp;\begin{array}{ccccc}    \hline      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\    \hline    i &amp;   &amp;   &amp; 1 &amp;   \\    j &amp;   &amp;   &amp;   &amp; 1 \\    \Delta  &amp; 0 &amp; 0 &amp; -1 &amp; 1 \\    \hline\end{array}&amp;\begin{array}{ccccc}    \hline      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\    \hline    i &amp;   &amp;   &amp;   &amp; 1  \\    j &amp;   &amp;   &amp;   &amp; 1 \\    \Delta  &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\    \hline\end{array}\end{array}\]</span><p>其中最后一行为任务 <span class="math inline">\(j\)</span> 的分配数与任务 <span class="math inline">\(i\)</span> 的分配数之差。对每个工作站引入权重 <span class="math inline">\(f_k = k\)</span>，可发现上述所有情况均满足 <span class="math inline">\(\sum\limits_{i=k}^4 f_k\Delta_k \geqslant 0\)</span>，通过进一步试验可归纳任何一种「任务 <span class="math inline">\(j\)</span> 优先于任务 <span class="math inline">\(i\)</span>」的分配方案均不满足上述等式。 于是对所有 <span class="math inline">\(i\)</span> 优先于 <span class="math inline">\(j\)</span>：<span class="math inline">\(\sum\limits_{k=1}^4 k(x_{jk}-x_{ik}) \geqslant 0\)</span>。</p><p>至此，该模型是一个非线性规划，但可进一步转为线性规划。增加约束条件：<span class="math inline">\(\sum\limits_{i=1}^{11}t_ix_{ik} \leqslant Z\)</span>，目标函数变为 <span class="math inline">\(\min \ Z\)</span>。两种模型的迭代次数分别为 147 (MILP)、590 (PINLP)。</p><div><div class="fold_hider"><div class="close hider_title">计划排序模型 Lingo 程序</div></div><div class="fold"><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">model:</span><br><span class="line">    sets:</span><br><span class="line">        task/A..K/:t;</span><br><span class="line">        prio(task, task)/A,B B,C C,F C,G D,E E,H E,I F,J G,J H,J I,J J,K/;</span><br><span class="line">        station/<span class="number">1.</span><span class="number">.4</span>/;</span><br><span class="line">        txs(task, station):x;</span><br><span class="line">    endsets</span><br><span class="line"></span><br><span class="line">    data:</span><br><span class="line">        t = <span class="number">45</span> <span class="number">11</span> <span class="number">9</span> <span class="number">50</span> <span class="number">15</span> <span class="number">12</span> <span class="number">12</span> <span class="number">12</span> <span class="number">12</span> <span class="number">8</span> <span class="number">9</span>;</span><br><span class="line">    enddata</span><br><span class="line"></span><br><span class="line">    ! 注释行为非线性规划方案;</span><br><span class="line">    ! min=@max(station(k): @sum(task(<span class="built_in">i</span>): t(<span class="built_in">i</span>)*x(<span class="built_in">i</span>, k))); ;</span><br><span class="line">    min=Z;</span><br><span class="line">    @<span class="keyword">for</span>(station(k): @sum(task(<span class="built_in">i</span>): t(<span class="built_in">i</span>)*x(<span class="built_in">i</span>, k))&lt;=Z);</span><br><span class="line">    @<span class="keyword">for</span>(task(<span class="built_in">i</span>): @sum(station(<span class="built_in">j</span>): x(<span class="built_in">i</span>, <span class="built_in">j</span>)) = <span class="number">1</span>);</span><br><span class="line">    @<span class="keyword">for</span>(prio(<span class="built_in">i</span>, <span class="built_in">j</span>): @sum(station(k): k*(x(<span class="built_in">j</span>, k)-x(<span class="built_in">i</span>, k)))&gt;=<span class="number">0</span>);</span><br><span class="line">    @<span class="keyword">for</span>(txs: @bin(x));</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></div></div><hr><h3 id="配对模型">配对模型</h3><p>将 8 个职员安排到 4 个办公室，每室两人。同事两两之间的相容程度如下（数字越小代表相容越好）</p><p><span class="math display">\[\begin{array}{c|cccccccc}    \hline        &amp; S_1 &amp; S_2 &amp; S_3 &amp; S_4 &amp; S_5 &amp; S_6 &amp; S_7 &amp; S_8 \\    \hline    S_1 &amp; -   &amp; 9   &amp; 3   &amp; 4   &amp; 2   &amp; 1   &amp; 5   &amp; 6   \\    S_2 &amp; -   &amp; -   &amp; 1   &amp; 7   &amp; 3   &amp; 5   &amp; 2   &amp; 1   \\    S_3 &amp; -   &amp; -   &amp; -   &amp; 4   &amp; 4   &amp; 2   &amp; 9   &amp; 2   \\    S_4 &amp; -   &amp; -   &amp; -   &amp; -   &amp; 1   &amp; 5   &amp; 5   &amp; 2   \\    S_5 &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; 8   &amp; 7   &amp; 6   \\    S_6 &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; 2   &amp; 3   \\    S_7 &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; 4   \\    S_8 &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   \\    \hline\end{array}\]</span></p><p>安排配对方案，使组合的总相容程度最好。</p><p>引入决策矩阵 <span class="math inline">\(X\)</span>，元素 <span class="math inline">\(X_{ij} \in \{0, 1\}\)</span>，每人组合一次，说明对于每个职员 <span class="math inline">\(i\)</span>，必有 <span class="math inline">\(\sum\limits_{j=i \ \text{or}\ k=i}X_{jk} = 1\)</span>，所以模型为：</p><p><span class="math display">\[    \begin{array}{cl}        \min &amp; \sum\limits_{i&lt;j} C_{ij} X_{ij} \\        \text{s.t.} &amp; \begin{cases}            \sum\limits_{j=i \ \text{or}\ k=i}X_{jk} = 1, &amp; i=1,2,\ldots,8 \\            X_{ij} = 0 \ \text{or} \ 1, &amp; i&lt;j        \end{cases}    \end{array}\]</span></p><div><div class="fold_hider"><div class="close hider_title">配对模型 Lingo 程序</div></div><div class="fold"><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">model:</span><br><span class="line">    sets:</span><br><span class="line">        people/<span class="number">1.</span><span class="number">.8</span>/;</span><br><span class="line">        links(people, people) | &amp;2 #gt# &amp;1: tol, x;</span><br><span class="line">    endsets</span><br><span class="line"></span><br><span class="line">    data:</span><br><span class="line">        tol = <span class="number">9</span> <span class="number">3</span> <span class="number">4</span> <span class="number">2</span> <span class="number">1</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line">                <span class="number">1</span> <span class="number">7</span> <span class="number">3</span> <span class="number">5</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line">                  <span class="number">4</span> <span class="number">4</span> <span class="number">2</span> <span class="number">9</span> <span class="number">2</span></span><br><span class="line">                    <span class="number">1</span> <span class="number">5</span> <span class="number">5</span> <span class="number">2</span></span><br><span class="line">                      <span class="number">8</span> <span class="number">7</span> <span class="number">6</span></span><br><span class="line">                        <span class="number">2</span> <span class="number">3</span></span><br><span class="line">                          <span class="number">4</span>;</span><br><span class="line">    enddata</span><br><span class="line"></span><br><span class="line">    @for(people(i): @sum(links(j, k) | j #eq# i #or# k #eq# i: x(j, k)) = 1);</span><br><span class="line">    @<span class="keyword">for</span>(links: @bin(x));</span><br><span class="line">    min = @sum(links: x*tol);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></div></div><hr><h3 id="下料问题">下料问题</h3><p>钢管原材料每根长 19m，现需要 A、B、C、D 四种钢管部件，长度分别为 4m、5m、6m、8m，数量分别为 50、10、20、15 根，不同的下料方式不超过 3 种，安排下料方式使得所需钢管原材料最少。</p><p>一般化问题，假设用到 <span class="math inline">\(k\)</span> 种下料方式，用 <span class="math inline">\(x_i\ (i=1,2,\ldots,k)\)</span> 表示第 <span class="math inline">\(i\)</span> 种下料方式所切割的原料钢管数量，非负整数 <span class="math inline">\(n_{ij}\)</span> 表示第 <span class="math inline">\(i\)</span> 种下料方法得到部件 <span class="math inline">\(j\ (j=1,2,\ldots,m)\)</span> 的数量，<span class="math inline">\(b_j\)</span> 表示第 <span class="math inline">\(j\)</span> 种部件的需求量。<span class="math inline">\(L\)</span> 表示钢管材料的长度，<span class="math inline">\(l_j\)</span> 表示部件长度，则下料方式应满足：1) 切割出的部件总长度不超过 <span class="math inline">\(L\)</span>；2) 余料严格小于 <span class="math inline">\(\min \{l_j\}\)</span>。故建立优化模型：</p><p><span class="math display">\[\begin{array}{cl}    {\min} &amp; z = \sum\limits_{i=1}^k x_i \\    \text{s.t.} &amp; \begin{cases}        \sum\limits_{i=1}^k n_{ij}x_i \geqslant b_j, &amp; j=1,2,\ldots,m \\        L - \min\{n_{ij}\} &lt; \sum\limits_{j=1}^m n_{ij}l_j \leqslant L, &amp; i=1,2,\ldots,k \\        x_{i}, n_{ij} \in \mathbb{N}, &amp; i=1,2,\ldots,k; \ j=1,2,\ldots,m    \end{cases}\end{array}\]</span></p><p>在此问题中 <span class="math inline">\(k=3, m=4\)</span>。</p><div><div class="fold_hider"><div class="close hider_title">下料问题 Lingo 程序</div></div><div class="fold"><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">model:</span><br><span class="line">    sets:</span><br><span class="line">        ! craft(<span class="number">1</span>~k): 工艺, 即切割方式 ;</span><br><span class="line">        ! material(<span class="number">1</span>~m): 不同部件数量 ;</span><br><span class="line">        ! links: 每种切割方式下不同部件数量 ;</span><br><span class="line">        craft/<span class="number">1.</span><span class="number">.3</span>/: x;</span><br><span class="line">        material/<span class="number">1.</span><span class="number">.4</span>/: m, b;</span><br><span class="line">        links(craft, material): n;</span><br><span class="line">    endsets</span><br><span class="line"></span><br><span class="line">    data:</span><br><span class="line">        m = <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">8</span>;</span><br><span class="line">        b = <span class="number">50</span> <span class="number">10</span> <span class="number">20</span> <span class="number">15</span>;</span><br><span class="line">        L = <span class="number">19</span>;</span><br><span class="line">    enddata</span><br><span class="line"></span><br><span class="line">    min = @sum(craft: x);</span><br><span class="line">    @<span class="keyword">for</span>(material(<span class="built_in">j</span>): @sum(craft(<span class="built_in">i</span>): n(<span class="built_in">i</span>, <span class="built_in">j</span>)*x(<span class="built_in">i</span>))&gt;=b(<span class="built_in">j</span>));</span><br><span class="line">    @<span class="keyword">for</span>(craft(<span class="built_in">i</span>): @sum(material(<span class="built_in">j</span>): n(<span class="built_in">i</span>, <span class="built_in">j</span>)*m(<span class="built_in">j</span>))&lt;=L);</span><br><span class="line">    @<span class="keyword">for</span>(craft(<span class="built_in">i</span>): @sum(material(<span class="built_in">j</span>): n(<span class="built_in">i</span>, <span class="built_in">j</span>)*m(<span class="built_in">j</span>))&gt;=<span class="number">16</span>);</span><br><span class="line">    @<span class="keyword">for</span>(craft: @gin(x));</span><br><span class="line">    @<span class="keyword">for</span>(links: @gin(n));</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></div></div><p>求解结果如下：</p><table><tr><td style="text-align: center;" rowspan="2"><strong>下料方式</strong></td><td style="text-align: center;" colspan="4"><strong>部件长度<br></strong></td><td style="text-align: center;" rowspan="2"><strong>余料长度</strong></td><td style="text-align: center;" rowspan="2"><strong>切割根数</strong></td></tr><tr><td style="text-align: center;">4m</td><td style="text-align: center;">5m</td><td style="text-align: center;">6m</td><td style="text-align: center;">8m</td></tr><tr><td style="text-align: center;"><strong>方式一</strong></td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">2</td><td style="text-align: center;">3</td><td style="text-align: center;">8</td></tr><tr><td style="text-align: center;"><strong>方式二</strong></td><td style="text-align: center;">2</td><td style="text-align: center;">1</td><td style="text-align: center;">1</td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">10</td></tr><tr><td style="text-align: center;"><strong>方式三</strong></td><td style="text-align: center;">3</td><td style="text-align: center;">0</td><td style="text-align: center;">1</td><td style="text-align: center;">0</td><td style="text-align: center;">1</td><td style="text-align: center;">10</td></tr><tr><td style="text-align: center;"><strong>合计</strong></td><td style="text-align: center;">50</td><td style="text-align: center;">10</td><td style="text-align: center;">20</td><td style="text-align: center;">16</td><td style="text-align: center;">34m</td><td style="text-align: center;">28</td></tr></table><p>注意到上述切割方案余料总长 34m，且多出一根 8m 长的部件。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;环境搭建&quot;&gt;环境搭建&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Lingo 17.0 (Windows 10 x64)&lt;/li&gt;
&lt;li&gt;Notepad++ 7.4.2 x86
&lt;ul&gt;
&lt;li&gt;NppExec&lt;/li&gt;
&lt;li&gt;Visimulator&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bbs.pinggu.org/thread-3875796-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;语法高亮及代码补全&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Mathematical Modeling" scheme="http://notes.shinemic.cn/categories/Mathematical-Modeling/"/>
    
    
      <category term="Linear Algebra" scheme="http://notes.shinemic.cn/tags/Linear-Algebra/"/>
    
      <category term="Lingo" scheme="http://notes.shinemic.cn/tags/Lingo/"/>
    
      <category term="Programming" scheme="http://notes.shinemic.cn/tags/Programming/"/>
    
  </entry>
  
  <entry>
    <title>Matlab 数值计算之函数插值</title>
    <link href="http://notes.shinemic.cn/function-interpolation-by-matlab/"/>
    <id>http://notes.shinemic.cn/function-interpolation-by-matlab/</id>
    <published>2018-07-08T15:19:15.000Z</published>
    <updated>2019-02-28T13:06:49.485Z</updated>
    
    <content type="html"><![CDATA[<p>微积分中对于连续或可导函数的研究虽有各路方法各显神通，但对于一个实际问题，若仅给出离散的数据点，通常首先要做的工作是根据这些离散点拟合出便于研究的连续函数。这类问题通常称作「数据拟合」，而其中的特殊情形便是函数插值。</p><a id="more"></a><p>多项式拟合插值中最「直接」的算法，就是对于 <span class="math inline">\(n+1\)</span> 个给定的数据点对 <span class="math inline">\((x_i, y_i), i=0,1,\ldots,n\)</span>，假设 <span class="math inline">\(n\)</span> 次多项式 <span class="math inline">\(p_n(x)=\sum\limits_{i=0}^n a_ix^i\)</span> 过所有的数据点，即 <span class="math inline">\(p_n(x_i) = y_i\)</span>，即：</p><p><span class="math display">\[    \underbrace{    \begin{pmatrix}        1 &amp; x_0^1 &amp; x_0^2 &amp; \cdots &amp; x_0^{n-1} &amp; x_0^n \\        1 &amp; x_1^1 &amp; x_1^2 &amp; \cdots &amp; x_1^{n-1} &amp; x_1^n \\        1 &amp; x_2^1 &amp; x_2^2 &amp; \cdots &amp; x_2^{n-1} &amp; x_2^n \\        \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots &amp; \vdots \\        1 &amp; x_{n-1}^1 &amp; x_{n-1}^2 &amp; \cdots &amp; x_{n-1}^{n-1} &amp; x_{n-1}^n \\        1 &amp; x_n^1 &amp; x_n^2 &amp; \cdots &amp; x_n^{n-1} &amp; x_n^n    \end{pmatrix}    }_{\boldsymbol{V}}    \underbrace{    \begin{pmatrix}        a_0 \vphantom{x_0^{n-1}} \\        a_1 \vphantom{x_1^{n-1}} \\        a_2 \vphantom{x_2^{n-1}} \\        \vdots \vphantom{\ddots \vdots} \\        a_{n-1} \vphantom{x_{n-1}^{n-1}} \\        a_{n} \vphantom{x_n^{n-1}}    \end{pmatrix}    }_{\boldsymbol{a}}    =    \underbrace{    \begin{pmatrix}        y_0 \vphantom{x_0^{n-1}} \\        y_1 \vphantom{x_1^{n-1}} \\        y_2 \vphantom{x_2^{n-1}} \\        \vdots \vphantom{\ddots \vdots} \\        y_{n-1} \vphantom{x_{n-1}^{n-1}} \\        y_{n} \vphantom{x_n^{n-1}}    \end{pmatrix}    }_{\boldsymbol{y}}\]</span></p><p>显然 <span class="math inline">\(\boldsymbol{V}\)</span> 为 Vandermonde 矩阵。关于 Vandermonde 行列式的计算，这里列出两种计算方法。</p><div><div class="fold_hider"><div class="close hider_title">Vandermonde 行列式计算方法</div></div><div class="fold"><div class="note ">$n$ 阶 Vandermonde 行列式$$V_n = \begin{vmatrix}  1 & x_1 & x_1^2 & \cdots & x_1^{n-2} & x_1^{n-1} \\  1 & x_2 & x_2^2 & \cdots & x_2^{n-2} & x_2^{n-1} \\\vdots & \vdots & \vdots & \ddots & \vdots & \vdots \\  1 & x_n & x_n^2 & \cdots & x_n^{n-2} & x_n^{n-1}\end{vmatrix}$$的值为$$V_n = \prod_{1 \mathop \leqslant i \mathop < j \mathop \leqslant n} \left({x_j - x_i}\right)$$</div>以下证明过程摘自 <a href="https://proofwiki.org/wiki/Vandermonde_Determinant" target="_blank" rel="noopener">Vandermonde Determinant</a>。<p><strong>方法一</strong></p>从 $V_n$ 第二行开始，以后每行减去第一行，由初等变换得到的行列式值不变：\begin{align*}V_n &= \begin{vmatrix}  1 & x_1 & x_1^2 & \cdots & x_1^{n-2} & x_1^{n-1} \\  1 & x_2 & x_2^2 & \cdots & x_2^{n-2} & x_2^{n-1} \\  1 & x_3 & x_3^2 & \cdots & x_3^{n-2} & x_3^{n-1} \\\vdots & \vdots & \vdots & \ddots & \vdots & \vdots \\  1 & x_{n-1} & x_{n-1}^2 & \cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1} \\  1 & x_n & x_n^2 & \cdots & x_n^{n-2} & x_n^{n-1}\end{vmatrix} \\&= \begin{vmatrix}  1 & x_1 & x_1^2 & \cdots & x_1^{n-2} & x_1^{n-1} \\  0 & x_2 - x_1 & x_2^2 - x_1^2 & \cdots & x_2^{n-2} - x_1^{n-2} & x_2^{n-1} - x_1^{n-1} \\  0 & x_3 - x_1 & x_3^2 - x_1^2 & \cdots & x_3^{n-2} - x_1^{n-2} & x_3^{n-1} - x_1^{n-1} \\\vdots & \vdots & \vdots & \ddots & \vdots & \vdots \\  0 & x_{n-1} - x_1 & x_{n-1}^2 - x_1^2 & \cdots & x_{n-1}^{n-2} - x_1^{n-2} & x_{n-1}^{n-1} - x_1^{n-1} \\  0 & x_n - x_1 & x_n^2 - x_1^2 & \cdots & x_n^{n-2} - x_1^{n-2} & x_n^{n-1} - x_1^{n-1}\end{vmatrix} \\&= \begin{vmatrix}  1 & 0 & 0 & \cdots & 0 & 0 \\  0 & x_2 - x_1 & \left({x_2 - x_1}\right) x_2 & \cdots & \left({x_2 - x_1}\right) x_2^{n-3} & \left({x_2 - x_1}\right) x_2^{n-2} \\  0 & x_3 - x_1 & \left({x_3 - x_1}\right) x_3 & \cdots & \left({x_3 - x_1}\right) x_3^{n-3} & \left({x_3 - x_1}\right) x_3^{n-2} \\\vdots & \vdots & \vdots & \ddots & \vdots & \vdots \\  0 & x_{n-1} - x_1 & \left({x_{n-1} - x_1}\right) x_{n-1} & \cdots & \left({x_{n-1} - x_1}\right) x_{n-1}^{n-3} & \left({x_{n-1} - x_1}\right) x_{n-1}^{n-2} \\  0 & x_n - x_1 & \left({x_n - x_1}\right) x_n & \cdots & \left({x_n - x_1}\right) x_n^{n-3} & \left({x_n - x_1}\right) x_n^{n-2}\end{vmatrix} \\&= \prod_{k \mathop = 2}^n \left({x_k - x_1}\right) \begin{vmatrix}  1 & 0 & 0 & \cdots & 0 & 0 \\  0 & 1 & x_2 & \cdots & x_2^{n-3} & x_2^{n-2} \\  0 & 1 & x_3 & \cdots & x_3^{n-3} & x_3^{n-2} \\\vdots & \vdots & \vdots & \ddots & \vdots & \vdots \\  0 & 1 & x_{n-1} & \cdots & x_{n-1}^{n-3} & x_{n-1}^{n-2} \\  0 & 1 & x_n & \cdots & x_n^{n-3} & x_n^{n-2}\end{vmatrix} \\&= \prod_{k \mathop = 2}^n \left({x_k - x_1}\right) V_{n-1}\end{align*}以此类推，$$V_n = \prod_{k \mathop = 2}^n \left({x_k - x_1}\right)    \prod_{k \mathop = 3}^n \left({x_k - x_2}\right) V_{n-2}= \cdots= \prod_{1 \mathop \leqslant i \mathop < j \mathop \leqslant n} \left({x_j - x_i}\right)= \prod_{1 \mathop \leqslant i \mathop < j \mathop \leqslant n} \left({x_j - x_i}\right)$$<hr><p><strong>方法二</strong></p>将行列式中 $V_n$ 中的所有 $x_n$ 替换为未知量 $x$，则 $V_n$ 可视为关于 $x$ 的 $n-1$ 次多项式，记为 $P(x)$，并按最后一行展开：\begin{align*}P \left({x}\right)&= \begin{vmatrix}  1 & x_1 & x_1^2 & \cdots & x_1^{n-2} & x_1^{n-1} \\  1 & x_2 & x_2^2 & \cdots & x_2^{n-2} & x_2^{n-1} \\  1 & x_3 & x_3^2 & \cdots & x_3^{n-2} & x_3^{n-1} \\\vdots & \vdots & \vdots & \ddots & \vdots & \vdots \\  1 & x_{n-1} & x_{n-1}^2 & \cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1} \\  1 & x & x^2 & \cdots & x^{n-2} & x^{n-1}\end{vmatrix} \\&= \begin{vmatrix}  x_1 & x_1^2 & \cdots & x_1^{n-2} & x_1^{n-1} \\  x_2 & x_2^2 & \cdots & x_2^{n-2} & x_2^{n-1} \\  x_3 & x_3^2 & \cdots & x_3^{n-2} & x_3^{n-1} \\\vdots & \vdots & \vdots & \ddots & \vdots \\  x_{n-1} & x_{n-1}^2 & \cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1}\end{vmatrix} \ \  + \ \ \begin{vmatrix}  1 & x_1^2 & \cdots & x_1^{n-2} & x_1^{n-1} \\  1 & x_2^2 & \cdots & x_2^{n-2} & x_2^{n-1} \\  1 & x_3^2 & \cdots & x_3^{n-2} & x_3^{n-1} \\\vdots & \vdots & \vdots & \ddots & \vdots \\  1 & x_{n-1}^2 & \cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1}\end{vmatrix}x \\& \mathrel{\phantom{=}}+ \ \ \cdots \ \ + \ \\begin{vmatrix}  1 & x_1 & x_1^2 & \cdots & x_1^{n-2} \\  1 & x_2 & x_2^2 & \cdots & x_2^{n-2} \\  1 & x_3 & x_3^2 & \cdots & x_3^{n-2} \\\vdots & \vdots & \vdots & \ddots & \vdots \\  1 & x_{n-1} & x_{n-1}^2 & \cdots & x_{n-1}^{n-2}\end{vmatrix}x^{n-1}\end{align*}显然 $P(x_1) = P(x_2) = \cdots = P(x_{n-1}) = 0$，由多项式分解定理可知$$    P(x) = V_{n-1} \prod_{i=1}^{n-1} (x-x_i)$$将 $x$ 替换成 $x_n$，由递推可得：$$    V_n = \prod_{1 \leqslant i < n} (x_n - x_i) V_{n-1}        = \prod_{1 \leqslant i < n} (x_n - x_i)          \prod_{1 \leqslant i < n-1} (x_{n-1} - x_i) V_{n-2}        = \cdots        = \prod_{1 \leqslant i < j \leqslant n} (x_j - x_i)$$<hr></div></div><p>但是解这个线性方程组是很不明智的，如果数据点较近，<span class="math inline">\(\boldsymbol{V}\)</span> 会接近奇异矩阵。而拉格朗日插值法则不需要硬着头皮解方程。</p><h2 id="拉格朗日插值">拉格朗日插值</h2><p><span class="math inline">\(n\)</span> 次 Lagrange 插值多项式系数 <span class="math inline">\(l_0(x), l_1(x), \ldots, l_n(x)\)</span> 定义为 <span class="math inline">\(l_i(x_j)= \begin{cases} 1, &amp; i=j \\ 0, &amp; i\neq j \\ \end{cases}\)</span>，则多项式可表示为</p><p><span class="math display">\[    P(x) = y_0 l_0(x) + y_1l_1(x) + \cdots + y_nl_n(x) = \sum_{i=0}^n y_il_i(x)\]</span></p><p>注意这里的每个 <span class="math inline">\(l_i(x)\)</span> 均为 <span class="math inline">\(n\)</span> 次多项式，且由定义可知 <span class="math inline">\(l_i(x)\)</span> 有 <span class="math inline">\(n\)</span> 个根</p><p><span class="math display">\[    x_0, x_1, x_2, \ldots, x_{i-1}, x_{i+1}, \ldots, x_n\]</span></p><p>所以 <span class="math inline">\(l_i(x)\)</span> 可表示成 <span class="math inline">\(l_i(x) = C_i \prod\limits_{j\neq i} (x - x_j)\)</span>，进一步由 <span class="math inline">\(l_i(x)\)</span> 定义，</p><p><span class="math display">\[    1 = l_i(x_i) = C_i \prod_{j\neq i} (x_i - x_j)    \ \Rightarrow \ C_i = \frac{1}{\prod\limits_{j\neq i} (x_i - x_j)}    \ \Rightarrow \ l_i(x) = \frac{\prod\limits_{j\neq i}(x - x_j)}                                  {\prod\limits_{j\neq i}(x_i - x_j)}\]</span></p><p>所以 Lagrange 插值多项式为</p><p><span class="math display">\[    p(x) = \sum_{i=0}^n y_i \frac{\prod\limits_{j\neq i}(x - x_j)}                             {\prod\limits_{j\neq i}(x_i - x_j)}         = \sum_{i=0}^n y_i \frac{(x-x_0)(x-x_1)\cdots (x-x_{i-1})(x-x_{i+1})\cdots (x-x_n)}                                 {(x_i-x_0)(x_i-x_1)\cdots (x_i-x_{i-1})(x_i-x_{i+1})\cdots (x_i-x_n)}\]</span></p><p>从形式上看，Lagrange 插值法是容易实现的，但如果加入新的数据点，则需要重新计算多项式系数，即算法随着数据点的增多不能复用以前的计算结果。</p><div><div class="fold_hider"><div class="close hider_title">拉格朗日插值 Matlab 程序代码</div></div><div class="fold"><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[f, f0]</span> = <span class="title">interp_lagrange</span><span class="params">(x, y, x0, prec)</span></span></span><br><span class="line">    <span class="keyword">if</span> nargin &lt;= <span class="number">3</span>, prec = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">length</span>(x) == <span class="built_in">length</span>(y), n = <span class="built_in">length</span>(x) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> error(<span class="string">'Incompatible dimension of x and y !!'</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    syms t;</span><br><span class="line">    f = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> k = <span class="number">1</span>:n</span><br><span class="line">        xs = [x(<span class="number">1</span>:k<span class="number">-1</span>) x(k+<span class="number">1</span>:n)];</span><br><span class="line">        f = f + y(k) * prod((t-xs)./(x(k)-xs));</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    f = vpa(f, prec);</span><br><span class="line">    <span class="keyword">if</span> nargin &gt; <span class="number">2</span>, f0 = vpa(subs(f, t, x0), prec); <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></div></div><h2 id="艾特肯插值">艾特肯插值</h2><p>首先，由点 <span class="math inline">\((x_0, y_0)\)</span> 到 <span class="math inline">\((x_j, y_j), j=1,2,\ldots,n\)</span> 可以确定 <span class="math inline">\(n\)</span> 组一次多项式，即穿过两点的直线；第二步，根据 $$，进一步生成 <span class="math inline">\(n-1\)</span> 组二次多项式。次过程共重复 <span class="math inline">\(n\)</span> 次，最终得到一个 <span class="math inline">\(n\)</span> 次多项式。</p><p>具体而言，由点 <span class="math inline">\((x_0, y_0)\)</span> 及 <span class="math inline">\((x_1, y_1)\)</span> 得到的一次多项式为</p><p><span class="math display">\[    p_{01}(x) = \frac{x-x_1}{x_0-x_1}y_0 - \frac{x-x_0}{x_1-x_0}y_1              = \frac{1}{x_1-x_0} \begin{vmatrix}                  y_0 &amp; x_0 - x \\                  y_1 &amp; x_1 - x                \end{vmatrix}\]</span></p><p>类比之，由 <span class="math inline">\(x_0\)</span> 及 <span class="math inline">\(x_j\)</span> 确定的一次多项式表示为</p><p><span class="math display">\[    p_{0j}(x) = \frac{1}{x_j-x_0} \begin{vmatrix}                    y_0 &amp; x_0 - x \\                    y_j &amp; x_j - x                \end{vmatrix}, \quad j = 1,2,\ldots,n\]</span></p><p>进一步，由点 <span class="math inline">\((x_0, y_0), (x_1, y_1), (x_j, y_j)\)</span> 确定的二次多项式为</p><p><span class="math display">\[    p_{01j}(x) = \frac{1}{x_j - x_1} \begin{vmatrix}                     p_{01}(x) &amp; x_1 - x \\                     p_{0j}(x) &amp; x_j - x                 \end{vmatrix}, \quad j=2,3,\ldots,n\]</span></p><p>一般而言，对于 <span class="math inline">\(k+2\)</span> 个数据点 <span class="math inline">\((x_0, y_0), (x_1, y_1), \ldots, (x_k, y_k)\)</span> 及 <span class="math inline">\((x_j, y_j)\)</span>，<span class="math inline">\(k+1\)</span> 次插值多项式为</p><p><span class="math display">\[    p_{012\cdots kj}(x) = \frac{1}{x_j - x_k}        \begin{vmatrix}            p_{012\cdots k}(x) &amp; x_k - x \\            p_{012\cdots (k-1)}(x) &amp; x_j - x        \end{vmatrix} \quad j=k+1,\ldots, n\]</span></p><p>整个计算过程如下表</p><p><span class="math display">\[\begin{array}{cccccc|c}    \hline    x_j &amp;   y_j &amp;   p_{0j}  &amp;   p_{01j} &amp;   p_{012j}    &amp;   p_{0123j}   &amp;   x_j-x \\    \hline    x_0 &amp;   y_0 &amp;           &amp;           &amp;               &amp;               &amp;   x_0-x \\    x_1 &amp;   y_1 &amp;   p_{01}  &amp;           &amp;               &amp;               &amp;   x_1-x \\    x_2 &amp;   y_2 &amp;   p_{02}  &amp;   p_{012} &amp;               &amp;               &amp;   x_2-x \\    x_3 &amp;   y_3 &amp;   p_{03}  &amp;   p_{013} &amp;   p_{0123}    &amp;               &amp;   x_3-x \\    x_4 &amp;   y_4 &amp;   p_{04}  &amp;   p_{014} &amp;   p_{0124}    &amp;   p_{01234}   &amp;   x_4-x \\    \cdots      &amp;   \cdots  &amp;   \cdots  &amp;   \cdots      &amp;   \cdots      &amp;   \cdots  &amp;   \cdots \\    x_n &amp;   y_n &amp;   p_{0n}  &amp;   p_{01n} &amp;   p_{012n}    &amp;   p_{0123n}   &amp;   x_n-x \\    \hline\end{array}\]</span></p><div><div class="fold_hider"><div class="close hider_title">艾特肯插值 Matlab 程序代码</div></div><div class="fold"><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[f, f0]</span> = <span class="title">interp_aitken</span><span class="params">(x, y, x0, prec)</span></span></span><br><span class="line">    <span class="keyword">if</span> nargin &lt;= <span class="number">3</span>, prec = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">length</span>(x) == <span class="built_in">length</span>(y), n = <span class="built_in">length</span>(x) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> error(<span class="string">'Incompatible dimension of x and y !!'</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    syms t;</span><br><span class="line">    f = <span class="number">0</span>;</span><br><span class="line">    lastp = y;</span><br><span class="line">    xs = x - t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> k = <span class="number">1</span>:n</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span> = k+<span class="number">1</span>:n+<span class="number">1</span></span><br><span class="line">            curp(<span class="built_in">j</span>) = (lastp(k)*xs(<span class="built_in">j</span>) - lastp(<span class="built_in">j</span>)*xs(k)) / (xs(<span class="built_in">j</span>)-xs(k));</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        lastp = curp;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    f = vpa(simplify(lastp(<span class="keyword">end</span>)), prec);</span><br><span class="line">    <span class="keyword">if</span> nargin &gt; <span class="number">2</span>, f0 = vpa(subs(f, t, x0), prec); <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></div></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;微积分中对于连续或可导函数的研究虽有各路方法各显神通，但对于一个实际问题，若仅给出离散的数据点，通常首先要做的工作是根据这些离散点拟合出便于研究的连续函数。这类问题通常称作「数据拟合」，而其中的特殊情形便是函数插值。&lt;/p&gt;
    
    </summary>
    
      <category term="Applied Mathematics" scheme="http://notes.shinemic.cn/categories/Applied-Mathematics/"/>
    
    
      <category term="Matlab" scheme="http://notes.shinemic.cn/tags/Matlab/"/>
    
      <category term="Interpolation" scheme="http://notes.shinemic.cn/tags/Interpolation/"/>
    
  </entry>
  
  <entry>
    <title>Java 关于栈的简单应用</title>
    <link href="http://notes.shinemic.cn/simple-example-of-stack-in-java/"/>
    <id>http://notes.shinemic.cn/simple-example-of-stack-in-java/</id>
    <published>2018-07-08T14:59:46.000Z</published>
    <updated>2019-02-28T13:06:49.501Z</updated>
    
    <content type="html"><![CDATA[<p>此篇为「<a href="https://algs4.cs.princeton.edu" target="_blank" rel="noopener">算法</a>」一书 §1.3 中关于栈的应用部分的学习记录。 <a id="more"></a></p><p>这本算法书在很多例子中使用作者开发的库 <a href="https://algs4.cs.princeton.edu/code/algs4.jar" target="_blank" rel="noopener">algs4.jar</a>。目前以 <a href="https://www.jetbrains.com/idea" target="_blank" rel="noopener">Idea</a> 作为 Java 开发环境，那么为什么不用 Eclipse？IDE 颜值 + <a href="https://github.com/JetBrains/ideavim" target="_blank" rel="noopener">Vim 插件</a> 是王道。这里提下将 <code>algs4.jar</code> 加入 <code>classpath</code> 的操作：<code>C-S-A-s</code> 或选中工程目录按 <code>F4</code>，在弹出的项目结构 (Project Structure) 中依次定位：<code>Modules</code> -<code>xxx</code>（需要操作的项目）- <code>Dependencies</code> - <code><i class="fa fa-plus fa-fw"></i></code> - <code>JARs or directories...</code>，定位至 <code>algs4.jar</code> 即可。这样就可以直接在 Java 代码中引入 jar 包了，调试运行时的命令显示如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">D:\Java\jdk-10\bin\java -javaagent:D:\Idea\lib\idea_rt.jar=xxxxx:D:\Idea\bin \</span><br><span class="line">-Dfile.encoding=UTF-8 \</span><br><span class="line">-classpath E:\WorkingDirectory\Projects\Java\Algorithms\out\production\Algorithms;\</span><br><span class="line">E:\WorkingDirectory\Projects\Java\Algorithms\lib\algs4.jar ch_01.Test</span><br></pre></td></tr></table></figure><h3 id="dijkstra-双栈算术表达式求值算法">Dijkstra 双栈算术表达式求值算法</h3><p>这里的代码适用范围较窄，仅支持如下格式的算术表达式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">( 1 + ( 2 + 3 ) * ( 4 * 5 ) ) )</span><br><span class="line">( ( 1 + sqrt ( 5.0 ) ) / 2.0 )</span><br></pre></td></tr></table></figure><p>即运算符、左右括号、操作数之间必须存在空格，且每个 <code>+-*/</code> 需要一对括号，即类似 <code>( 2 + 5 ) / ( 4 * 7 )</code> 这种情况是会出错的，且不能有多余的括号。对于符合条件的算式，想法和采取的手段很简单：逐个读取字符，读到数字或运算符，则将其压入相应的操作数栈或运算符栈；读到右括号，则说明与其最近配对的左括号内的算式结果可以算出来，并将结果压入操作数栈，继续读取后面的字符。</p><p>由于符合条件的算式中的括号是成对出现的，于是右括号就相当于一个「弹栈」的标志；而 <code>+-*/</code> 对应两个操作数，所以弹栈时若从运算符栈弹出一个运算符，则需从操作数栈弹出两个操作数，并将运算的结果压入操作数栈；遇到 <code>sqrt</code> 这种「单目」操作符（这里姑且称之为操作符），则两个栈各弹一个，运算结果压入操作数栈。下面为具体实现。（将原书中的 <code>if-else</code> 分支语句改为了 <code>switch-case</code> 语句以提高可读性）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> edu.princeton.cs.algs4.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DijkstraExpressionValue</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Stack&lt;String&gt; ops = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        Stack&lt;Double&gt; val = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span> (!StdIn.isEmpty()) &#123;</span><br><span class="line">            String s = StdIn.readString();</span><br><span class="line">            <span class="keyword">switch</span> (s) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"("</span>: <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"+"</span>: <span class="keyword">case</span> <span class="string">"-"</span>: <span class="keyword">case</span> <span class="string">"*"</span>: <span class="keyword">case</span> <span class="string">"/"</span>: <span class="keyword">case</span> <span class="string">"sqrt"</span>:</span><br><span class="line">                    ops.push(s); <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">")"</span>: &#123;</span><br><span class="line">                    String op = ops.pop();</span><br><span class="line">                    <span class="keyword">double</span> v = val.pop();</span><br><span class="line">                    <span class="keyword">switch</span> (op) &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">"+"</span>: v = val.pop() + v; <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">"-"</span>: v = val.pop() - v; <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">"*"</span>: v = val.pop() * v; <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">"/"</span>: v = val.pop() / v; <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">"sqrt"</span>: v = Math.sqrt(v); <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    val.push(v);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    val.push(Double.parseDouble(s));</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.printf(<span class="string">"%.6f\n"</span>, val.pop());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">( 1 + ( 2 + 3 ) * ( 4 * 5 ) ) )                    : 101.000000</span><br><span class="line">( ( 1 + sqrt ( 5.0 ) ) / 2.0 )                     : 1.618034</span><br><span class="line">sqrt ( ( 1 * ( 2 * ( 3 * ( 4 * ( 5 * 6 ) ) ) ) ) ) : 26.832816</span><br></pre></td></tr></table></figure><hr><p>如果这个例子高级了点，下这个手动实现栈的例子就比较简单而有趣了。</p><ul><li><strong>TODO</strong></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此篇为「&lt;a href=&quot;https://algs4.cs.princeton.edu&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;算法&lt;/a&gt;」一书 §1.3 中关于栈的应用部分的学习记录。
    
    </summary>
    
      <category term="Algorithms" scheme="http://notes.shinemic.cn/categories/Algorithms/"/>
    
    
      <category term="Java" scheme="http://notes.shinemic.cn/tags/Java/"/>
    
      <category term="Stack" scheme="http://notes.shinemic.cn/tags/Stack/"/>
    
  </entry>
  
  <entry>
    <title>第 n 名用户</title>
    <link href="http://notes.shinemic.cn/nth-user/"/>
    <id>http://notes.shinemic.cn/nth-user/</id>
    <published>2018-07-08T14:56:14.000Z</published>
    <updated>2019-02-28T13:06:49.501Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><a href="https://www.codewars.com/kata/t-dot-t-t-number-6-nth-user/train/csharp" target="_blank" rel="noopener">T.T.T.#6: nth user</a><br>A product to do market research, n users to participate in the activities.They give each user a number. The first user number is 1,second users numbered 2, and so on... But no digits 4 and 9 in user's numbers,that is to say the number of 3rd users is 3,the number of 4th users is 5...the number of 8th users is 10... like this:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user   1st 2nd 3rd 4th 5th 6th 7th 8th 9th 10th ........ nth</span><br><span class="line">number  1   2   3   5   6   7   8  10   11  12  ........ ??</span><br></pre></td></tr></table></figure>Please calculate, how much is the number of the nth user?</div><p>简言之，从 <span class="math inline">\(1\)</span> 开始，将不含 <span class="math inline">\(4\)</span> 和 <span class="math inline">\(9\)</span> 的正整数依次写下来，求第 <span class="math inline">\(n\)</span> 个数。</p><a id="more"></a><h3 id="简单的尝试">简单的尝试</h3><p>暴力穷举，从 <span class="math inline">\(1\)</span> 开始逐个验证是否含有数码 <span class="math inline">\(4\)</span> 和 <span class="math inline">\(9\)</span> 即可。原题仅支持 Javascript 及 C# 代码提交，所以写段 C# ：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Kata</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Boolean <span class="title">CheckValidNumber</span>(<span class="params"><span class="keyword">int</span> n</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (; n != <span class="number">0</span>; n /= <span class="number">10</span>)</span><br><span class="line">            <span class="keyword">if</span> (n % <span class="number">10</span> == <span class="number">4</span> || n % <span class="number">10</span> == <span class="number">9</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">UserNumber</span>(<span class="params"><span class="keyword">int</span> n</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> t = <span class="number">1</span>, tmp = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (t++ &lt;= n) &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">                <span class="keyword">if</span> (CheckValidNumber(tmp++))</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (tmp - <span class="number">1</span>).ToString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不出所料超时：<code>Process was terminated. It took longer than 12000ms to complete</code>。</p><h3 id="巧用进制">巧用进制</h3><p>观察符合题意的数字：</p><figure class="highlight plain"><figcaption><span>列表 I</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">      1   2   3   5   6   7   8</span><br><span class="line"> 10  11  12  13  15  16  17  18</span><br><span class="line"> 20  21  22  23  25  26  27  28</span><br><span class="line"> 30  31  32  33  35  36  37  38</span><br><span class="line"> 50  51  52  53  55  56  57  58</span><br><span class="line"> 60  61  62  63  65  66  67  68</span><br><span class="line"> 70  71  72  73  75  76  77  78</span><br><span class="line"> 80  81  82  83  85  86  87  88</span><br><span class="line">100 101 102 103 105 106 107 108</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>很容易发现每个数的个位顺序均为 <span class="math inline">\(0, 1, 2, 3, 5, 6, 7, 8\)</span>, 第一行除外。如果将这个序列映射到容易处理的序列如自然数序列、其它进制数序列，则可将问题化归至简单问题上，联想到八进制的逢八进一，把上述列表按照「八进制」的规则重排：</p><figure class="highlight plain"><figcaption><span>列表 II</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">      1   2   3   4   5   6   7</span><br><span class="line"> 10  11  12  13  14  15  16  17</span><br><span class="line"> 20  21  22  23  24  25  26  27</span><br><span class="line"> 30  31  32  33  34  35  36  37</span><br><span class="line"> 40  41  42  43  44  45  46  47</span><br><span class="line"> 50  51  52  53  54  55  56  57</span><br><span class="line"> 60  61  62  63  64  65  66  67</span><br><span class="line"> 70  71  72  73  74  75  76  77</span><br><span class="line"> 80  81  82  83  84  85  86  87</span><br><span class="line"> 90  91  92  93  94  95  96  97</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>建立了一个一一映射 <span class="math inline">\(\mathrm{II} \mapsto \mathrm{I}\)</span>。于是对于题目中的第 <span class="math inline">\(n_{(10)}\)</span> 个的数字，可先将其转为八进制后表示的数字 <span class="math inline">\(n_{(8)}\)</span>，在列表 II 中定位这个数，再到列表 I 转换即可。西莎普代码实现：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">UserNumber</span>(<span class="params"><span class="keyword">int</span> n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">char</span>[] tb = &#123;<span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>&#125;;</span><br><span class="line">    <span class="keyword">var</span> n8 = Convert.ToString(n, <span class="number">8</span>).ToCharArray();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n8.Length; i++)</span><br><span class="line">        n8[i] = tb[n8[i] - <span class="string">'0'</span>];</span><br><span class="line">    <span class="keyword">return</span> String.Concat(n8);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1       : 1</span><br><span class="line">2       : 2</span><br><span class="line">5       : 6</span><br><span class="line">10      : 12</span><br><span class="line">1000    : 1860</span><br><span class="line">5000    : 11710</span><br><span class="line">99999   : 303238</span><br><span class="line">1000000 : 3751100</span><br><span class="line">9999999 : 57113188</span><br></pre></td></tr></table></figure><h3 id="拓展-包含一系列数字">拓展 – 包含一系列数字</h3><blockquote><p>序列 <span class="math inline">\(\{c_n\}\)</span> 由正整数中去除含有数字 <span class="math inline">\(a_1, a_2, \ldots, a_k \ (k &lt; 9, a_i \neq 0)\)</span> 的数组成，确定其第 <span class="math inline">\(N\)</span> 项。</p></blockquote><p>由于去除了 <span class="math inline">\(k\)</span> 个数码，所以这个序列中的数字由 <span class="math inline">\(10 - k\)</span> 个数码组成，这些剩下的数码记为 $ b_1, b_2, , b_{10-k} $。同样的思路，将 <span class="math inline">\(0, 1, \ldots, 9-k\)</span> 分别对应至 <span class="math inline">\(b_1, b_2, \ldots, b_{10-k}\)</span>，之后将 <span class="math inline">\(N\)</span> 转为 <span class="math inline">\(10 - k\)</span> 进制数，利用这层映射关系得到原数。附上 Java 代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">generalUserNumber</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> base = <span class="number">10</span> - a.length;</span><br><span class="line">    <span class="keyword">int</span>[] tmp = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span>[] b = <span class="keyword">new</span> <span class="keyword">char</span>[base];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> t : a) tmp[t] = -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (tmp[i] != -<span class="number">1</span>) &#123;</span><br><span class="line">            b[j] = (<span class="keyword">char</span>) (i + <span class="string">'0'</span>);</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">char</span>[] nb = Integer.toString(n, base).toCharArray();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nb.length; i++)</span><br><span class="line">        nb[i] = b[nb[i] - <span class="string">'0'</span>];</span><br><span class="line">    <span class="keyword">return</span> String.valueOf(nb);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">10   [1, 3, 5, 7, 9]          : 40</span><br><span class="line">20   [2, 4, 6, 8]             : 53</span><br><span class="line">30   [8, 4, 6, 9, 2, 7]       : 153</span><br><span class="line">2048 [9, 8, 7, 6, 5, 4, 3, 2] : 100000000000</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;a href=&quot;https://www.codewars.com/kata/t-dot-t-t-number-6-nth-user/train/csharp&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;T.T.T.#6: nth user&lt;/a&gt;&lt;br&gt;
A product to do market research, n users to participate in the activities.
They give each user a number. The first user number is 1,
second users numbered 2, and so on... But no digits 4 and 9 in user&#39;s numbers,
that is to say the number of 3rd users is 3,
the number of 4th users is 5...the number of 8th users is 10... like this:
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user   1st 2nd 3rd 4th 5th 6th 7th 8th 9th 10th ........ nth&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;number  1   2   3   5   6   7   8  10   11  12  ........ ??&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
Please calculate, how much is the number of the nth user?&lt;/div&gt;
&lt;p&gt;简言之，从 &lt;span class=&quot;math inline&quot;&gt;\(1\)&lt;/span&gt; 开始，将不含 &lt;span class=&quot;math inline&quot;&gt;\(4\)&lt;/span&gt; 和 &lt;span class=&quot;math inline&quot;&gt;\(9\)&lt;/span&gt; 的正整数依次写下来，求第 &lt;span class=&quot;math inline&quot;&gt;\(n\)&lt;/span&gt; 个数。&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithms" scheme="http://notes.shinemic.cn/categories/Algorithms/"/>
    
    
      <category term="Java" scheme="http://notes.shinemic.cn/tags/Java/"/>
    
      <category term="C-Sharp" scheme="http://notes.shinemic.cn/tags/C-Sharp/"/>
    
  </entry>
  
  <entry>
    <title>Matlab 程序设计示例</title>
    <link href="http://notes.shinemic.cn/essentials-of-matlab-examples/"/>
    <id>http://notes.shinemic.cn/essentials-of-matlab-examples/</id>
    <published>2018-07-07T06:38:59.000Z</published>
    <updated>2019-02-28T13:06:49.485Z</updated>
    
    <content type="html"><![CDATA[<p>记录 Matlab 经典、有趣的程序例子。</p><a id="more"></a><h3 id="三位数">三位数</h3><p>将 <span class="math inline">\(1\sim 9\)</span> 这 <span class="math inline">\(9\)</span> 个数字组成 <span class="math inline">\(3\)</span> 个三位数，要求第 <span class="math inline">\(2\)</span> 个三位数是第 <span class="math inline">\(1\)</span> 个三位数的 <span class="math inline">\(2\)</span> 倍，要求第 <span class="math inline">\(3\)</span> 个三位数是第 <span class="math inline">\(1\)</span> 个三位数的 <span class="math inline">\(3\)</span> 倍，找出所有可行方案。<br>笔者的思路很简单，首先初始化一个 <span class="math inline">\(1 \times 10\)</span> 数组代表数码 <span class="math inline">\(0 \sim 9\)</span> 出现的次数，把试验的数组拼接成字符，再一个萝卜一个萝卜地填坑，如果坑 <span class="math inline">\(1\)</span> 至坑 <span class="math inline">\(9\)</span> 全部被填满则符合题意；比如 <span class="math inline">\(123123123\)</span> 填坑的结果就是 <span class="math inline">\([0\ 1\ 1\ 1\ 0\ 0\ 0\ 0\ 0\ 0]\)</span>，“坑”没有被填满，不符题意。 <div><div class="fold_hider"><div class="close hider_title">代码</div></div><div class="fold"><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> m = <span class="number">123</span>:<span class="number">329</span></span><br><span class="line">    digs = <span class="built_in">zeros</span>(<span class="number">1</span>, <span class="number">10</span>);</span><br><span class="line">    nums = m * (<span class="number">1</span>:<span class="number">3</span>);</span><br><span class="line">    allc = strrep(num2str(nums), <span class="string">' '</span>, <span class="string">''</span>);</span><br><span class="line">    <span class="keyword">for</span> k = <span class="number">1</span>:<span class="number">9</span></span><br><span class="line">        digs(allc(k)-<span class="string">'0'</span>+<span class="number">1</span>) = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> sum(digs(<span class="number">2</span>:<span class="keyword">end</span>)) == <span class="number">9</span></span><br><span class="line">        count = count + <span class="number">1</span>;</span><br><span class="line">        fprintf(<span class="string">'第 %d 组解: %s\n'</span>, count, mat2str(nums));</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 第 1 组解: [192 384 576]</span></span><br><span class="line"><span class="comment">% 第 2 组解: [219 438 657]</span></span><br><span class="line"><span class="comment">% 第 3 组解: [273 546 819]</span></span><br><span class="line"><span class="comment">% 第 4 组解: [327 654 981]</span></span><br></pre></td></tr></table></figure></div></div></p><p>当然《MATLAB 数值计算实战》作者的代码更加赏心悦目：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> m = <span class="number">123</span>:<span class="number">329</span></span><br><span class="line">    s = num2str(m * [<span class="number">1</span>;<span class="number">2</span>;<span class="number">3</span>]) - <span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isequal</span>(sort(s(:)).<span class="string">', 1:9)</span></span><br><span class="line"><span class="string">        count = count + 1;</span></span><br><span class="line"><span class="string">        fprintf('</span>第 <span class="comment">%d 组解: %s\n', count, mat2str(m * (1:3)));</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>首先其转化为字符的过程中使用了列向量而行向量，于是 <code>s</code> 为 <span class="math inline">\(3 \times 3\)</span> 的数组，而笔者则需要把重心放在字符串的处理上，相当伤脑筋。后面直接将 <code>s</code> 拉直、转置为 <span class="math inline">\(1 \times 9\)</span> 的字符数组进行排序，与 <span class="math inline">\(1:9\)</span> 进行对比即可，一气呵成。</p><h3 id="杨辉三角">杨辉三角</h3><p>对于给定行数，美观输出杨辉三角，需要事先确定好每个数字所占宽度，这里将宽度设定为所有数字中最大数的字符个数的两倍（<span class="math inline">\(2d\)</span>）。其次需要控制好三角形左边的空格长度。</p><div><div class="fold_hider"><div class="close hider_title">代码</div></div><div class="fold"><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pasc_triangle</span><span class="params">(N)</span></span></span><br><span class="line">    m = <span class="built_in">fix</span>(<span class="built_in">log10</span>(<span class="built_in">nchoosek</span>(N<span class="number">-1</span>, <span class="built_in">ceil</span>((N<span class="number">-1</span>)/<span class="number">2</span>))))+<span class="number">1</span>;</span><br><span class="line">    d = <span class="built_in">ceil</span>((m+<span class="number">3</span>)/<span class="number">2</span>);</span><br><span class="line">    x = <span class="number">1</span>;</span><br><span class="line">    fprintf([blanks(d*(N<span class="number">-1</span>)), <span class="string">'%-'</span>, int2str(<span class="number">2</span>*d), <span class="string">'d\n'</span>], x);</span><br><span class="line">    <span class="keyword">for</span> k=<span class="number">2</span>:N</span><br><span class="line">        fprintf(blanks(d*(N-k)));</span><br><span class="line">        x = [<span class="number">0</span>, x]+[x, <span class="number">0</span>];</span><br><span class="line">        fprintf([<span class="string">'%-'</span>, int2str(<span class="number">2</span>*d), <span class="string">'d'</span>], x);</span><br><span class="line">        <span class="comment">% fprintf('%-*d', [repmat(2*d, 1, length(x)); x]);</span></span><br><span class="line">        fprintf(<span class="string">'\n'</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></div></div><h3 id="约瑟夫环">约瑟夫环</h3><p>设有 <span class="math inline">\(n\)</span> 个人围成一圈，从位置 <span class="math inline">\(s\ (1 \leqslant s \leqslant n)\)</span> 上的人从 <span class="math inline">\(1\)</span> 开始报数，数到 <span class="math inline">\(m\)</span> 的人即出列。下一个人即原来第 <span class="math inline">\(m+1\)</span> 位置上的人又从 <span class="math inline">\(1\)</span> 报数，报到第 <span class="math inline">\(m\)</span> 个人出列。重复此过程直至所有人全部出列位置。</p><p>首先需要理解一个简单的公式。 <div class="note ">$n$ 个有序点围成的圆圈中第 $x$ 个元素按照序号增大的方向移动 $k$ 步后所在的位置为$$    (x+k-1) \ \text{mod} \ n + 1 \tag{J} \label{J}$$</div></p><p>于是以下两种方法均可实现算法。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">seq</span> = <span class="title">joseph1</span><span class="params">(n, s, m)</span></span></span><br><span class="line">    seq = [];</span><br><span class="line">    seat = <span class="built_in">ones</span>(<span class="number">1</span>, n);</span><br><span class="line">    s = s - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> any(seat)</span><br><span class="line">        <span class="keyword">for</span> k = <span class="number">1</span>:m</span><br><span class="line">            s = <span class="number">1</span> + <span class="built_in">mod</span>(s, n);</span><br><span class="line">            <span class="keyword">while</span> ~seat(s)</span><br><span class="line">                s = <span class="number">1</span> + <span class="built_in">mod</span>(s, n);</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        seat(s) = <span class="number">0</span>;</span><br><span class="line">        seq = [seq, s];</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">seq</span> = <span class="title">joseph2</span><span class="params">(n, s, m)</span></span></span><br><span class="line">    seq = <span class="built_in">zeros</span>(<span class="number">1</span>, n);</span><br><span class="line">    seat = <span class="number">1</span>:n;</span><br><span class="line">    s = s - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> k = n:<span class="number">-1</span>:<span class="number">1</span></span><br><span class="line">        s = <span class="built_in">mod</span>(s + m - <span class="number">1</span>, k);</span><br><span class="line">        seq(n - k + <span class="number">1</span>) = seat(s + <span class="number">1</span>);</span><br><span class="line">        seat(s + <span class="number">1</span>) = [];</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>第一种方法思路很简单：总体不变，因为每轮会有人出局，所以设置“落座”记号，有人为 <span class="math inline">\(1\)</span> 无人为 <span class="math inline">\(0\)</span>。每轮需要有 <span class="math inline">\(m\)</span> 次“有效的”移动，即移动到下一个座位上必须有人，否则继续移动。<br>第二种代码就比较简洁了，程序中的 <span class="math inline">\(s\)</span> 时始终表示下一轮第一个人前面的位置，所以公式 <span class="math inline">\(\eqref{J}\)</span> 需要减去 <span class="math inline">\(1\)</span>。每轮结束移除已出列的数字，直至数组为空为止。</p><h3 id="连续数字出现次数">连续数字出现次数</h3><p>对于一个行向量 <span class="math inline">\([0\ 0\ 0\ 1\ 1\ 1\ 0\ 1\ 1\ 0\ 0\ 1\ 1\ 1\ 0\ 0\ 0\ 1]\)</span>，统计连续 <span class="math inline">\(1\)</span> 出现的位置以及次数。</p><p>考虑其一阶差分：<span class="math inline">\([0\ 0\ 1\ 0\ 0\ -1\ 1\ 0\ -1\ 0\ 1\ 0\ 0\ -1\ 0\ 0\ 1]\)</span>，可观察到原向量中开始出现 <span class="math inline">\(1\)</span> 的位置在差分后的向量中也为 <span class="math inline">\(1\)</span>，并结束于 <span class="math inline">\(-1\)</span> 之前。但考虑到首末问题，应该在原向量首尾各添加 <span class="math inline">\(0\)</span> 以保证正确性。代码如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>];</span><br><span class="line">dx = diff([<span class="number">0</span> x <span class="number">0</span>]);</span><br><span class="line">res = [find(dx==<span class="number">1</span>); find(dx==<span class="number">-1</span>) - find(dx==<span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment">% res =</span></span><br><span class="line"><span class="comment">%     4     8    12    18</span></span><br><span class="line"><span class="comment">%     3     2     3     1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录 Matlab 经典、有趣的程序例子。&lt;/p&gt;
    
    </summary>
    
      <category term="Development and Deployment" scheme="http://notes.shinemic.cn/categories/Development-and-Deployment/"/>
    
    
      <category term="Matlab" scheme="http://notes.shinemic.cn/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>Matlab 程序设计之编程技巧</title>
    <link href="http://notes.shinemic.cn/essentials-of-matlab-skills/"/>
    <id>http://notes.shinemic.cn/essentials-of-matlab-skills/</id>
    <published>2018-07-07T06:37:06.000Z</published>
    <updated>2019-02-28T13:06:49.485Z</updated>
    
    <content type="html"><![CDATA[<p>记录学习 Matlab 中的技巧。</p><a id="more"></a><h3 id="fprintf-技巧">fprintf 技巧</h3><p>Matlab 中的运算均基于向量，甚至连输出函数 <code>fprintf</code> 也不例外。 对于一个实际问题：</p><div class="note info">$3$ 对情侣参加婚礼，$3$ 个新郎为 $A$、$B$、$C$，$3$ 个新娘为 $X$、$Y$、$Z$。有人不知道谁和谁结婚，于是询问 $6$ 位新人中的 $3$ 位，$3$ 人回答道：$A$ 和 $X$ 结婚；$X$ 和 $C$ 结婚；$C$ 和 $Z$ 结婚。但 $3$ 人说的全是假话。</div><p>为判明事实真相，穷举即可：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> A=<span class="string">'X'</span>:<span class="string">'Z'</span> <span class="keyword">for</span> B=<span class="string">'X'</span>:<span class="string">'Z'</span> <span class="keyword">for</span> C=<span class="string">'X'</span>:<span class="string">'Z'</span></span><br><span class="line">    <span class="keyword">if</span> A ~= <span class="string">'X'</span> &amp;&amp; C ~= <span class="string">'X'</span> &amp;&amp; C ~= <span class="string">'Z'</span> &amp;&amp; A ~= B &amp;&amp; B ~= C &amp;&amp; C ~= A</span><br><span class="line">        fprintf(<span class="string">'新郎 %c 将和新娘 %c 结婚\n'</span>, [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>; A, B, C]);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span>; <span class="keyword">end</span>; <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 新郎 A 将和新娘 Z 结婚</span></span><br><span class="line"><span class="comment">% 新郎 B 将和新娘 X 结婚</span></span><br><span class="line"><span class="comment">% 新郎 C 将和新娘 Y 结婚</span></span><br></pre></td></tr></table></figure><p>注意到一条语句便可产生 <span class="math inline">\(3\)</span> 条输出，说明应以向量的角度思考看待问题。</p><h3 id="灵活的输入输出">灵活的输入输出</h3><p>验证算术平均数 <span class="math inline">\(A_n=\frac 1n \sum a\)</span>、几何平均数 <span class="math inline">\(G_n=\prod a^{1/n}\)</span>、调和平均数 <span class="math inline">\(H_n=n/(\sum 1/a)\)</span>、平方平均数 <span class="math inline">\(Q_n=\sqrt{1/n \sum a^2}\)</span> 的大小关系为 <span class="math inline">\(H_n \leqslant G_n \leqslant A_n \leqslant Q_n\)</span>。代码如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[A, G, H, Q] = averages(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>);</span><br><span class="line">T = averages([<span class="number">1</span>;<span class="number">2</span>;<span class="number">3</span>], [<span class="number">2</span>;<span class="number">4</span>;<span class="number">5</span>], [<span class="number">6</span>;<span class="number">4</span>;<span class="number">7</span>], [<span class="number">9</span>;<span class="number">7</span>;<span class="number">4</span>], [<span class="number">8</span>;<span class="number">3</span>;<span class="number">5</span>]);</span><br><span class="line"><span class="built_in">disp</span>([A G H Q]);</span><br><span class="line"><span class="built_in">disp</span>(T);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">varargout</span> = <span class="title">averages</span><span class="params">(varargin)</span></span></span><br><span class="line">    n = nargin;</span><br><span class="line">    [An, Gn, Hn, Qn] = deal(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> k=<span class="number">1</span>:n</span><br><span class="line">        ak = varargin&#123;k&#125;;</span><br><span class="line">        <span class="keyword">if</span> any(ak) &lt;= <span class="number">0</span>, error(<span class="string">'输入参数必须为正数.'</span>), <span class="keyword">end</span>;</span><br><span class="line">        An = An + ak;</span><br><span class="line">        Gn = Gn .* ak;</span><br><span class="line">        Hn = Hn + <span class="number">1</span> ./ ak;</span><br><span class="line">        Qn = Qn + ak .^ <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    A = An / n;</span><br><span class="line">    G = Gn .^ (<span class="number">1</span>/n);</span><br><span class="line">    H = n ./ Hn;</span><br><span class="line">    Q = <span class="built_in">sqrt</span>(Qn/n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> nargout == <span class="number">1</span></span><br><span class="line">        varargout&#123;<span class="number">1</span>&#125; = table(...</span><br><span class="line">            A, G, H, Q, <span class="string">'VariableNames'</span>, ...</span><br><span class="line">            &#123;<span class="string">'Arithmetic'</span>, <span class="string">'Geometric'</span>, <span class="string">'Harmonic'</span>, <span class="string">'Square'</span>&#125; ...</span><br><span class="line">        );</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        [varargout&#123;<span class="number">1</span>:<span class="number">4</span>&#125;] = deal(A, G, H, Q);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%    4.5000    3.7644    2.9435    5.0498</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%    Arithmetic    Geometric    Harmonic    Square</span></span><br><span class="line"><span class="comment">%    __________    _________    ________    ______</span></span><br><span class="line"><span class="comment">%    5.2           3.8664       2.6277      6.0992</span></span><br><span class="line"><span class="comment">%      4           3.6768       3.3871      4.3359</span></span><br><span class="line"><span class="comment">%    4.8           4.6179       4.4397        4.98</span></span><br></pre></td></tr></table></figure><p>这段代码有很多地方可圈可点。首先通过 <code>varargin</code>、<code>varargout</code> 说明函数 <code>averages</code> 是「变长度」输入输出函数，也就是说如果调用该函数的时候可以针对不同的输入、输出表现出不同的结果，如代码中的判断语句，针对 <code>nargout</code> 实现了分别赋值给四个输出参数、输出表格的不同表现形式；在初始化参数时运用 <code>deal</code> 实现了「多重赋值」；在处理每个 <code>varargin(k)</code> 时将其视为数组，并进行必要的判断。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录学习 Matlab 中的技巧。&lt;/p&gt;
    
    </summary>
    
      <category term="Tips and Tricks" scheme="http://notes.shinemic.cn/categories/Tips-and-Tricks/"/>
    
    
      <category term="Matlab" scheme="http://notes.shinemic.cn/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>Matlab 程序设计之作图</title>
    <link href="http://notes.shinemic.cn/essentials-of-matlab-plotting/"/>
    <id>http://notes.shinemic.cn/essentials-of-matlab-plotting/</id>
    <published>2018-07-06T12:42:34.000Z</published>
    <updated>2019-02-28T13:06:49.485Z</updated>
    
    <content type="html"><![CDATA[<p>Matlab 画图质量随着版本号迭代有着显著提升，而且入门较简单。</p><a id="more"></a><p>比如这个「奥运五环」：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">2</span>;</span><br><span class="line">r = <span class="number">1.2</span>;</span><br><span class="line">hold on;</span><br><span class="line">theta = <span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">2</span> * <span class="built_in">pi</span>).<span class="string">';</span></span><br><span class="line"><span class="string">X = [-a, 0, a, a / 2, -a / 2];</span></span><br><span class="line"><span class="string">Y = [0, 0, 0, -sqrt(2) / 2 * a, -sqrt(2) / 2 * a];</span></span><br><span class="line"><span class="string">plot([X, X(1)], [Y, Y(1)], '</span>.--<span class="string">', '</span>markersize', <span class="number">20</span>);</span><br><span class="line">circles = plot((X + Y * <span class="number">1</span><span class="built_in">i</span>) + r * <span class="built_in">exp</span>(theta * <span class="number">1</span><span class="built_in">i</span>), <span class="string">'linewidth'</span>, <span class="number">5</span>);</span><br><span class="line"><span class="comment">% circles = plot(X+r*cos(theta), Y+r*sin(theta), 'linewidth', 5);</span></span><br><span class="line">set(circles, &#123;<span class="string">'color'</span>&#125;, num2cell(<span class="string">'bkrgy'</span>)');</span><br><span class="line">axis off equal;</span><br><span class="line">hold off;</span><br><span class="line">saveas(gcf, <span class="string">'olympic-rings.svg'</span>);</span><br></pre></td></tr></table></figure><p><img src="/img/olympic-rings.svg" width="45%"></p><p>其中利用极坐标画圆有点意思，由于 <code>plot</code> 函数能直接对复数的实数 - 虚数对进行绘图，所以通过 <span class="math display">\[    x+r\cos\theta + \mathrm{i}\, (y+r\sin\theta)    = r e^{\mathrm i\, \theta} + (x + \mathrm i\, y)\]</span> 也能绘制出圆形。另外批量对线条改变颜色的代码参考了 <a href="https://ww2.mathworks.cn/matlabcentral/answers/19815-explicitly-specifying-line-colors-when-plotting-a-matrix" target="_blank" rel="noopener">Explicitly specifying line colors when plotting a matrix</a>。</p><hr><p>交互图形的制作也十分方便。对于定积分 <span class="math inline">\(\displaystyle I = \int_0^{\frac 12} \frac{1}{1+x^3}\, \mathrm dx\)</span> 考察其被积函数以及其 <span class="math inline">\(5\)</span> 阶 Taylor 展开函数的图形。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">syms x;</span><br><span class="line">f = <span class="number">1</span> / (<span class="number">1</span> + x ^ <span class="number">3</span>);</span><br><span class="line">I1 = int(f, <span class="number">0</span>, <span class="number">1</span>/<span class="number">2</span>);</span><br><span class="line">ft = taylor(f, <span class="string">'order'</span>, <span class="number">6</span>);</span><br><span class="line">I2 = int(ft, <span class="number">0</span>, <span class="number">1</span>/<span class="number">2</span>);</span><br><span class="line">fpl = fplot([f, ft], [<span class="number">0</span>, <span class="number">1</span>/<span class="number">2</span>]);</span><br><span class="line">set(gca, <span class="string">'fontname'</span>, <span class="string">'Euclid'</span>, <span class="string">'fontweight'</span>, <span class="string">'bold'</span>);</span><br><span class="line">set(fpl, <span class="string">'linewidth'</span>, <span class="number">1.2</span>, &#123;<span class="string">'linestyle'</span>&#125;, &#123;<span class="string">'-'</span>; <span class="string">'--'</span>&#125;, <span class="string">'color'</span>, <span class="string">'k'</span>);</span><br><span class="line">legend(&#123;[<span class="string">'$$f='</span>, latex(f), <span class="string">'$$'</span>], [<span class="string">'$$f_&#123;\rm Taylor&#125;='</span>, latex(ft), <span class="string">'$$'</span>]&#125;, ...</span><br><span class="line">       <span class="string">'interpreter'</span>, <span class="string">'latex'</span>, <span class="string">'fontsize'</span>, <span class="number">11</span>);</span><br><span class="line">gtext(&#123;[<span class="string">'$$\int_0^&#123;\frac 12&#125;'</span>, latex(f), <span class="string">'\, \mathrm dx='</span>, latex(I1), ...</span><br><span class="line">        <span class="string">'\approx'</span>, latex(vpa(I1, <span class="number">4</span>)), <span class="string">'$$'</span>], ...</span><br><span class="line">       [<span class="string">'$$\int_0^&#123;\frac 12&#125;\left('</span>, latex(ft), <span class="string">'\right)\, \mathrm dx='</span>, ...</span><br><span class="line">        latex(I2), <span class="string">'\approx'</span>, latex(vpa(I2, <span class="number">4</span>)), <span class="string">'$$'</span>]&#125;, ...</span><br><span class="line">      <span class="string">'interpreter'</span>, <span class="string">'latex'</span>, <span class="string">'fontsize'</span>, <span class="number">11</span>);</span><br><span class="line">box off;</span><br></pre></td></tr></table></figure><p><img src="/img/integrate(1+x3).svg" width="45%"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Matlab 画图质量随着版本号迭代有着显著提升，而且入门较简单。&lt;/p&gt;
    
    </summary>
    
      <category term="Memos" scheme="http://notes.shinemic.cn/categories/Memos/"/>
    
    
      <category term="Matlab" scheme="http://notes.shinemic.cn/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>Matlab 程序设计之编程基础</title>
    <link href="http://notes.shinemic.cn/essentials-of-matlab-foundation-of-programming/"/>
    <id>http://notes.shinemic.cn/essentials-of-matlab-foundation-of-programming/</id>
    <published>2018-07-05T17:10:39.000Z</published>
    <updated>2019-02-28T13:06:49.485Z</updated>
    
    <content type="html"><![CDATA[<p>本系列试图将笔者在研究过程中认为比较重要、容易遗忘以及富有创新性或启发性的程序代码及思想一一记录，一来节省遇见同类问题时耗费在检索资料上的时间，二来也能见证自己构建知识体系框架的历程。</p><a id="more"></a><p>新版本的马特来布添加了诸多与时俱进的特性和工具箱，一直为人诟病的画图也自带抗锯齿了，R2016b 后的版本也支持脚本中函数了。MathWorks 始终坚持半年一新地迭代着 Matlab 的版本，可见其非常地用心。花了三天时间分别在 Windows 10 及 Ubuntu 16.04 x64 下安装好 Matlab，<del>因个人感觉 2017 以后的版本在 Windows 上卡顿明显，所以</del> Win 和 Linux 下的版本均为 R2017b。当然后者是面向终端的命令行版的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/MATLAB/R2017b/bin/matlab -nodisplay</span><br></pre></td></tr></table></figure><p>目前参考的书籍有：</p><ul><li>《MATLAB 语言常用算法程序集》（电子版）</li><li>《MATLAB 之父：编程实践》（电子版）</li><li>《高等应用数学问题的 MATLAB 求解》（电子版）</li><li>《MATLAB 数值计算》（电子版）</li><li>《大学数学实验》（电子版）</li><li>《MATLAB 统计分析与应用：40 个案例分析》</li><li>《MATLAB 数学建模》</li><li>《MATLAB 数值计算实战》</li></ul><p>说实话，有点贪心，但也是种挑战。若能在短时间内去其糟粕取其精华，相比也是种奇妙的学习体验。</p><p>一般社会哥人狠话不多，闲话至此，下面进入没有主题的正题。</p><p>Linux 下安装的时候出现了点小插曲，在其中一台 Ubuntu 16.04.4 的机器上安装完 Matlab 2017b 后，无法使用数学符号工具箱，出现如下错误：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; syms a b c;</span><br><span class="line">Error using mupadmex</span><br><span class="line">Error in MuPAD command: .</span><br><span class="line">Error in symengine</span><br><span class="line">Error in sym (line <span class="number">189</span>)</span><br><span class="line">        symengine;</span><br><span class="line">Error in syms (line <span class="number">197</span>)</span><br><span class="line">toDefine = sym(<span class="built_in">zeros</span>(<span class="number">1</span>, <span class="number">0</span>));</span><br></pre></td></tr></table></figure><p>搜寻所有可能与该问题相关的途径后， 无论是更新、回滚 <code>fontconfig</code>，<code>libfreetype</code> 版本还是重新安装其他版本 Matlab for Linux 后均无效，说明 Linux 下操作系统状态对 Matlab 有一定影响，遂放弃此台服务器。</p><p>由于笔者的系统为英文系统，而 Windows 下区分系统 Locale 的方式在于「格式」而非「地区」（具体设置为 Control Panel - Clock, Language, and Region - Region - Formats），所以会出现两个显著问题：程序界面为英文、编辑器里中文乱码。界面为英文倒不能说是问题，但乱码就很令人头疼了。查阅资料后得到的比较一劳永逸的方法是改动「格式」为中国。其他方法如修改文件 <code>lcdata.xml</code> 经亲测并不考谱。另，若仍坚持在英文系统下使用 Matlab，并需输出中文，务必运行语句 <figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">feature(<span class="string">'DefaultCharacterSet'</span>, <span class="string">'UTF-8'</span>);</span><br></pre></td></tr></table></figure></p><hr><h2 id="vim-插件">Vim 插件</h2><p>在 <code>.vimrc</code> 中添加：</p><figure class="highlight vim"><figcaption><span>.vimrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Plugin <span class="string">'michaelHL/matlab-screen'</span></span><br><span class="line">Plugin <span class="string">'tdehaeze/matlab-vim'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">map</span> <span class="symbol">&lt;F8&gt;</span> :<span class="keyword">call</span> CompileRun()<span class="symbol">&lt;CR&gt;</span></span><br><span class="line">func! CompileRun()</span><br><span class="line">    exec <span class="string">"w"</span></span><br><span class="line">    <span class="keyword">if</span> &amp;<span class="keyword">filetype</span> == <span class="string">'c'</span></span><br><span class="line">       :!clear; gcc -std=c11 -Wall % -o %&lt;; time ./%&lt;</span><br><span class="line">    <span class="keyword">elseif</span> &amp;<span class="keyword">filetype</span> == <span class="string">'matlab'</span></span><br><span class="line">       :<span class="keyword">call</span> RunMatlabCurrentFile()</span><br><span class="line">    <span class="keyword">endif</span></span><br><span class="line">endfunc</span><br></pre></td></tr></table></figure><p>在 Vim 中打开 <code>.m</code> 文件，<code>F8</code> 即可运行。</p><h2 id="基本命令及快捷键">基本命令及快捷键</h2><table><colgroup><col style="width: 22%"><col style="width: 27%"><col style="width: 22%"><col style="width: 27%"></colgroup><thead><tr class="header"><th style="text-align: left;">命令</th><th style="text-align: left;">功能</th><th style="text-align: left;">命令</th><th style="text-align: left;">功能</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><code>clc</code></td><td style="text-align: left;">清屏（甚至清除了缓冲区）</td><td style="text-align: left;"><code>clear</code></td><td style="text-align: left;">清除工作空间所有变量</td></tr><tr class="even"><td style="text-align: left;"><code>clear all</code></td><td style="text-align: left;">从工作空间清除所有变量和函数</td><td style="text-align: left;"><code>clear &lt;变量名&gt;</code></td><td style="text-align: left;">清除指定变量</td></tr><tr class="odd"><td style="text-align: left;"><code>clf</code></td><td style="text-align: left;">清除图形窗口内容（注意该命令会弹出新的画布，相当于 <code>figure</code> ）</td><td style="text-align: left;"><code>delete &lt;文件名&gt;</code></td><td style="text-align: left;">从<strong>磁盘</strong>中删除文件</td></tr><tr class="even"><td style="text-align: left;"><code>cla</code></td><td style="text-align: left;">清空当前坐标系</td><td style="text-align: left;"><code>type</code></td><td style="text-align: left;">显示 m 文件的内容</td></tr><tr class="odd"><td style="text-align: left;"><code>help &lt;命令名&gt;</code></td><td style="text-align: left;">获取所列命令的帮助信息</td><td style="text-align: left;"><code>which &lt;文件名&gt;</code></td><td style="text-align: left;">查找指定文件路径</td></tr><tr class="even"><td style="text-align: left;"><code>who</code></td><td style="text-align: left;">显示当前工作空间所有变量的一个<strong>简单列表</strong></td><td style="text-align: left;"><code>whos</code></td><td style="text-align: left;">列出变量大小、数据格式等<strong>详细信息</strong></td></tr><tr class="odd"><td style="text-align: left;"><code>what</code></td><td style="text-align: left;">列出当前目录下的 <code>.m</code> 文件和 <code>.mat</code> 文件</td><td style="text-align: left;"><code>load name</code></td><td style="text-align: left;">下载 <code>name</code> 文件中的所有变量到工作空间</td></tr><tr class="even"><td style="text-align: left;"><code>load name x y</code></td><td style="text-align: left;">下载 <code>name</code> 文件的变量 <code>x</code>, <code>y</code> 到工作空间</td><td style="text-align: left;"><code>importdata name</code></td><td style="text-align: left;">将 <code>name</code> 文件中的数据以结构体方式导入工作空间</td></tr><tr class="odd"><td style="text-align: left;"><code>save name</code></td><td style="text-align: left;">保存工作空间变量到文件 <code>name.mat</code> 中</td><td style="text-align: left;"><code>save name x y</code></td><td style="text-align: left;">保存工作空间变量 <code>x</code>, <code>y</code> 到文件 <code>name.mat</code> 中</td></tr><tr class="even"><td style="text-align: left;"><code>↑</code> 或 <code>&lt;C-p&gt;</code></td><td style="text-align: left;">调用上一行命令</td><td style="text-align: left;"><code>↓</code> 或 <code>&lt;C-n&gt;</code></td><td style="text-align: left;">调用下一行命令</td></tr><tr class="odd"><td style="text-align: left;"><code>←</code> 或 <code>&lt;C-b&gt;</code></td><td style="text-align: left;">退后一格</td><td style="text-align: left;"><code>→</code> 或 <code>&lt;C-f&gt;</code></td><td style="text-align: left;">前移一格</td></tr><tr class="even"><td style="text-align: left;"><code>Home</code> 或 <code>&lt;C-a&gt;</code></td><td style="text-align: left;">光标移至行首</td><td style="text-align: left;"><code>Home</code> 或 <code>&lt;C-e&gt;</code></td><td style="text-align: left;">光标移至行尾</td></tr><tr class="odd"><td style="text-align: left;"><code>Esc</code> 或 <code>&lt;C-u&gt;</code></td><td style="text-align: left;">清除一行</td><td style="text-align: left;"><code>Del</code> 或 <code>&lt;C-d&gt;</code></td><td style="text-align: left;">清除光标后字符</td></tr><tr class="even"><td style="text-align: left;"><code>Backspace</code> 或 <code>&lt;C-h&gt;</code></td><td style="text-align: left;">清除光标前一个字符</td><td style="text-align: left;"><code>&lt;C-k&gt;</code></td><td style="text-align: left;">清除光标至行尾字符</td></tr><tr class="odd"><td style="text-align: left;"><code>&lt;C-0&gt;</code></td><td style="text-align: left;">激活命令窗口</td><td style="text-align: left;"><code>&lt;C-S-0&gt;</code></td><td style="text-align: left;">激活编辑器窗口</td></tr><tr class="even"><td style="text-align: left;"><code>&lt;C-1&gt;</code></td><td style="text-align: left;">激活命令历史窗口</td><td style="text-align: left;"><code>&lt;C-2&gt;</code></td><td style="text-align: left;">激活「当前目录」窗口</td></tr><tr class="odd"><td style="text-align: left;"><code>&lt;C-3&gt;</code></td><td style="text-align: left;">激活工作空间窗口</td><td style="text-align: left;"></td><td style="text-align: left;"></td></tr></tbody></table><p>如果以上键盘快捷键部分无效，说明是时候把键盘主题改为 Emacs-Style 了：Preference - MATLAB - Keyboard - Shortcuts - Active settings: Emacs Default Set。</p><h2 id="常用的帮助命令">常用的帮助命令</h2><table><thead><tr class="header"><th style="text-align: left;">命令</th><th style="text-align: left;">功能</th><th style="text-align: left;">命令</th><th style="text-align: left;">功能</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><code>help matfun</code></td><td style="text-align: left;">矩阵函数 - 数值线性代数</td><td style="text-align: left;"><code>help datafun</code></td><td style="text-align: left;">数据分析和傅立叶变换函数</td></tr><tr class="even"><td style="text-align: left;"><code>help general</code></td><td style="text-align: left;">通用命令</td><td style="text-align: left;"><code>help ops</code></td><td style="text-align: left;">操作符和特殊字符</td></tr><tr class="odd"><td style="text-align: left;"><code>help graphics</code></td><td style="text-align: left;">通用图形函数</td><td style="text-align: left;"><code>help polyfun</code></td><td style="text-align: left;">多项式和内插函数</td></tr><tr class="even"><td style="text-align: left;"><code>help elfun</code></td><td style="text-align: left;">基本的数学函数</td><td style="text-align: left;"><code>help lang</code></td><td style="text-align: left;">语言结构和调试</td></tr><tr class="odd"><td style="text-align: left;"><code>help elmat</code></td><td style="text-align: left;">基本的矩阵和矩阵操作</td><td style="text-align: left;"><code>help strfun</code></td><td style="text-align: left;">字符串函数</td></tr><tr class="even"><td style="text-align: left;"><code>help control</code></td><td style="text-align: left;">控制系统工具和工具箱函数</td><td style="text-align: left;"></td><td style="text-align: left;"></td></tr></tbody></table><h2 id="部分预定义变量">部分预定义变量</h2><table><colgroup><col style="width: 25%"><col style="width: 25%"><col style="width: 25%"><col style="width: 25%"></colgroup><thead><tr class="header"><th style="text-align: left;">变量或函数</th><th style="text-align: left;">说明</th><th style="text-align: left;">变量或函数</th><th style="text-align: left;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><code>ans</code></td><td style="text-align: left;">默认变量名，以应答最近一次操作运算结果</td><td style="text-align: left;"><code>eps</code></td><td style="text-align: left;">浮点数的相对误差</td></tr><tr class="even"><td style="text-align: left;"><code>i</code>, <code>j</code></td><td style="text-align: left;">虚数单数</td><td style="text-align: left;"><code>pi</code></td><td style="text-align: left;">圆周率</td></tr><tr class="odd"><td style="text-align: left;"><code>intmax</code></td><td style="text-align: left;">本计算机能表示的 8 位、16 位、32 位、64 位的最大整数</td><td style="text-align: left;"><code>intmin</code></td><td style="text-align: left;">本计算机能表示的 8 位、16 位、32 位、64 位的最小整数</td></tr><tr class="even"><td style="text-align: left;"><code>realmax</code></td><td style="text-align: left;">本计算机能表达的最大浮点数</td><td style="text-align: left;"><code>realmin</code></td><td style="text-align: left;">本计算机能表达的最小浮点数</td></tr><tr class="odd"><td style="text-align: left;"><code>Inf</code> 或 <code>inf</code></td><td style="text-align: left;">无穷大</td><td style="text-align: left;"><code>NaN</code> 或<code>nan</code></td><td style="text-align: left;">非数</td></tr><tr class="even"><td style="text-align: left;"><code>computer</code></td><td style="text-align: left;">MATLAB 运行平台</td><td style="text-align: left;"><code>version</code></td><td style="text-align: left;">MATLAB 版本字符串</td></tr></tbody></table><h2 id="数据显示格式">数据显示格式</h2><p>摘自 <a href="https://ww2.mathworks.cn/help/matlab/ref/format.html" target="_blank" rel="noopener">MathWorks 文档 - 设置命令行窗口输出显示格式</a>：</p><table><colgroup><col style="width: 33%"><col style="width: 33%"><col style="width: 33%"></colgroup><thead><tr class="header"><th style="text-align: left;">风格</th><th style="text-align: left;">结果</th><th style="text-align: left;">示例</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><code>short (default)</code></td><td style="text-align: left;">固定十进制短格式，小数点后包含 4 位数</td><td style="text-align: left;">3.1416</td></tr><tr class="even"><td style="text-align: left;"><code>long</code></td><td style="text-align: left;">长固定小数格式，double 值的小数点后包含 15 位数，single 值的小数点后包含 7 位数</td><td style="text-align: left;">3.141592654</td></tr><tr class="odd"><td style="text-align: left;"><code>shortE</code></td><td style="text-align: left;">短科学记数法，小数点后包含 4 位数</td><td style="text-align: left;">3.14E+00</td></tr><tr class="even"><td style="text-align: left;"><code>longE</code></td><td style="text-align: left;">长科学记数法，double 值的小数点后包含 15 位数，single 值的小数点后包含 7 位数</td><td style="text-align: left;">3.14E+00</td></tr><tr class="odd"><td style="text-align: left;"><code>shortG</code></td><td style="text-align: left;">短固定小数格式或科学记数法（取更紧凑的一个），总共 5 位</td><td style="text-align: left;">3.1416</td></tr><tr class="even"><td style="text-align: left;"><code>longG</code></td><td style="text-align: left;">长固定小数格式或科学记数法（取更紧凑的一个），对于 double 值，总共 15 位；对于 single 值，总共 7 位</td><td style="text-align: left;">3.141592654</td></tr><tr class="odd"><td style="text-align: left;"><code>shortEng</code></td><td style="text-align: left;">短工程记数法，小数点后包含 4 位数，3 的倍数</td><td style="text-align: left;">3.14E+00</td></tr><tr class="even"><td style="text-align: left;"><code>longEng</code></td><td style="text-align: left;">长工程记数法，包含 15 位有效位数，指数为 3 的倍数</td><td style="text-align: left;">3.14E+00</td></tr><tr class="odd"><td style="text-align: left;"><code>+</code></td><td style="text-align: left;">正/负格式，对正、负和零元素分别显示 +、- 和空白字符</td><td style="text-align: left;">+</td></tr><tr class="even"><td style="text-align: left;"><code>bank</code></td><td style="text-align: left;">货币格式，小数点后包含 2 位数</td><td style="text-align: left;">3.14</td></tr><tr class="odd"><td style="text-align: left;"><code>hex</code></td><td style="text-align: left;">二进制双精度数字的十六进制表示形式</td><td style="text-align: left;">400921fb54442d18</td></tr><tr class="even"><td style="text-align: left;"><code>rat</code></td><td style="text-align: left;">小整数的比率</td><td style="text-align: left;">355/113</td></tr><tr class="odd"><td style="text-align: left;"><code>compact</code></td><td style="text-align: left;">隐藏过多的空白行以便在一个屏幕上显示更多输出</td><td style="text-align: left;">theta = pi/2 <br> theta =<br>     1.5708</td></tr><tr class="even"><td style="text-align: left;"><code>loose</code></td><td style="text-align: left;">添加空白行以使输出更易于阅读</td><td style="text-align: left;">theta = pi/2 <br><br> theta = <br><br>     1.5708</td></tr></tbody></table><h2 id="数值型数据">数值型数据</h2><p>关于整型数据相关的操作函数（操作数可以是浮点数，也就是默认的数值类型）</p><table><thead><tr class="header"><th style="text-align: left;">函数</th><th style="text-align: left;">说明</th><th style="text-align: left;">函数</th><th style="text-align: left;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><code>ceil</code></td><td style="text-align: left;">向正无穷大方向取整</td><td style="text-align: left;"><code>fix</code></td><td style="text-align: left;">向 0 取整</td></tr><tr class="even"><td style="text-align: left;"><code>floor</code></td><td style="text-align: left;">向负无穷大方向取整</td><td style="text-align: left;"><code>round</code></td><td style="text-align: left;">四舍五入取整</td></tr><tr class="odd"><td style="text-align: left;"><code>isinteger</code></td><td style="text-align: left;">判断是否为整数</td><td style="text-align: left;"><code>mod</code> / <code>rem</code></td><td style="text-align: left;">求模 / 余数</td></tr></tbody></table><p>关于虚数的一些操作函数</p><table><thead><tr class="header"><th style="text-align: left;">函数</th><th style="text-align: left;">说明</th><th style="text-align: left;">函数</th><th style="text-align: left;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><code>isreal</code></td><td style="text-align: left;">检查是否为实数</td><td style="text-align: left;"><code>abs</code></td><td style="text-align: left;">求复数幅值</td></tr><tr class="even"><td style="text-align: left;"><code>real</code></td><td style="text-align: left;">返回复数实部</td><td style="text-align: left;"><code>angle</code></td><td style="text-align: left;">求复数相位</td></tr><tr class="odd"><td style="text-align: left;"><code>imag</code></td><td style="text-align: left;">返回复数虚部</td><td style="text-align: left;"><code>conj</code></td><td style="text-align: left;">返回复数的共轭复数</td></tr></tbody></table><h2 id="字符向量及字符串">字符向量及字符串</h2><p>类似于 C 语言里的「字符数组」， Matlab 中的字符向量也是以字符数组形式存在的。如 <code>size('abc\nabc')</code> 返回 8。字符向量可由 <code>[...]</code> 以及 <code>char</code> 来创建。常见的字符向量操作函数如下表：</p><table><thead><tr class="header"><th style="text-align: left;">函数</th><th style="text-align: left;">说明</th><th style="text-align: left;">函数</th><th style="text-align: left;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><code>ischar</code></td><td style="text-align: left;">检查是否为字符数组</td><td style="text-align: left;"><code>isletter</code></td><td style="text-align: left;">检查数组元素是否为字母</td></tr><tr class="even"><td style="text-align: left;"><code>isspace</code></td><td style="text-align: left;">检查数组元素是否为空格</td><td style="text-align: left;"><code>isstrprop</code></td><td style="text-align: left;">判断字符串是否属于某种特定类型</td></tr><tr class="odd"><td style="text-align: left;"><code>strcat</code></td><td style="text-align: left;">横向连接字符数组</td><td style="text-align: left;"><code>strvcat</code></td><td style="text-align: left;">纵向连接字符数组，建议用 <code>char</code></td></tr><tr class="even"><td style="text-align: left;"><code>blanks</code></td><td style="text-align: left;">创建空字符串</td><td style="text-align: left;"><code>strjust</code></td><td style="text-align: left;">调整字符串的对齐方式</td></tr><tr class="odd"><td style="text-align: left;"><code>strtrim</code></td><td style="text-align: left;">去掉字符串首尾的空格</td><td style="text-align: left;"><code>deblank</code></td><td style="text-align: left;">去掉字符串尾部的空格</td></tr><tr class="even"><td style="text-align: left;"><code>strfind</code></td><td style="text-align: left;">在长字符串中搜索短字符串</td><td style="text-align: left;"><code>strtok</code></td><td style="text-align: left;">找出字符串中第一个分隔符前面的部分</td></tr><tr class="odd"><td style="text-align: left;"><code>strrep</code></td><td style="text-align: left;">字符串查找与替换</td><td style="text-align: left;"><code>strmatch</code></td><td style="text-align: left;">查找匹配的字符串</td></tr><tr class="even"><td style="text-align: left;"><code>lower</code></td><td style="text-align: left;">将字符串中所包含的字母转换为小写</td><td style="text-align: left;"><code>upper</code></td><td style="text-align: left;">将字符串中所包含的字母转换为大写</td></tr><tr class="odd"><td style="text-align: left;"><code>strcmp</code> <br> <code>strcmpi</code></td><td style="text-align: left;">字符串比较，后者忽略大小写</td><td style="text-align: left;"><code>strncmp</code> <br> <code>strncmpi</code></td><td style="text-align: left;">比较字符串前 n 个字符，后者忽略大小写</td></tr><tr class="even"><td style="text-align: left;"><code>strjoin</code></td><td style="text-align: left;">将字符串元胞连接成一个字符串</td><td style="text-align: left;"><code>strsplit</code></td><td style="text-align: left;">将字符串分割成字符串元胞数组</td></tr><tr class="odd"><td style="text-align: left;"><code>sprintf</code></td><td style="text-align: left;">格式化输出数据至字符串</td><td style="text-align: left;"><code>sscanf</code></td><td style="text-align: left;">从字符串中读取格式化数据</td></tr><tr class="even"><td style="text-align: left;"><code>regexp</code> <br> <code>regexpi</code></td><td style="text-align: left;">匹配正则表达式，后者忽略大小写</td><td style="text-align: left;"><code>regexprep</code></td><td style="text-align: left;">使用正则表达式替换文本</td></tr><tr class="odd"><td style="text-align: left;"><code>regexptranslate</code></td><td style="text-align: left;">将文本转换为正则表达式</td><td style="text-align: left;"></td><td style="text-align: left;"></td></tr></tbody></table><p>令人吃驚的是，<strong>R2017a</strong> 以前的版本都不可用「双引号」括住字符以表示字符串。摘自 <a href="https://ww2.mathworks.cn/help/matlab/ref/string.html" target="_blank" rel="noopener">MathWorks 文档 - 字符串数组</a>：</p><blockquote><p>从 R2016b 开始，您可以使用字符串数组而不是字符数组来表示文本。字符串数组的每个元素存储一个字符序列。序列可以具有不同长度，无需填充，例如 “yes” 和 “no”。只有一个元素的字符串数组也称为字符串标量。<br>您可以通过用双引号括起一段文本来创建字符串。从 R2017a 开始引入双引号。</p></blockquote><p>针对字符数组 / 向量和字符串，有必要做一系列探究。</p><p>最基本的 <code>char(A)</code> 或 <code>char(A1, ... , An)</code> 将数组 A 转为字符数组，相当于 Perl / Python 中的 <code>chr</code>，当然这里是向量版：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">char(<span class="number">65</span>:<span class="number">90</span>, <span class="number">97</span>:<span class="number">122</span>)</span><br><span class="line">strcat(<span class="number">65</span>:<span class="number">90</span>, <span class="number">97</span>:<span class="number">122</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">%  2x26 char array</span></span><br><span class="line"><span class="comment">%    'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line"><span class="comment">%    'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'</span></span><br></pre></td></tr></table></figure><p>字符向量可由 <code>disp</code> 直接输出：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">disp</span>([<span class="string">'Euler''s Formula: '</span>, latex(sym(<span class="string">'exp(i*pi)+1=0'</span>))]);</span><br><span class="line"><span class="comment">% Euler's Formula: &#123;\mathrm&#123;e&#125;&#125;^&#123;\pi \,i&#125;+1=0</span></span><br></pre></td></tr></table></figure><p>当然上面这个例子会跳出将来会弃用字符向量的警告，这里仅说明 <code>char</code> 的功效，无视即可。更多关于 <code>char</code> 的说明：</p><ul><li>如果 A 是数值数组，则 char 将数值转换为字符。有效数值范围从 0 到 65535，并且对应于 Unicode® 代码单元。值 0 到 127 还对应于 7 位 ASCII 字符。char 函数：<ul><li>将非整数值向零舍入。</li><li>将小于 0 的值视为 0。</li><li>将大于 65535 的值视为 65535。</li></ul></li><li>如果 A 是字符数组，则 char 返回未改变的 A。</li><li>如果 A 是字符数组元胞数组，则 char 将该元胞数组转换为字符数组。元胞数组中每个字符数组的每一行将变成 C 中的一行，并根据需要自动用空格填充。</li><li>如果 A 是分类数组，则 char 按列顺序将 A 的每个元素转换为字符数组的一行。</li><li>如果 A 是字符串数组，则 char 会将字符串数组转换为字符数组。char 会将 A 中的每个字符串元素转换为字符向量，然后将这些字符向量串联成字符数组，并根据需要自动用空格填充。</li></ul><p>除此之外，<code>char</code> 还可以格式化时间：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">char(datetime, <span class="string">'yyyy-M-d hh:mm'</span>)</span><br><span class="line"><span class="comment">% '2018-7-7 11:44'</span></span><br></pre></td></tr></table></figure><p>而 <code>string</code> 函数显得更为「高阶」一些，下面的例子可以明显看出区别：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">matlabcode = [<span class="number">109</span> <span class="number">97</span> <span class="number">116</span> <span class="number">108</span> <span class="number">97</span> <span class="number">98</span>];</span><br><span class="line"><span class="built_in">disp</span>(char(matlabcode));</span><br><span class="line"><span class="built_in">disp</span>(string(matlabcode));</span><br><span class="line"></span><br><span class="line"><span class="comment">% matlab</span></span><br><span class="line"><span class="comment">%    "109"    "97"    "116"    "108"    "97"    "98"</span></span><br></pre></td></tr></table></figure><p><code>string</code> 将数据看成一个整体进行操作（利用 <code>size</code> 可以看出），而不像 <code>char</code> 一样需要对齐数据以纳入矩阵。</p><p>另外，对于 <code>strsplit</code> 和 <code>split</code>，大体可认为互为转置的关系：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">carray = <span class="string">'m a t l a b'</span>;</span><br><span class="line">str = string(carray);</span><br><span class="line">strsplit(carray)          <span class="comment">% &#123;'m'&#125; &#123;'a'&#125; &#123;'t'&#125; &#123;'l'&#125; &#123;'a'&#125; &#123;'b'&#125;</span></span><br><span class="line">split(carray)             <span class="comment">% strsplit(carray)'</span></span><br><span class="line">strsplit(str)             <span class="comment">% "m" "a" "t" "l" "a" "b"</span></span><br><span class="line">split(str)                <span class="comment">% strsplit(str)'</span></span><br></pre></td></tr></table></figure><h2 id="元胞数组结构体以及表数组">元胞数组、结构体以及表数组</h2><p>对于元胞数组，注意索引 <code>C(m, n)</code> 返回 C 在 <code>(m, n)</code> 位置上的元胞，而花括号 <code>C{m, n}</code> 返回数据。</p><p>对于结构体的创建，一般有两种方法：</p><ul><li>使用 <code>.</code> 创建： <figure class="highlight matlab"><figcaption><span>sync.sh</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">patient1.name = <span class="string">'John Doe'</span>;</span><br><span class="line">patient1.billing = <span class="number">127</span>;</span><br><span class="line">patient1.test = <span class="built_in">magic</span>(<span class="number">3</span>);</span><br></pre></td></tr></table></figure> 当然多维数组也是类似：<code>patient2(1, 1).name = 'John Doe; ...</code></li><li>使用 <code>struct</code> 函数创建： <figure class="highlight matlab"><figcaption><span>sync.sh</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">patient1 = struct(<span class="string">'name'</span>, <span class="string">'John Doe'</span>, <span class="string">'billing'</span>, <span class="number">127</span>, <span class="string">'test'</span>, <span class="built_in">magic</span>(<span class="number">3</span>));</span><br></pre></td></tr></table></figure></li></ul><p>对于 Matlab R2013b 开始引入的表数组类型，一般有两种创建方式：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Gender = &#123;<span class="string">'M'</span>; <span class="string">'F'</span>; <span class="string">'M'</span>; <span class="string">'M'</span>; <span class="string">'F'</span>&#125;;</span><br><span class="line">Age = [<span class="number">23</span>; <span class="number">24</span>; <span class="number">24</span>; <span class="number">22</span>; <span class="number">23</span>];</span><br><span class="line">Grades = [<span class="number">78</span> <span class="number">86</span> <span class="number">80</span>; <span class="number">67</span> <span class="number">90</span> <span class="number">81</span>; <span class="number">66</span> <span class="number">70</span> <span class="number">76</span>; <span class="number">82</span> <span class="number">95</span> <span class="number">85</span>; <span class="number">64</span> <span class="number">78</span> <span class="number">75</span>];</span><br><span class="line">Leader = logical([<span class="number">0</span>; <span class="number">1</span>; <span class="number">0</span>; <span class="number">0</span>; <span class="number">1</span>]);</span><br><span class="line">ID = strcat(<span class="string">'2017SC'</span>, [<span class="string">'003'</span>; <span class="string">'006'</span>; <span class="string">'024'</span>; <span class="string">'005'</span>; <span class="string">'056'</span>]);</span><br><span class="line">T1 = table(ID, Gender, Age, Grades, Leader, <span class="string">'RowNames'</span>, ...</span><br><span class="line">           &#123;<span class="string">'Smith'</span>, <span class="string">'Jones'</span>, <span class="string">'Brown'</span>, <span class="string">'Jim'</span>, <span class="string">'Lily'</span>&#125;);</span><br><span class="line">T2 = table;</span><br><span class="line">T2.ID = ID;</span><br><span class="line">T2.Gender = Gender;</span><br><span class="line">T2.Age = Age;</span><br><span class="line">T2.Grades = Grades;</span><br><span class="line">T2.Leader = Leader;</span><br><span class="line">T2.Properties.RowNames = &#123;<span class="string">'Smith'</span>, <span class="string">'Jones'</span>, <span class="string">'Brown'</span>, <span class="string">'Jim'</span>, <span class="string">'Lily'</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">%   5x5 table</span></span><br><span class="line"><span class="comment">%                 ID        Gender    Age        Grades        Leader</span></span><br><span class="line"><span class="comment">%              _________    ______    ___    ______________    ______</span></span><br><span class="line"><span class="comment">%     Smith    2017SC003    'M'       23     78    86    80    false</span></span><br><span class="line"><span class="comment">%     Jones    2017SC006    'F'       24     67    90    81    true</span></span><br><span class="line"><span class="comment">%     Brown    2017SC024    'M'       24     66    70    76    false</span></span><br><span class="line"><span class="comment">%     Jim      2017SC005    'M'       22     82    95    85    false</span></span><br><span class="line"><span class="comment">%     Lily     2017SC056    'F'       23     64    78    75    true</span></span><br></pre></td></tr></table></figure><p>当然了，笔者不偏好后面这种方法，而是尽量从其他格式转换过来。</p><p>表数组索引方式比较丰富：</p><table><tr><th>索引类型</th><th>语法格式</th><th>结果类型</th><th>备注</th></tr><tr><td>小括号</td><td><code>T(rows, vars)</code></td><td>表格型数据类型</td><td rowspan="2"><code>rows / vars</code> 可以是数值向量、逻辑向量以及行/列名组成的元胞数组</td></tr><tr><td>大括号</td><td><code>T{rows, vars}</code></td><td>提取的数据</td></tr><tr><td>点号索引</td><td><code>T.var</code><br><code>T.(varindex)</code></td><td>提取的数据</td><td>可以提取表格的一列，还可以进一步对其提取的数据进行索引，如 <code>T.var(index)</code> 或 <code>T.var{index}</code></td></tr></table><p>下面罗列元胞数组、结构体以及表数组的常用操作：</p><table><colgroup><col style="width: 25%"><col style="width: 25%"><col style="width: 25%"><col style="width: 25%"></colgroup><thead><tr class="header"><th style="text-align: left;">函数</th><th style="text-align: left;">说明</th><th style="text-align: left;">函数</th><th style="text-align: left;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><code>iscell</code></td><td style="text-align: left;">判断数组是否为元胞数组</td><td style="text-align: left;"><code>iscellstr</code></td><td style="text-align: left;">判断数组是否为字符串元胞数组</td></tr><tr class="even"><td style="text-align: left;"><code>cellstr</code></td><td style="text-align: left;">创建字符串元胞数组</td><td style="text-align: left;"><code>cellfun</code></td><td style="text-align: left;">将函数应用于元胞数组的每一个元素</td></tr><tr class="odd"><td style="text-align: left;"><code>celldisp</code></td><td style="text-align: left;">显示元胞的内容</td><td style="text-align: left;"><code>cellplot</code></td><td style="text-align: left;">显示元胞的图形描述</td></tr><tr class="even"><td style="text-align: left;"><code>isstruct</code></td><td style="text-align: left;">判断是否为结构数组</td><td style="text-align: left;"><code>isfield</code></td><td style="text-align: left;">判断某字段是否为结构数组中的字段</td></tr><tr class="odd"><td style="text-align: left;"><code>getfield</code></td><td style="text-align: left;">获取结构数组中指定字段的值</td><td style="text-align: left;"><code>setfield</code></td><td style="text-align: left;">设置结构数组中指定字段的值</td></tr><tr class="even"><td style="text-align: left;"><code>rmfield</code></td><td style="text-align: left;">移除结构数据中的指定字段</td><td style="text-align: left;"><code>orderfields</code></td><td style="text-align: left;">对结构数组中的字段按指定顺序排序</td></tr><tr class="odd"><td style="text-align: left;"><code>fieldnames</code></td><td style="text-align: left;">获得结构数组的字段名或对象的属性值</td><td style="text-align: left;"><code>strcfun</code></td><td style="text-align: left;">将函数应用于结构数组的每一个字段</td></tr><tr class="even"><td style="text-align: left;"><code>istable</code></td><td style="text-align: left;">判断输入是否为表格型类型</td><td style="text-align: left;"><code>summary</code></td><td style="text-align: left;">打印表格型数据的综述</td></tr><tr class="odd"><td style="text-align: left;"><code>readtable</code></td><td style="text-align: left;">从文件中创建表格型数据</td><td style="text-align: left;"><code>writetable</code></td><td style="text-align: left;">将表格型数据写入文件中</td></tr><tr class="even"><td style="text-align: left;"><code>height</code></td><td style="text-align: left;">表格型数据的行数</td><td style="text-align: left;"><code>width</code></td><td style="text-align: left;">表格型数据的列数</td></tr><tr class="odd"><td style="text-align: left;"><code>join</code></td><td style="text-align: left;">使用关键变量合并两个表格型数据</td><td style="text-align: left;"><code>innerjoin</code></td><td style="text-align: left;">以交集的形式合并两个表格型数据</td></tr><tr class="even"><td style="text-align: left;"><code>outerjoin</code></td><td style="text-align: left;">以并集的形式合并两个表格型数据</td><td style="text-align: left;"><code>ismissing</code></td><td style="text-align: left;">查找表格型数据中的非正常量，如 <code>NaN</code>, <code>NaT</code>, <code>&lt;undefined&gt;</code>, 空字符向量以及空格向量</td></tr><tr class="odd"><td style="text-align: left;"><code>varfun</code></td><td style="text-align: left;">将函数应用于表格型数据的每一个变量中</td><td style="text-align: left;"><code>rowfun</code></td><td style="text-align: left;">将函数应用于表格型数据的每一行</td></tr></tbody></table><p>Matlab 提供丰富的类型转换函数，眼花缭乱，摘录如下：</p><table><tr><th>转换形式</th><th>转换函数</th><th>说明<br></th></tr><tr><td rowspan="3">数值 ➠ 字符数组</td><td><code>num2str</code></td><td>数值转换为字符数组</td></tr><tr><td><code>mat2str</code></td><td>矩阵转换为字符数组</td></tr><tr><td><code>int2str</code></td><td>整数转换为字符数组</td></tr><tr><td rowspan="2">字符数组 ➠ 数值</td><td><code>str2num</code></td><td>将字符数组转为数值，使用 <code>eval</code> 函数进行转换</td></tr><tr><td><code>str2double</code></td><td>将字符数组或字符串元胞数组转换为数值</td></tr><tr><td rowspan="2">数值 ➠ 元胞数组</td><td><code>num2cell</code></td><td>将数值转换为元胞数组</td></tr><tr><td><code>mat2cell</code></td><td>将矩阵转换为元胞数组</td></tr><tr><td>元胞数组 ➠ 数值</td><td><code>cell2mat</code></td><td>将元胞数组转换为矩阵</td></tr><tr><td>字符串/数组 ➠ 元胞数组</td><td><code>cellstr</code></td><td>将字符串转换为字符串元胞数组</td></tr><tr><td>元胞数组 ➠ 字符串</td><td><code>char</code></td><td>将元胞数组转换为字符串，替换以前版本的 <code>str2mat</code> 函数</td></tr><tr><td>字符串 ➠ 函数句柄</td><td><code>str2func</code></td><td>由函数名或字符串表达式构造函数句柄</td></tr><tr><td>函数句柄 ➠ 字符串</td><td><code>func2str</code></td><td>由函数句柄构造函数名或字符串表达式，也可用 <code>char</code> 函数</td></tr><tr><td>元胞数组 ➠ 结构数组</td><td><code>cell2struct</code></td><td>将元胞数组转换为结构数组</td></tr><tr><td>结构数组 ➠ 元胞数组</td><td><code>struct2cell</code></td><td>将结构数组转换为元胞数组</td></tr><tr><td>数组 ➠ 表格</td><td><code>array2table</code></td><td>将同类二维数组转换为表格</td></tr><tr><td>表格 ➠ 数组</td><td><code>table2array</code></td><td>将表格转换为同类数组</td></tr><tr><td>元胞数组 ➠ 表格</td><td><code>cell2table</code></td><td>将元胞数组转换为表格</td></tr><tr><td>表格 ➠ 元胞数组</td><td><code>table2cell</code></td><td>将表格转换为元胞数组</td></tr><tr><td>结构数组 ➠ 表格</td><td><code>struct2table</code></td><td>将结构数组转换为表格</td></tr><tr><td>表格 ➠ 结构数组</td><td><code>table2struct</code></td><td>将表格转换为结构数组</td></tr></table><hr><p>关于基本的算术运算符，有几处备忘：</p><ul><li><code>/</code> 表示矩阵右除，<span class="math inline">\(C=A/B\)</span> 表示 <span class="math inline">\(C\)</span> 是方程 <span class="math inline">\(XB=A\)</span> 的解 <span class="math inline">\(C=AB^{-1}\)</span></li><li><code>\</code> 表示矩阵左除，<span class="math inline">\(C=A\backslash B\)</span> 表示 <span class="math inline">\(C\)</span> 是方程 <span class="math inline">\(AX=B\)</span> 的解 <span class="math inline">\(C=A^{-1}B\)</span></li><li>关于转置，<code>'</code> 或者函数 <code>ctranspose</code> 表 Hermit 转置或共轭转置，<code>.'</code> 或 <code>transpose</code> 为非共轭转置</li></ul><p><br></p><p>Matlab 数组元素的索引主要有 <span class="math inline">\(3\)</span> 种方式，即全下标方式、单下标方式和逻辑 <span class="math inline">\(1\)</span> 方式。在单下标方式中，存在这样的换算：</p><ul><li>对于 <span class="math inline">\(m\times n\)</span> 的矩阵 <span class="math inline">\(A\)</span>，元素 <span class="math inline">\(A(i, j)\)</span> 对应的单下标为 <span class="math inline">\(s = m(j-1) + i\)</span></li><li>对于 <span class="math inline">\(m \times n \times t\)</span> 的数组 <span class="math inline">\(B\)</span>，元素 <span class="math inline">\(B(i, j, k)\)</span> 对应的单下标为 <span class="math inline">\(s=mn(k-1) + m(j-1) + i\)</span></li><li>对于维度为 <span class="math inline">\(n_1 \times n_2 \times \cdots \times n_k\)</span> 的多维数组 <span class="math inline">\(C\)</span>，元素 <span class="math inline">\(C(i_1, i_2, \cdots, i_k)\)</span> 对应的单下标为 <span class="math inline">\(s = \sum\limits_{i=1}^{k-1} (i_{k+1} - 1)\prod\limits_{j=1}^i n_j + i_1\)</span></li></ul><p>Matlab 自带函数 <code>sub2ind</code> 可对上述第三条结论进行验证：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">A = randi([<span class="number">1</span> <span class="number">10</span>], <span class="number">2</span>, <span class="number">7</span>, <span class="number">17</span>, <span class="number">3</span>, <span class="number">101</span>);</span><br><span class="line"><span class="built_in">disp</span>(my_sub2ind(<span class="built_in">size</span>(A), <span class="number">1</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">20</span>));</span><br><span class="line"><span class="built_in">disp</span>(<span class="built_in">sub2ind</span>(<span class="built_in">size</span>(A), <span class="number">1</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">20</span>));</span><br><span class="line"><span class="built_in">disp</span>(my_sub2ind(<span class="built_in">size</span>(A), <span class="number">2</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">52</span>));</span><br><span class="line"><span class="built_in">disp</span>(<span class="built_in">sub2ind</span>(<span class="built_in">size</span>(A), <span class="number">2</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">52</span>));</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ind</span> = <span class="title">my_sub2ind</span><span class="params">(dims, varargin)</span></span></span><br><span class="line">    indx = cell2mat(varargin);</span><br><span class="line">    ind = indx(<span class="number">1</span>) + <span class="built_in">dot</span>(indx(<span class="number">2</span>:<span class="keyword">end</span>)<span class="number">-1</span>, cumprod(dims(<span class="number">1</span>:<span class="keyword">end</span><span class="number">-1</span>)));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 13825</span></span><br><span class="line"><span class="comment">% 37072</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本系列试图将笔者在研究过程中认为比较重要、容易遗忘以及富有创新性或启发性的程序代码及思想一一记录，一来节省遇见同类问题时耗费在检索资料上的时间，二来也能见证自己构建知识体系框架的历程。&lt;/p&gt;
    
    </summary>
    
      <category term="Memos" scheme="http://notes.shinemic.cn/categories/Memos/"/>
    
    
      <category term="Matlab" scheme="http://notes.shinemic.cn/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>数学建模笔记 —— 对变化进行建模</title>
    <link href="http://notes.shinemic.cn/notes-on-learning-mathematical-modeling-based-on-variation/"/>
    <id>http://notes.shinemic.cn/notes-on-learning-mathematical-modeling-based-on-variation/</id>
    <published>2018-07-03T13:09:16.000Z</published>
    <updated>2019-02-28T13:06:49.501Z</updated>
    
    <content type="html"><![CDATA[<h2 id="离散流行病模型">离散流行病模型</h2><p>考虑这样一个社区，有三类人群：易感者、已感者和移出者。我们对流行病模型作出如下假设：</p><ul><li>没有人进出该社区，且社区不和外界接触，即社区内的总人数保持不变</li><li>每个人都是易感者 <span class="math inline">\(S\)</span>、已感者 <span class="math inline">\(I\)</span>、移出者 <span class="math inline">\(R\)</span>。也就是说每个人都能感染这种流感，当前已经染上这种流感的人能够传播流感，已经得过这种流感的人不会再得此病</li><li>一开始，每人要么是已感者，要么是易感者</li><li>这种流感的平均持续时间为 <span class="math inline">\(1/c\)</span> 周，在此期间此人被认为是已感者且能传播流感</li><li>模型时间周期按周计</li></ul><a id="more"></a><p>用差分方程描述这个动力系统模型，首先假设定义如下：</p><ul><li><span class="math inline">\(S(n)\)</span>：<span class="math inline">\(n\)</span> 个周期后易感者人数</li><li><span class="math inline">\(I(n)\)</span>：<span class="math inline">\(n\)</span> 个周期后已感者人数</li><li><span class="math inline">\(R(n)\)</span>：<span class="math inline">\(n\)</span> 个周期后移出者人数</li></ul><p>从模型假设出发，既然流感平均持续 <span class="math inline">\(1/c\)</span> 周，也就是说每 <span class="math inline">\(1/c\)</span> 周的时间就有 <span class="math inline">\(1\)</span> 人成为移出者，从该系统移出。因计量周期为周，所以也可理解成每周移出 <span class="math inline">\(c \times 100 \%\)</span> 的已感者。所以建立关于移出者的方程</p><p><span class="math display">\[    R(n+1) = R(n) + c I(n)    \tag{R}    \label{R}\]</span></p><p>对于已感者人数 <span class="math inline">\(I(n)\)</span> 的变化，显然来自两个方面：其一来自新的一批被传染的易感者，其二由前所述，每周都会从系统移出已感者。细化这个过程，易感者由于接触已感者而患病，若引入<strong>传播系数</strong> <span class="math inline">\(a\)</span>，则新的一批被感染得病的人数为 <span class="math inline">\(a S(n) I(n)\)</span>，二者乘积的形式表明了其之间的相互作用。得到已感者差分方程</p><p><span class="math display">\[    I(n+1) = I(n) - c I(n) + a S(n) I(n)    \tag{I}    \label{I}\]</span></p><p>最后关于易感者的关系就很容易了，由于系统人数保持不变，已感者被移出后不会再患病，即不会转化为易感者；移出者的变化仅来源于已感者，故和易感者无直接联系。所以仅建立易感者与已感者之间的关系即可。</p><p><span class="math display">\[    S(n+1) = S(n) - a S(n) I(n)    \tag{S}    \label{S}\]</span></p><p>给定初始条件，假设社区共有 <span class="math inline">\(1000\)</span> 人，移出率 <span class="math inline">\(c=0.60\)</span>，一开始（第 <span class="math inline">\(0\)</span> 周）便有 <span class="math inline">\(5\)</span> 人患病，第 <span class="math inline">\(1\)</span> 周有 <span class="math inline">\(9\)</span> 人患病，即 <span class="math inline">\(I(0) = 5\)</span>，<span class="math inline">\(S(0) = 995\)</span>，<span class="math inline">\(R(0) = 0\)</span>，<span class="math inline">\(I(1) = 9\)</span>，由式 <span class="math inline">\(\eqref{I}\)</span> 即可解得 <span class="math inline">\(a \approx 0.001407\)</span>。 故由以上方程组及初值构成的动力系统（SIR 模型）可进行迭代求解，并通过图形观察趋势。Matlab 代码如下：</p><figure class="highlight matlab"><figcaption><span>epidemic_model.m</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="number">1000</span>;</span><br><span class="line">I0 = <span class="number">5</span>;</span><br><span class="line">I1 = <span class="number">9</span>;</span><br><span class="line">shiftout = <span class="number">0.6</span>;</span><br><span class="line">iters = <span class="number">25</span>;</span><br><span class="line">res = epidemic(N, I0, I1, shiftout, iters);</span><br><span class="line"></span><br><span class="line">tbl = cell2table(num2cell(res), <span class="string">'VariableNames'</span>, &#123;<span class="string">'Rn'</span>, <span class="string">'In'</span>, <span class="string">'Sn'</span>&#125;);</span><br><span class="line">writetable(tbl, <span class="string">'epidemic.csv'</span>);</span><br><span class="line"></span><br><span class="line">p = plot(<span class="number">0</span>:iters<span class="number">-1</span>, res, <span class="string">'LineWidth'</span>, <span class="number">1.1</span>, <span class="string">'MarkerSize'</span>, <span class="number">4.5</span>);</span><br><span class="line">p(<span class="number">1</span>).Marker = <span class="string">'*'</span>;</span><br><span class="line">p(<span class="number">2</span>).Marker = <span class="string">'x'</span>;</span><br><span class="line">p(<span class="number">3</span>).Marker = <span class="string">'^'</span>;</span><br><span class="line"></span><br><span class="line">set(gca, ...</span><br><span class="line">    <span class="string">'FontName'</span>, <span class="string">'Euclid'</span>, ...</span><br><span class="line">    <span class="string">'FontWeight'</span>, <span class="string">'Bold'</span>, ...</span><br><span class="line">    <span class="string">'FontSize'</span>, <span class="number">9</span>, ...</span><br><span class="line">    <span class="string">'box'</span>, <span class="string">'off'</span>, ...</span><br><span class="line">    <span class="string">'color'</span>, <span class="string">'none'</span>);</span><br><span class="line">title(<span class="string">'\bf Dynamic System of SIR Model'</span>, ...</span><br><span class="line">      <span class="string">'FontSize'</span>, <span class="number">11</span>, ...</span><br><span class="line">      <span class="string">'Interpreter'</span>, <span class="string">'latex'</span>);</span><br><span class="line">legend(gca, ...</span><br><span class="line">       &#123;<span class="string">'$R(n)$'</span>, <span class="string">'$I(n)$'</span>, <span class="string">'$S(n)$'</span>&#125;, ...</span><br><span class="line">       <span class="string">'FontSize'</span>, <span class="number">8</span>, ...</span><br><span class="line">       <span class="string">'Interpreter'</span>, <span class="string">'latex'</span>, <span class="string">'Location'</span>, <span class="string">'best'</span>);</span><br><span class="line">set(gcf, ...</span><br><span class="line">    <span class="string">'units'</span>, <span class="string">'points'</span>, ...</span><br><span class="line">    <span class="string">'position'</span>, [<span class="number">350</span>, <span class="number">200</span>, <span class="number">320</span>, <span class="number">180</span>]);</span><br><span class="line">saveas(gcf, <span class="string">'epidemic.svg'</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span> = <span class="title">epidemic</span><span class="params">(N, I0, I1, shiftout, iters)</span></span></span><br><span class="line">    <span class="comment">% 返回由 R(n), I(n), S(n) 构成的数组</span></span><br><span class="line"></span><br><span class="line">    res = <span class="built_in">zeros</span>(iters, <span class="number">3</span>);</span><br><span class="line">    a = (I1 - (<span class="number">1</span>-shiftout) * I0) / (I0 * (N - I0));</span><br><span class="line">    res(<span class="number">1</span>, :) = [<span class="number">0</span> I0 N-I0];</span><br><span class="line">    <span class="keyword">for</span> k = <span class="number">2</span>:iters</span><br><span class="line">        res(k, <span class="number">1</span>) = res(k<span class="number">-1</span>, <span class="number">1</span>) + shiftout * res(k<span class="number">-1</span>, <span class="number">2</span>);</span><br><span class="line">        res(k, <span class="number">2</span>) = (<span class="number">1</span>-shiftout) * res(k<span class="number">-1</span>, <span class="number">2</span>) + a * res(k<span class="number">-1</span>, <span class="number">2</span>) * res(k<span class="number">-1</span>, <span class="number">3</span>);</span><br><span class="line">        res(k, <span class="number">3</span>) = res(k<span class="number">-1</span>, <span class="number">3</span>) - a * res(k<span class="number">-1</span>, <span class="number">2</span>) * res(k<span class="number">-1</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>生成的 <span class="math inline">\(R(n), I(n), S(n)\)</span> 表格如下：</p><span class="math display">\[\begin{array}{cccc|cccc}    \hline    \text{week} &amp; R(n)       &amp; I(n)       &amp; S(n)       &amp; \text{week} &amp; R(n)       &amp; I(n)      &amp; S(n)  \\    \hline    {0}  &amp; {0}        &amp; {5}        &amp; {995}      &amp; {12} &amp; {812.3671} &amp; {78.9598} &amp; {108.6731}  \\    {1}  &amp; {3}        &amp; {9}        &amp; {988}      &amp; {13} &amp; {859.7430} &amp; {43.6574} &amp; {96.5996} \\    {2}  &amp; {8.4000}   &amp; {16.1114}  &amp; {975.4886} &amp; {14} &amp; {885.9374} &amp; {23.3968} &amp; {90.6657} \\    {3}  &amp; {18.0668}  &amp; {28.5581}  &amp; {953.3751} &amp; {15} &amp; {899.9755} &amp; {12.3435} &amp; {87.6810} \\    {4}  &amp; {35.2017}  &amp; {49.7321}  &amp; {915.0662} &amp; {16} &amp; {907.3816} &amp; {6.4602}  &amp; {86.1582} \\    {5}  &amp; {65.0409}  &amp; {83.9244}  &amp; {851.0347} &amp; {17} &amp; {911.2577} &amp; {3.3672}  &amp; {85.3750} \\    {6}  &amp; {115.3955} &amp; {134.0638} &amp; {750.5407} &amp; {18} &amp; {913.2781} &amp; {1.7514}  &amp; {84.9705} \\    {7}  &amp; {195.8338} &amp; {195.2018} &amp; {608.9644} &amp; {19} &amp; {914.3289} &amp; {0.9099}  &amp; {84.7612} \\    {8}  &amp; {312.9549} &amp; {245.3364} &amp; {441.7087} &amp; {20} &amp; {914.8749} &amp; {0.4725}  &amp; {84.6526} \\    {9}  &amp; {460.1567} &amp; {250.6110} &amp; {289.2323} &amp; {21} &amp; {915.1584} &amp; {0.2453}  &amp; {84.5964} \\    {10} &amp; {610.5233} &amp; {202.2331} &amp; {187.2436} &amp; {22} &amp; {915.3055} &amp; {0.1273}  &amp; {84.5672} \\    {11} &amp; {731.8632} &amp; {134.1732} &amp; {133.9636} &amp; {23} &amp; {915.3819} &amp; {0.0661}  &amp; {84.5520} \\    \hline\end{array}\]</span><p>SIR 模型动力系统曲线如下：</p><p><img src="/img/epidemic.svg" width="50%"></p><blockquote><p>注：尽管设置了 <code>set(gca, 'color', 'none')</code>，但 Matlab (R2016b) 导出的 SVG 格式图形仍然会有背景色，且图形标题位置不易调整。故干脆用 <a href="https://inkscape.org" target="_blank" rel="noopener">Inkscape</a> 对图形进行细加工。</p></blockquote><p>从图形可以看出，给定移出率（<span class="math inline">\(60\%\)</span>）以及模型初值下，这种流感流行的高峰处于第 <span class="math inline">\(9\)</span> 周左右，已感人数为 <span class="math inline">\(250.6\)</span>，在第 <span class="math inline">\(17\)</span> 周后略小于 <span class="math inline">\(85\)</span> 人未染上这种流感。</p><h3 id="敏感性分析">敏感性分析</h3><p>下面考察模型对于参数及初始条件的敏感性。分别基于以下初值条件进行实验：</p><span class="math display">\[\begin{array}{c|cccc}      &amp; N    &amp; c   &amp; I(0) &amp; I(1)  \\    \hline    \text{I}   &amp; 1000 &amp; 3/5 &amp; 5 &amp; 15   \\    \text{II}  &amp; 1000 &amp; 1   &amp; 5 &amp; 15  \\    \text{III} &amp; 1000 &amp; 1/4 &amp; 5 &amp; 15  \\    \text{IV}  &amp; 4000 &amp; 1/4 &amp; 5 &amp; 35\end{array}\]</span><p>实验过程中发现会某些时间周期会出现人数为负或者超过总社区人数的情况，故在函数 <code>epidemic</code> 中对其加以限定，使其在正常范围内变化。注意这里不能简单地处理为 <span class="math inline">\(\max\{\min\{x, N\}, 0\}\)</span>，否则可能导致三者加和不为 <span class="math inline">\(N\)</span> 的情况出现。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">res(k, <span class="number">1</span>) = min(res(k<span class="number">-1</span>, <span class="number">1</span>) + shiftout * res(k<span class="number">-1</span>, <span class="number">2</span>), N);</span><br><span class="line">res(k, <span class="number">3</span>) = max(min(res(k<span class="number">-1</span>, <span class="number">3</span>) - a * res(k<span class="number">-1</span>, <span class="number">2</span>) * res(k<span class="number">-1</span>, <span class="number">3</span>), N), <span class="number">0</span>);</span><br><span class="line">res(k, <span class="number">2</span>) = max(min((<span class="number">1</span>-shiftout) * res(k<span class="number">-1</span>, <span class="number">2</span>) + ...</span><br><span class="line">                    a * res(k<span class="number">-1</span>, <span class="number">2</span>) * res(k<span class="number">-1</span>, <span class="number">3</span>), ...</span><br><span class="line">                    N - res(k, <span class="number">1</span>) - res(k, <span class="number">2</span>)), <span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>对比结果如下：</p><p><img src="/img/epidemic-2x2.svg" width="80%"></p><p>四种情形最终的收敛情况相同，即易感者逐渐降至为 <span class="math inline">\(0\)</span>，即全军覆没无一幸免；已感者呈现先增后降的趋势；移出者逐渐累积，直至流行病完全治愈。具体来看，移出率越高，说明该流行病越容易被治愈，所以感染人数峰值越低，流行病退潮时间越早；<span class="math inline">\(I(1) - I(0)\)</span> 越大，即传播系数越高，流感传播速度更快，短时期内感染人数上升速率更大，退潮时间也越长。</p><p>考察社区总人数是否对模型敏感性有影响，针对 <span class="math inline">\(c=1\)</span>, <span class="math inline">\(I(0)=5\)</span>, <span class="math inline">\(I(1)=10\)</span>, <span class="math inline">\(N=500\)</span>, <span class="math inline">\(1000\)</span>, <span class="math inline">\(5000\)</span>, <span class="math inline">\(10000\)</span> 四种情况作出变化曲线：</p><p><img src="/img/epidemic-2x2-by-n.svg" width="80%"></p><p>显然，在其他因素相同的情况下，随社区总人数增加，SIR 模型曲线整体“向右移动”，也就是说感染人数到达峰值所需时间增长，且相应的退潮时间也越长。由于当 <span class="math inline">\(I(1) - I(0)\)</span> 不变的情况下，随总人数增加，可以看成传播系数 <span class="math inline">\(a\)</span> 降低，所以整个模型的变化会放缓。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;离散流行病模型&quot;&gt;离散流行病模型&lt;/h2&gt;
&lt;p&gt;考虑这样一个社区，有三类人群：易感者、已感者和移出者。我们对流行病模型作出如下假设：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有人进出该社区，且社区不和外界接触，即社区内的总人数保持不变&lt;/li&gt;
&lt;li&gt;每个人都是易感者 &lt;span class=&quot;math inline&quot;&gt;\(S\)&lt;/span&gt;、已感者 &lt;span class=&quot;math inline&quot;&gt;\(I\)&lt;/span&gt;、移出者 &lt;span class=&quot;math inline&quot;&gt;\(R\)&lt;/span&gt;。也就是说每个人都能感染这种流感，当前已经染上这种流感的人能够传播流感，已经得过这种流感的人不会再得此病&lt;/li&gt;
&lt;li&gt;一开始，每人要么是已感者，要么是易感者&lt;/li&gt;
&lt;li&gt;这种流感的平均持续时间为 &lt;span class=&quot;math inline&quot;&gt;\(1/c\)&lt;/span&gt; 周，在此期间此人被认为是已感者且能传播流感&lt;/li&gt;
&lt;li&gt;模型时间周期按周计&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Mathematical Modeling" scheme="http://notes.shinemic.cn/categories/Mathematical-Modeling/"/>
    
    
      <category term="Matlab" scheme="http://notes.shinemic.cn/tags/Matlab/"/>
    
      <category term="Difference" scheme="http://notes.shinemic.cn/tags/Difference/"/>
    
  </entry>
  
  <entry>
    <title>《统计学习方法》笔记一</title>
    <link href="http://notes.shinemic.cn/notes-on-statistical-learning-methods-01/"/>
    <id>http://notes.shinemic.cn/notes-on-statistical-learning-methods-01/</id>
    <published>2018-06-29T03:58:58.000Z</published>
    <updated>2019-02-28T13:06:49.501Z</updated>
    
    <content type="html"><![CDATA[<p>李航《统计学习方法》一书第 12 页关于简单的多项式曲线拟合有如下结论：</p><div class="note ">具体地，求以下经验风险最小化：$$L(\omega) = \frac 12 \sum_{i=1}^N \left(f(x_i, \omega) - y_i\right)^2\tag{1.18} \label{1.18}$$... <br>这是一个简单的最优化问题。将模型与训练数据代入式 $\eqref{1.18}$ 中，有$$L(\omega) = \frac 12 \sum_{i=1}^N \left(\sum_{j=0}^M \omega_j x_i^j-y_i\right)^2$$对 $\omega_j$ 求偏导数并令其为 $0$，可得$$\omega_j = \frac{\sum\limits_{i=1}^N x_i^j y_i}{\sum\limits_{i=1}^N x_i^{j+1}}, \quad j = 0,1,2,\ldots M\tag{*} \label{*}$$</div><a id="more"></a><p>但通过简单求导，似乎事实并不那么简单。这里为计算 <span class="math inline">\(\partial L/\partial \omega_j\)</span>，将原求和式下标换作 <span class="math inline">\(k\)</span>，以免混淆出错。</p><p><span class="math display">\[    \frac{\partial L}{\partial \omega_j}    = \sum_{i=1}^N \left(\sum_{j=0}^M \omega_j x_i^j - y_i\right) x_i^j    = \sum_{k=0}^M \left(\sum_{i=1}^N x_i^{k+j}\right)\omega_k      - \sum_{i=1}^N y_i x_i^j    \tag{1}    \label{1}\]</span></p><p>故对于 <span class="math inline">\(j = 0, 1, 2\ldots M\)</span>，令 <span class="math inline">\(\partial L/\partial \omega_j = 0\)</span>，可得如下 <span class="math inline">\(M\)</span> 元方程组：</p><p><span class="math display">\[    \begin{cases}        \omega_0 \sum\limits_{i=1}^N x_i^0 +        \omega_1 \sum\limits_{i=1}^N x_i^1 + \cdots +        \omega_M \sum\limits_{i=1}^N x_i^M = \sum\limits_{i=1}^N y_i &amp; \\        \omega_0 \sum\limits_{i=1}^N x_i^1 +        \omega_1 \sum\limits_{i=1}^N x_i^2 + \cdots +        \omega_M \sum\limits_{i=1}^N x_i^{M+1} = \sum\limits_{i=1}^N x_i y_i &amp; \\        \hfil   \vdots  \hfil &amp; \\        \omega_0 \sum\limits_{i=1}^N x_i^M +        \omega_1 \sum\limits_{i=1}^N x_i^{M+1} + \cdots +        \omega_M \sum\limits_{i=1}^N x_i^{2M} = \sum\limits_{i=1}^N x_i^M y_i &amp;    \end{cases}\]</span></p><p>写为矩阵形式：</p><p><span class="math display">\[    \underbrace{    \begin{pmatrix}        \sum\limits_{i=1}^N x_i^0 &amp; \cdots &amp; \sum\limits_{i=1}^N x_i^1 &amp; \sum\limits_{i=1}^N x_i^M \\        \sum\limits_{i=1}^N x_i^1 &amp; \cdots &amp; \sum\limits_{i=1}^N x_i^2 &amp; \sum\limits_{i=1}^N x_i^{M+1} \\        \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\        \sum\limits_{i=1}^N x_i^M &amp; \cdots &amp; \sum\limits_{i=1}^N x_i^{M+1} &amp; \sum\limits_{i=1}^N x_i^{2M}    \end{pmatrix}    }_{\boldsymbol{A}}    \underbrace{    \begin{pmatrix}        \omega_0 \vphantom{\sum\limits_{i=1}^{N}x_i^{M+1}} \\        \omega_1 \vphantom{\sum\limits_{i=1}^{N}x_i^{M+1}} \\        \vdots \vphantom{\ddots}\\        \omega_M \vphantom{\sum\limits_{i=1}^{N}x_i^{M+1}}    \end{pmatrix}    }_{\boldsymbol{\omega}}    =    \underbrace{    \begin{pmatrix}        \sum\limits_{i=1}^N y_i \vphantom{\sum\limits_{i=1}^{N}x_i^{M+1}}\\        \sum\limits_{i=1}^N x_i y_i \vphantom{\sum\limits_{i=1}^{N}x_i^{M+1}}\\        \vdots \vphantom{\ddots}\\        \sum\limits_{i=1}^N x_i^M y_i \vphantom{\sum\limits_{i=1}^{N}x_i^{M+1}}\\    \end{pmatrix}    }_{\boldsymbol{B}}\]</span></p><p>注意到 <span class="math inline">\(\boldsymbol{A}, \boldsymbol{B}\)</span> 均可写为两个矩阵相乘的形式：</p><p><span class="math display">\[    \boldsymbol{A}=    \begin{pmatrix}        1 &amp; 1 &amp; 1 &amp; \cdots &amp; 1 \vphantom{x_1^M} \\        x_1 &amp; x_2 &amp; x_3 &amp; \cdots &amp; x_M \vphantom{x_2^M} \\        x_1^2 &amp; x_2^2 &amp; x_3^2 &amp; \cdots &amp; x_M^2 \vphantom{x_3^M} \\        \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\        x_1^M &amp; x_2^M &amp; x_3^M &amp; \cdots &amp; x_M^M \vphantom{x_M^M}    \end{pmatrix}    \begin{pmatrix}        1 &amp; x_1 &amp; x_1^2 &amp; \cdots &amp; x_1^M \\        1 &amp; x_2 &amp; x_2^2 &amp; \cdots &amp; x_2^M \\        1 &amp; x_3 &amp; x_3^2 &amp; \cdots &amp; x_3^M \\        \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\        1 &amp; x_M &amp; x_M^2 &amp; \cdots &amp; x_M^M \\    \end{pmatrix}    \triangleq \boldsymbol{V} \boldsymbol{V}&#39;, \quad    \boldsymbol{B} = \boldsymbol{V} \boldsymbol{Y}\]</span> 其中 <span class="math inline">\(\boldsymbol{Y}\)</span> 为输出向量。于是多项式参数矩阵应由下式给出：</p><p><span class="math display">\[    \boldsymbol{\omega} =    (\boldsymbol{V}\boldsymbol{V&#39;})^{-1}\boldsymbol{V}\boldsymbol{Y}    \tag{**}    \label{**}\]</span></p><p>该式与 <span class="math inline">\(\eqref{*}\)</span> 有一定出入，且不易进一步化简，其中涉及 Vandermonde 矩阵逆，可参考</p><ul><li><a href="https://proofwiki.org/wiki/Inverse_of_Vandermonde_Matrix" target="_blank" rel="noopener">Proof Wiki - Inverse of Vandermonde Matrix</a></li><li><a href="https://math.stackexchange.com/questions/698254/proof-of-vandermonde-matrix-inverse-formula" target="_blank" rel="noopener">Proof of Vandermonde Matrix Inverse Formula</a></li><li><a href="http://naturalspublishing.com/files/published/18raq6j7bs84z4.pdf" target="_blank" rel="noopener">Inverse of the Vandermonde and Vandermonde confluent matrices</a></li></ul><p>于是针对原书中结论 <span class="math inline">\(\eqref{*}\)</span> 以及逐步推导的结果 <span class="math inline">\(\eqref{**}\)</span> 进行数值试验。 给定 <span class="math inline">\(\boldsymbol{X}, \boldsymbol{Y}\)</span>，分别利用两种方法得到 <span class="math inline">\(\boldsymbol{\omega}\)</span> 的结果，并代回 <span class="math inline">\(\eqref{1}\)</span> 中，这里利用 Python 的科学计算包进行试验。</p><figure class="highlight python"><figcaption><span>polyfit.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> numpy.random <span class="keyword">as</span> nr</span><br><span class="line"></span><br><span class="line">np.set_printoptions(precision=<span class="number">4</span>, suppress=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">equj</span><span class="params">(xs, ys, omegas, j)</span>:</span></span><br><span class="line">    n = len(xs)</span><br><span class="line">    m = len(omegas)</span><br><span class="line">    <span class="keyword">return</span> np.sum([np.sum(omegas[k] * xs[i<span class="number">-1</span>] ** (k+j) <span class="keyword">for</span> k <span class="keyword">in</span> range(m))</span><br><span class="line">                   - xs[i<span class="number">-1</span>] ** j * ys[i<span class="number">-1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n+<span class="number">1</span>)])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">omegaj1</span><span class="params">(xs, ys, j)</span>:</span></span><br><span class="line">    <span class="comment"># 方法一</span></span><br><span class="line">    <span class="keyword">return</span> np.sum(xs ** j * ys) / np.sum(xs ** (j+<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">omegaj2</span><span class="params">(xs, ys, m)</span>:</span></span><br><span class="line">    <span class="comment"># 方法二</span></span><br><span class="line">    v = np.matrix(np.column_stack([xs ** i <span class="keyword">for</span> i <span class="keyword">in</span> range(m)]).T)</span><br><span class="line">    y = np.matrix(v) * np.matrix(ys).T</span><br><span class="line">    <span class="keyword">return</span> np.linalg.solve(v * v.T, y)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ns = [<span class="number">4</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>]</span><br><span class="line">ms = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n0, m0 <span class="keyword">in</span> zip(ns, ms):</span><br><span class="line">    xs0 = np.linspace(<span class="number">.1</span>, <span class="number">1</span>, n0)</span><br><span class="line">    ys0 = nr.uniform(<span class="number">1</span>, <span class="number">10</span>, size=n0)</span><br><span class="line">    omegas_sol1 = [omegaj1(xs0, ys0, j) <span class="keyword">for</span> j <span class="keyword">in</span> range(m0+<span class="number">1</span>)]</span><br><span class="line">    omegas_sol2 = omegaj2(xs0, ys0, m0)</span><br><span class="line">    res1 = np.array([equj(xs0, ys0, omegas_sol1, j) <span class="keyword">for</span> j <span class="keyword">in</span> range(m0+<span class="number">1</span>)])</span><br><span class="line">    res2 = np.array([equj(xs0, ys0, omegas_sol2, j) <span class="keyword">for</span> j <span class="keyword">in</span> range(m0+<span class="number">1</span>)])</span><br><span class="line"></span><br><span class="line">    print(<span class="string">f'x: <span class="subst">&#123;xs0&#125;</span>'</span>)</span><br><span class="line">    print(<span class="string">f'y: <span class="subst">&#123;ys0&#125;</span>'</span>)</span><br><span class="line">    print(<span class="string">f'N: <span class="subst">&#123;n0&#125;</span>, M: <span class="subst">&#123;m0&#125;</span>'</span>)</span><br><span class="line">    print(<span class="string">'res1:'</span>, res1)</span><br><span class="line">    print(<span class="string">'res2:'</span>, res2)</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure><p>结论整合如下：</p><p><span class="math display">\[\begin{array}{c|l}    \hline    {(N, M)} &amp; {(4, 3)} \\    {\boldsymbol{X}} &amp; {\begin{array}{llll} {0.1} &amp; {0.4} &amp; {0.7} &amp; {1.0} \end{array}} \\    {\boldsymbol{Y}} &amp; {\begin{array}{llll} {6.4086} &amp; {2.5888} &amp; {1.1871} &amp; {3.0044} \end{array}} \\    {\text{res}_1} &amp; {\begin{array}{llll} {26.8738} &amp; {20.8370}  &amp; {17.5522} &amp; {15.6374} \end{array}} \\    {\text{res}_2} &amp; {\begin{array}{llll} 0  &amp;  0  &amp;  0  &amp;  {-0.0065} \end{array}} \\    \hline    {(N, M)} &amp; {(4, 4)} \\    {\boldsymbol{X}} &amp; {\begin{array}{llll} 0.1 &amp; 0.4 &amp; 0.7 &amp; 1.0 \end{array}} \\    {\boldsymbol{Y}} &amp; {\begin{array}{llll} {6.0025} &amp; {7.9131} &amp; {4.7549} &amp; {4.6187} \end{array}} \\    {\text{res}_1} &amp; {\begin{array}{lllll} {58.2611} &amp; {44.2894} &amp; {38.6435} &amp; {35.4777} &amp; {33.4895} \end{array}} \\    {\text{res}_2} &amp; {\begin{array}{lllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 \end{array}} \\    \hline    {(N, M)} &amp; {(6, 5)} \\    {\boldsymbol{X}} &amp; {\begin{array}{llllll} {0.10} &amp; {0.28} &amp; {0.46} &amp; {0.64} &amp; {0.82} &amp; {1.00} \end{array}} \\    {\boldsymbol{Y}} &amp; {\begin{array}{llllll} {4.0511} &amp; {7.6577} &amp; {2.0744} &amp; {4.0110}  &amp; {3.2187} &amp; {7.4847} \end{array}} \\    {\text{res}_1} &amp; {\begin{array}{llllll} {94.1633} &amp; {70.4719} &amp; {59.2198} &amp; {52.4345} &amp; {47.9117} &amp; {44.7218} \end{array}} \\    {\text{res}_2} &amp; {\begin{array}{llllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 &amp; {-0.0040}\end{array}} \\    \hline    {(N, M)} &amp; {(8, 7)} \\    {\boldsymbol{X}} &amp; {\begin{array}{llllllll} {0.1000} &amp; {0.2286} &amp; {0.3571} &amp; {0.4857} &amp; {0.6143} &amp; {0.7429} &amp; {0.8714} &amp; {1.0000} \end{array}} \\    {\boldsymbol{Y}} &amp; {\begin{array}{llllllll} {7.5006} &amp; {8.4878} &amp; {6.9965} &amp; {8.8697} &amp; {3.8661} &amp; {3.0010}  &amp; {6.0474} &amp; {9.7587} \end{array}} \\    {\text{res}_1} &amp; {\begin{array}{llll} {193.4017} &amp; {148.1521} &amp; {125.1272} &amp; {110.7083} \\ {100.7469} &amp;  {93.4678} &amp;  {87.9480}  &amp;  {83.6494} \end{array}} \\    {\text{res}_2} &amp; {\begin{array}{llllllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 &amp; 0 &amp; 0 &amp; {-0.0001} \end{array}} \\    \hline    {(N, M)} &amp; {(10, 6)} \\    {\boldsymbol{X}} &amp; {\begin{array}{llllllllll} {0.1} &amp; {0.2} &amp; {0.3} &amp; {0.4} &amp; {0.5} &amp; {0.6} &amp; {0.7} &amp; {0.8} &amp; {0.9} &amp; {1.0} \end{array}} \\    {\boldsymbol{Y}} &amp; {\begin{array}{lllll} {8.4519} &amp; {2.8615} &amp; {8.2275} &amp; {5.5887} &amp; {6.4139} \\ {4.8329} &amp; {2.3945} &amp; {9.5324} &amp; {1.5159} &amp; {4.8203} \end{array}} \\    {\text{res}_1} &amp; {\begin{array}{lllllll} {158.5266} &amp; {117.4165}  &amp; {96.8007} &amp;  {84.1716} &amp;  {75.5419} &amp;  {69.2490}  &amp;  {64.4573} \end{array}} \\    {\text{res}_2} &amp; {\begin{array}{llllllllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 &amp; 0 &amp; 0 &amp; {-0.0001} \end{array}} \\    \hline    {(N, M)} &amp; {(10, 7)} \\    {\boldsymbol{X}} &amp; {\begin{array}{llllllllll} {0.1} &amp; {0.2} &amp; {0.3} &amp; {0.4} &amp; {0.5} &amp; {0.6} &amp; {0.7} &amp; {0.8} &amp; {0.9} &amp; {1.0} \end{array}} \\    {\boldsymbol{Y}} &amp; {\begin{array}{lllll} {2.9699} &amp; {8.8436} &amp; {6.0365} &amp; {8.7695} &amp; {4.6556} \\ {8.6279} &amp; {1.5868} &amp; {7.5356} &amp; {2.1053} &amp; {5.5741} \end{array}} \\    {\text{res}_1} &amp; {\begin{array}{llll} {176.0512} &amp; {131.4928} &amp; {109.7501} &amp;  {96.1845} \\ {86.7478} &amp; {79.7768} &amp; {74.4193} &amp; {70.1824} \end{array}} \\    {\text{res}_2} &amp; {\begin{array}{llllllllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 &amp; 0 &amp; 0 &amp; {-0.0001} \end{array}} \\    \hline    {(N, M)} &amp; {(10, 8)} \\    {\boldsymbol{X}} &amp; {\begin{array}{llllllllll} {0.1} &amp; {0.2} &amp; {0.3} &amp; {0.4} &amp; {0.5} &amp; {0.6} &amp; {0.7} &amp; {0.8} &amp; {0.9} &amp; {1.0} \end{array}} \\    {\boldsymbol{Y}} &amp; {\begin{array}{lllll} {1.9506} &amp; {5.4975} &amp; {7.7366} &amp; {3.4942} &amp; {4.6710} \\ {9.2793} &amp; {9.7969} &amp; {2.0273} &amp; {3.1859} &amp; {3.0251} \end{array}} \\    {\text{res}_1} &amp; {\begin{array}{lllll} {158.7535} &amp; {117.7695} &amp;  {98.8822} &amp;  {87.3893} &amp;  {79.4357} \\ {73.5334} &amp; {68.9573} &amp; {65.3023} &amp; {62.3207} &amp; \end{array}} \\    {\text{res}_2} &amp; {\begin{array}{llllllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \end{array}} \\    \hline\end{array}\]</span></p><p>方法一得出的 <span class="math inline">\(\boldsymbol{\omega}\)</span> 代回方程的结果不为零，说明原书结论有误。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;李航《统计学习方法》一书第 12 页关于简单的多项式曲线拟合有如下结论：&lt;/p&gt;
&lt;div class=&quot;note &quot;&gt;具体地，求以下经验风险最小化：
$$
L(\omega) = \frac 12 \sum_{i=1}^N \left(f(x_i, \omega) - y_i\right)^2
\tag{1.18} \label{1.18}
$$
... &lt;br&gt;
这是一个简单的最优化问题。将模型与训练数据代入式 $\eqref{1.18}$ 中，有
$$
L(\omega) = \frac 12 \sum_{i=1}^N \left(\sum_{j=0}^M \omega_j x_i^j-y_i\right)^2
$$
对 $\omega_j$ 求偏导数并令其为 $0$，可得
$$
\omega_j = \frac{\sum\limits_{i=1}^N x_i^j y_i}{\sum\limits_{i=1}^N x_i^{j+1}}, \quad j = 0,1,2,\ldots M
\tag{*} \label{*}
$$&lt;/div&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="http://notes.shinemic.cn/categories/Machine-Learning/"/>
    
    
      <category term="Python" scheme="http://notes.shinemic.cn/tags/Python/"/>
    
      <category term="Statistics" scheme="http://notes.shinemic.cn/tags/Statistics/"/>
    
      <category term="Matrix" scheme="http://notes.shinemic.cn/tags/Matrix/"/>
    
      <category term="Linear Algebra" scheme="http://notes.shinemic.cn/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>SSR 服务器搭建</title>
    <link href="http://notes.shinemic.cn/ssr-on-server/"/>
    <id>http://notes.shinemic.cn/ssr-on-server/</id>
    <published>2018-06-21T12:48:01.000Z</published>
    <updated>2019-11-13T03:03:08.017Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>原文链接:<br><a href="https://doub.bid/ss-jc42" target="_blank" rel="noopener">『原创』CentOS/Debian/Ubuntu ShadowsocksR 单/多端口 一键管理脚本</a><br><a href="https://doub.bid/wlzy-22" target="_blank" rel="noopener">CentOS/Debian/Ubuntu系统 TCP-BBR 一键安装脚本</a></p></blockquote><a id="more"></a><h3 id="安装配置-ssr">安装、配置 SSR</h3><h4 id="系统要求">系统要求</h4><p>** CentOS 6+ / Debian 6+ / Ubuntu 14.04+ **</p><h4 id="脚本特点">脚本特点</h4><ul><li>支持 限制 端口限速</li><li>支持 限制 端口设备数</li><li>支持 显示 当前连接IP</li><li>支持 显示 SS/SSR连接+二维码</li><li>支持 切换管理 单/多端口</li><li>支持 一键安装 BBR</li><li>支持 一键安装 锐速</li><li>支持 一键安装 LotServer</li><li>支持 一键封禁 垃圾邮件(SMAP)/BT/PT</li></ul><h4 id="安装步骤">安装步骤</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/michaelHL/Notes/master/2017/11/src/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br></pre></td></tr></table></figure><h4 id="文件位置">文件位置</h4><ul><li>安装目录: <code>/usr/local/shadowsocksr</code></li><li>配置文件: <code>/etc/shadowsocksr/user-config.json</code></li></ul><h4 id="其他说明">其他说明</h4><p><code>ShadowsocksR</code> 安装后，自动设置为系统服务，所以支持使用服务来启动 / 停止等操作，同时支持开机启动。</p><ul><li>启动 <code>ShadowsocksR</code>: <code>/etc/init.d/ssr start</code></li><li>停止 <code>ShadowsocksR</code>: <code>/etc/init.d/ssr stop</code></li><li>重启 <code>ShadowsocksR</code>: <code>/etc/init.d/ssr restart</code></li><li>查看 <code>ShadowsocksR</code> 状态: <code>/etc/init.d/ssr status</code></li></ul><p><code>ShadowsocksR</code> 默认支持 UDP 转发，服务端无需任何设置</p><h4 id="注意事项">注意事项</h4><ul><li>如果协议是 <code>origin</code>，那么混淆也必须是 <code>plain</code></li><li>若使用了 <code>chacha20</code> 系列加密方式，运行脚本选择选项 4 安装 <code>libsodium</code> 支持库即可</li></ul><h3 id="安装-tcp-bbr">安装 <code>TCP-BBR</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/michaelHL/Notes/master/2017/11/src/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; bash bbr.sh</span><br></pre></td></tr></table></figure><p>重启后，验证一下是否成功安装最新内核并开启 <code>TCP-BBR</code>，输入以下命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line"># 返回值一般为</span><br><span class="line"># net.ipv4.tcp_available_congestion_control = bbr cubic reno</span><br><span class="line"># ————————————</span><br><span class="line">sysctl net.ipv4.tcp_congestion_control</span><br><span class="line"># 返回值一般为</span><br><span class="line"># net.ipv4.tcp_congestion_control = bbr</span><br><span class="line"># ————————————</span><br><span class="line">sysctl net.core.default_qdisc</span><br><span class="line"># 返回值一般为</span><br><span class="line"># net.core.default_qdisc = fq</span><br><span class="line"># ————————————</span><br><span class="line">lsmod | grep bbr</span><br><span class="line"># 返回值有 tcp_bbr 模块即说明bbr已启动</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文链接:&lt;br&gt;
&lt;a href=&quot;https://doub.bid/ss-jc42&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;『原创』CentOS/Debian/Ubuntu ShadowsocksR 单/多端口 一键管理脚本&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://doub.bid/wlzy-22&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CentOS/Debian/Ubuntu系统 TCP-BBR 一键安装脚本&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Development and Deployment" scheme="http://notes.shinemic.cn/categories/Development-and-Deployment/"/>
    
    
      <category term="SSR" scheme="http://notes.shinemic.cn/tags/SSR/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 中安装最新版本 Clang</title>
    <link href="http://notes.shinemic.cn/installing-latest-clang-on-ubuntu/"/>
    <id>http://notes.shinemic.cn/installing-latest-clang-on-ubuntu/</id>
    <published>2018-03-11T02:29:09.000Z</published>
    <updated>2019-02-28T13:06:49.485Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu 16.04 中利用 <code>sudo apt-get install clang</code> 安装 Clang 的版本为 3.8，这个版本对现在来说确实已经很久远了，有必要升级成比较新的版本。这里几乎照搬此篇文章：<a href="https://blog.kowalczyk.info/article/k/how-to-install-latest-clang-5.0-on-ubuntu-16.04-xenial-wsl.html" target="_blank" rel="noopener">How to install latest clang (5.0) on Ubuntu 16.04 (xenial) / WSL</a>。</p><a id="more"></a><p>首先添加仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -</span><br><span class="line">sudo apt-add-repository <span class="string">"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main"</span></span><br></pre></td></tr></table></figure><p>具体地址参考 <a href="https://apt.llvm.org" target="_blank" rel="noopener">LLVM Debian/Ubuntu nightly packages</a>。</p><p>直接通过 <code>apt-get</code> 安装即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y clang-5.0</span><br></pre></td></tr></table></figure><p><strong>多版本共存问题</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-3.8 100</span><br><span class="line">update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-5.0 1000</span><br><span class="line">update-alternatives --install /usr/bin/clang++ clang /usr/bin/clang-3.8 100</span><br><span class="line">update-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.8 100</span><br><span class="line">update-alternatives --install /usr/bin/clang clang /usr/bin/clang-5.0 1000</span><br><span class="line">update-alternatives --config clang</span><br><span class="line">update-alternatives --config clang++</span><br></pre></td></tr></table></figure><p>代码格式化工具 <code>clang-format</code> 同理。</p><p><strong>Vim C / C++ 代码格式化插件</strong></p><div class="note info"><a href="https://github.com/rhysd/vim-clang-format" target="_blank" rel="noopener">vim-clang-format</a><br>Vim plugin for clang-format, a formatter for C, C++, Obj-C, Java, JavaScript, TypeScript and ProtoBuf.</div><p>该插件可以直接在 <code>.vimrc</code> 中设置代码风格，示例如下：</p><figure class="highlight vim"><figcaption><span>.vimrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Plugin <span class="string">'rhysd/vim-clang-format'</span></span><br><span class="line"><span class="keyword">autocmd</span> FileType <span class="keyword">c</span>,cpp,java <span class="keyword">nnoremap</span> <span class="symbol">&lt;silent&gt;</span> == :ClangFormat<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:clang_format</span>#detect_style_file = <span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ubuntu 16.04 中利用 &lt;code&gt;sudo apt-get install clang&lt;/code&gt; 安装 Clang 的版本为 3.8，这个版本对现在来说确实已经很久远了，有必要升级成比较新的版本。这里几乎照搬此篇文章：&lt;a href=&quot;https://blog.kowalczyk.info/article/k/how-to-install-latest-clang-5.0-on-ubuntu-16.04-xenial-wsl.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;How to install latest clang (5.0) on Ubuntu 16.04 (xenial) / WSL&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Operation and Maintenance" scheme="http://notes.shinemic.cn/categories/Operation-and-Maintenance/"/>
    
    
      <category term="Linux" scheme="http://notes.shinemic.cn/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="http://notes.shinemic.cn/tags/Ubuntu/"/>
    
      <category term="Clang" scheme="http://notes.shinemic.cn/tags/Clang/"/>
    
  </entry>
  
  <entry>
    <title>部署 RStudio Server</title>
    <link href="http://notes.shinemic.cn/deployment-of-rstudio-server/"/>
    <id>http://notes.shinemic.cn/deployment-of-rstudio-server/</id>
    <published>2018-02-03T13:18:51.000Z</published>
    <updated>2019-02-28T13:06:49.485Z</updated>
    
    <content type="html"><![CDATA[<p>在 Ubuntu 16.04.3 下部署 RStudio Server <i class="fa fa-registered fa-fw"></i>。</p><p>RStudio 是一款优秀的 R 语言集成开发软件，官方免费提供社区版 RStudio Server，默认支持多用户登录。</p><a id="more"></a><p>首先安装 R 的最新版本（参考 <a href="https://cran.rstudio.com/bin/linux/ubuntu/README.html" target="_blank" rel="noopener">UBUNTU PACKAGES FOR R</a>）:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove r-base-core</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'deb https://mirrors.ustc.edu.cn/CRAN/bin/linux/ubuntu xenial/'</span> | sudo tee -a /etc/apt/sources.list</span><br><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install r-base r-base-dev</span><br></pre></td></tr></table></figure><p>下载安装 RStudio Server（参考官方<a href="https://www.rstudio.com/products/rstudio/download-server" target="_blank" rel="noopener">下载页面</a>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gdebi-core</span><br><span class="line">wget https://download2.rstudio.org/rstudio-server-1.1.419-amd64.deb</span><br><span class="line">sudo gdebi rstudio-server-1.1.419-amd64.deb</span><br></pre></td></tr></table></figure><p>完成之后可进行 <code>rstudio-server {status|start|stop|restart|}</code> 等操作。</p><p>进一步，可对 RStudio Server 进行深度配置：</p><figure class="highlight ini"><figcaption><span>/etc/rstudio/rserver.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">www-port</span>=<span class="number">9999</span></span><br><span class="line"><span class="attr">server-app-armor-enabled</span>=<span class="number">0</span></span><br></pre></td></tr></table></figure><p>Nginx 配置：</p><figure class="highlight nginx"><figcaption><span>nginx.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">map</span> <span class="variable">$http_upgrade</span> <span class="variable">$connection_upgrade</span> &#123;</span><br><span class="line">    <span class="attribute">default</span> upgrade;</span><br><span class="line">    ''      close;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">      <span class="attribute">proxy_pass</span> http://localhost:9999;</span><br><span class="line">      <span class="attribute">proxy_redirect</span> http://localhost:9999/ <span class="variable">$scheme</span>://<span class="variable">$host</span>/;</span><br><span class="line">      <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span> Connection <span class="variable">$connection_upgrade</span>;</span><br><span class="line">      <span class="attribute">proxy_read_timeout</span> <span class="number">20d</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 Ubuntu 16.04.3 下部署 RStudio Server &lt;i class=&quot;fa fa-registered fa-fw&quot;&gt;&lt;/i&gt;。&lt;/p&gt;
&lt;p&gt;RStudio 是一款优秀的 R 语言集成开发软件，官方免费提供社区版 RStudio Server，默认支持多用户登录。&lt;/p&gt;
    
    </summary>
    
      <category term="Development and Deployment" scheme="http://notes.shinemic.cn/categories/Development-and-Deployment/"/>
    
    
      <category term="Server" scheme="http://notes.shinemic.cn/tags/Server/"/>
    
      <category term="R" scheme="http://notes.shinemic.cn/tags/R/"/>
    
      <category term="RStudio" scheme="http://notes.shinemic.cn/tags/RStudio/"/>
    
  </entry>
  
  <entry>
    <title>Windows 挂载 Linux 文件系统</title>
    <link href="http://notes.shinemic.cn/mouting-linux-file-systems-on-windows/"/>
    <id>http://notes.shinemic.cn/mouting-linux-file-systems-on-windows/</id>
    <published>2018-02-02T05:35:06.000Z</published>
    <updated>2019-02-28T13:06:49.501Z</updated>
    
    <content type="html"><![CDATA[<p>推荐在 Windows 下利用 SSH 挂载远程 Linux 文件系统及目录的工具：<a href="https://github.com/Foreveryone-cz/win-sshfs" target="_blank" rel="noopener">WinSshFS</a>。</p><p>虽然可以利用各类 SFTP 软件与服务器间互传文件，但操作感始终没有直接双击打开「我的电脑」里面的盘符来的方便。那么基于 <a href="https://github.com/dokan-dev/dokany" target="_blank" rel="noopener">Dokany</a> 开发的 WinSshFS 就能完美满足这个需求。配置比较简单：</p><ol type="1"><li>安装 Dokany 库</li><li>下载 / 安装 WinSshFS</li></ol><a id="more"></a><p>配置完后远程目录的操作基本与本地磁盘相同了，下为 MSYS2 中 <code>df</code> 显示的结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ df -h</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">D:/MSYS2        391G   48G  344G  13% /</span><br><span class="line">C:              100G   25G   75G  25% /c</span><br><span class="line">E:              441G  198G  244G  45% /e</span><br><span class="line">M:               40G   23G   19G  55% /m</span><br><span class="line">N:              976G  815G  212G  80% /n</span><br><span class="line">O:              3.6T  413G  3.4T  11% /o</span><br></pre></td></tr></table></figure><hr><p>仅需注意的是这二者并不是同一作者开发，后者的更新相比于前者有一定迟滞性，所以 Dokany 库不宜下载最新版，具体推荐版本见 WinSshFS 的<a href="https://github.com/Foreveryone-cz/win-sshfs/releases" target="_blank" rel="noopener">发行界面</a>。当前稳定运行的版本为：</p><ul><li>Dokany: 1.0.5.1000</li><li>WinSshFS: 1.6.0.14</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;推荐在 Windows 下利用 SSH 挂载远程 Linux 文件系统及目录的工具：&lt;a href=&quot;https://github.com/Foreveryone-cz/win-sshfs&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WinSshFS&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;虽然可以利用各类 SFTP 软件与服务器间互传文件，但操作感始终没有直接双击打开「我的电脑」里面的盘符来的方便。那么基于 &lt;a href=&quot;https://github.com/dokan-dev/dokany&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Dokany&lt;/a&gt; 开发的 WinSshFS 就能完美满足这个需求。配置比较简单：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;安装 Dokany 库&lt;/li&gt;
&lt;li&gt;下载 / 安装 WinSshFS&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Handy Utilities" scheme="http://notes.shinemic.cn/categories/Handy-Utilities/"/>
    
    
      <category term="Linux" scheme="http://notes.shinemic.cn/tags/Linux/"/>
    
      <category term="Windows" scheme="http://notes.shinemic.cn/tags/Windows/"/>
    
      <category term="SSH" scheme="http://notes.shinemic.cn/tags/SSH/"/>
    
      <category term="FileSystem" scheme="http://notes.shinemic.cn/tags/FileSystem/"/>
    
  </entry>
  
  <entry>
    <title>编译 YouCompleteMe</title>
    <link href="http://notes.shinemic.cn/compilation-of-you-complete-me/"/>
    <id>http://notes.shinemic.cn/compilation-of-you-complete-me/</id>
    <published>2018-01-29T08:46:34.000Z</published>
    <updated>2020-06-06T11:20:20.265Z</updated>
    
    <content type="html"><![CDATA[<p>由 <a href="https://github.com/Valloric" target="_blank" rel="noopener">Valloric</a> 开发的 Vim 插件 <a href="https://github.com/Valloric/YouCompleteMe" target="_blank" rel="noopener">YouCompleteMe</a> 可以算上是最难安装的 Vim 插件了，折腾记录如下。</p><a id="more"></a><h2 id="centos-7.3">CentOS 7.3</h2><h3 id="更新-gcc">更新 GCC</h3><p>CentOS 7.3 自带的 GCC 版本仅为 4.8.5，Ubuntu 16.04 的 GCC 版本已经到了 5.4.0。所以如果是 CentOS 系统，第一步一定要更新 GCC 版本，否则后续过程寸步难行。具体过程从略。</p><h3 id="编译-ycm">编译 YCM</h3><p>根据官方的 <a href="https://github.com/Valloric/YouCompleteMe#installation" target="_blank" rel="noopener">安装指南</a>，有如下操作步骤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.vim/bundle/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/Valloric/YouCompleteMe.git</span><br><span class="line"><span class="built_in">cd</span> YouCompleteMe</span><br><span class="line">git submodule update --init --recursive</span><br><span class="line">mkdir -p ~/ycm_temp/</span><br><span class="line"><span class="built_in">cd</span> ~/ycm_temp/</span><br><span class="line">wget http://releases.llvm.org/4.0.1/clang+llvm-4.0.1-x86_64-linux-gnu-debian8.tar.xz</span><br><span class="line">tar -xvf clang+llvm-4.0.1-x86_64-linux-gnu-debian8.tar.xz</span><br><span class="line">mkdir -p ~/ycm_build</span><br><span class="line"><span class="built_in">cd</span> ~/ycm_build</span><br><span class="line">cmake -G <span class="string">"Unix Makefiles"</span> \</span><br><span class="line">      -DPATH_TO_LLVM_ROOT=~/ycm_temp/clang+llvm-4.0.1-x86_64-linux-gnu-debian8 \</span><br><span class="line">      -DPYTHON_INCLUDE_DIR=/usr/include/python3.4m \</span><br><span class="line">      -DPYTHON_LIBRARY=/usr/lib64/libpython3.so \</span><br><span class="line">      -DUSE_PYTHON2=OFF \</span><br><span class="line">. ~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp</span><br><span class="line">cmake --build . --target ycm_core</span><br></pre></td></tr></table></figure><p>这里仅用 <code>Python 3.x</code> 版本，所以使用 <code>-DUSE_PYTHON2=OFF</code> 选项。</p><h3 id="c-语言家族支持">C 语言家族支持</h3><p>在家目录中新建文件 <a href="/src/ycm_extra_conf.py">.ycm_extra_conf.py</a>。</p><h3 id="vimrc-配置">vimrc 配置</h3><figure class="highlight vim"><figcaption><span>.vimrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Plugin <span class="string">'Valloric/YouCompleteMe'</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ycm_global_ycm_extra_conf</span> = <span class="string">'~/.ycm_extra_conf.py'</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ycm_confirm_extra_conf</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ycm_seed_identifiers_with_syntax</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ycm_server_python_interpreter</span> = <span class="string">'/usr/bin/python3'</span></span><br><span class="line"><span class="keyword">set</span> completeopt=longest,<span class="keyword">menu</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ycm_semantic_triggers</span> = &#123;</span><br><span class="line">\ <span class="string">'c'</span> : [<span class="string">'-&gt;'</span>, <span class="string">'.'</span>, <span class="string">' '</span>, <span class="string">'('</span>, <span class="string">'['</span>, <span class="string">'&amp;'</span>],</span><br><span class="line">\ <span class="string">'cpp,objcpp'</span> : [<span class="string">'-&gt;'</span>, <span class="string">'.'</span>, <span class="string">' '</span>, <span class="string">'('</span>, <span class="string">'['</span>, <span class="string">'&amp;'</span>, <span class="string">'::'</span>],</span><br><span class="line">\ <span class="string">'perl'</span> : [<span class="string">'-&gt;'</span>, <span class="string">'::'</span>, <span class="string">' '</span>],</span><br><span class="line">\ <span class="string">'php'</span> : [<span class="string">'-&gt;'</span>, <span class="string">'::'</span>, <span class="string">'.'</span>],</span><br><span class="line">\ <span class="string">'cs,java,javascript,d,vim,python,perl6,scala,vb,elixir,go'</span> : [<span class="string">'.'</span>],</span><br><span class="line">\ <span class="string">'ruby'</span> : [<span class="string">'.'</span>, <span class="string">'::'</span>],</span><br><span class="line">\ <span class="string">'lua'</span> : [<span class="string">'.'</span>, <span class="string">':'</span>]</span><br><span class="line">\ &#125;</span><br></pre></td></tr></table></figure><h2 id="ubuntu-16.04">Ubuntu 16.04</h2><p>由于 Python 库路径与 CentOS 系统有所不同，<code>cmake</code> 部分有少许变动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.vim/bundle/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/Valloric/YouCompleteMe.git</span><br><span class="line"><span class="built_in">cd</span> YouCompleteMe</span><br><span class="line">git submodule update --init --recursive</span><br><span class="line">mkdir -p ~/ycm_temp/</span><br><span class="line"><span class="built_in">cd</span> ~/ycm_temp/</span><br><span class="line">wget http://releases.llvm.org/5.0.1/clang+llvm-5.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz</span><br><span class="line">tar -xvf clang+llvm-5.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz</span><br><span class="line">mkdir -p ~/ycm_build</span><br><span class="line"><span class="built_in">cd</span> ~/ycm_build</span><br><span class="line">cmake -G <span class="string">"Unix Makefiles"</span> \</span><br><span class="line">      -DPATH_TO_LLVM_ROOT=~/ycm_temp/clang+llvm-5.0.1-x86_64-linux-gnu-ubuntu-16.04 \</span><br><span class="line">      -DPYTHON_INCLUDE_DIR=/usr/include/python3.5m \</span><br><span class="line">      -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.5m.so \</span><br><span class="line">      -DUSE_PYTHON2=OFF \</span><br><span class="line">      . ~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp</span><br><span class="line">cmake --build . --target ycm_core</span><br></pre></td></tr></table></figure><hr><h2 id="windows">Windows</h2><p>Windows 下编译比较烦琐，各工具需单独下载。</p><h3 id="原料">原料</h3><ul><li><a href="http://releases.llvm.org/4.0.1/LLVM-4.0.1-win64.exe" target="_blank" rel="noopener">Clang for Windows (64-bit)</a></li><li><a href="https://www.python.org/download" target="_blank" rel="noopener">Python</a></li><li><a href="https://cmake.org/download" target="_blank" rel="noopener">CMake</a></li><li><a href="https://www.visualstudio.com" target="_blank" rel="noopener">Visual Studio</a></li><li>MinGW GCC（测试用 MSYS2 系统里面的 MinGW64 替代）</li></ul><p>测试时各版本如下：</p><table><thead><tr class="header"><th style="text-align: center;">Entries</th><th style="text-align: center;">Version</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">Clang</td><td style="text-align: center;">4.0.1 x64</td></tr><tr class="even"><td style="text-align: center;">Python</td><td style="text-align: center;">2.7.10 x64</td></tr><tr class="odd"><td style="text-align: center;">CMake</td><td style="text-align: center;">3.9.0 x64</td></tr><tr class="even"><td style="text-align: center;">Visual Studio</td><td style="text-align: center;">2017</td></tr><tr class="odd"><td style="text-align: center;">MinGW GCC</td><td style="text-align: center;">7.1.0</td></tr><tr class="even"><td style="text-align: center;">Git</td><td style="text-align: center;">-</td></tr></tbody></table><h3 id="编译">编译</h3><p>为防止环境变量 <code>PATH</code> 干扰，暂时删除在 <code>PATH</code> 中 MSYS2 的两个路径（<code>/mingw64/bin</code>，<code>/usr/bin</code> 包含 <code>clang</code>，<code>cmake</code> 和 <code>python</code>），加入刚才安装的 Cmake 路径（Python，Clang 的路径并不需要）。下面一套动作即可完成编译：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git clone http://github.com/Valloric/YouCompleteMe.git</span><br><span class="line"><span class="built_in">cd</span> YouCompleteMe</span><br><span class="line">git submodule update --init --recursive</span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake -G "Visual Studio <span class="number">15</span> Win64" ^</span><br><span class="line">      -DPATH_TO_LLVM_ROOT=D:/LLVM ^</span><br><span class="line">      -DPYTHON_INCLUDE_DIR=D:/Python/Python27/include ^</span><br><span class="line">      -DPYTHON_LIBRARY=D:/Python/Python27/libs/python27.lib ^</span><br><span class="line">      . ../third_party/ycmd/cpp</span><br><span class="line">cmake --build . --target ycm_core --config Release</span><br></pre></td></tr></table></figure><p>这里明确指明了 LLVM 的目录以及 Python 的库，当然如果要在 Python 3.x 下编译，需将 <code>cmake</code> 部分改为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cmake -G <span class="string">"Visual Studio 15 Win64"</span> ^</span><br><span class="line">      -DPATH_TO_LLVM_ROOT=D:/LLVM ^</span><br><span class="line">      -DPYTHON_INCLUDE_DIR=D:/Python/Python36/include ^</span><br><span class="line">      -DPYTHON_LIBRARY=D:/Python/Python36/libs/python36.lib ^</span><br><span class="line">      -DUSE_PYTHON2=OFF . ../third_party/ycmd/cpp</span><br></pre></td></tr></table></figure><p>上述的 Python，LLVM，Visual Studio，CMake 的版本会直接影响编译结果，从多次编译的结果上看，LLVM 的版本宜 3.9+，且 Python 和 LLVM 的位数需匹配，而且 Python 2.7.11，Python 2.7.13 版本即便编译成功，在后续的使用中仍会出问题。</p><h3 id="测试">测试</h3><p>编译好之后，在 VSCode 中使用 <a href="https://github.com/richard1122/vscode-youcompleteme" target="_blank" rel="noopener">you-complete-me</a> 插件尝试，有少许小问题（不提示系统库函数，但按下 <code>.</code> 之后才有提示。对引入的系统头文件警告等），总体不影响使用，而且支持跳转、peek。</p><p>附上 VSCode 中的配置：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">"ycmd.path": "E:\\YouCompleteMe\\third_party\\ycmd",</span><br><span class="line">"ycmd.confirm_extra_conf": true,</span><br><span class="line">"ycmd.global_extra_config": "F:\\WorkingDirectory\\Configuration\\common\\_ycm_extra_conf.py",</span><br><span class="line">"ycmd.python": "D:\\Python\\Python27\\python.exe",</span><br></pre></td></tr></table></figure><p>以及 YCM 所需的 <a href="/src/_ycm_extra_conf.py">_ycm_extra_conf.py</a>。</p><p>原料里面的各工具的版本试了又试，<code>Python 2.7.10</code> + <code>LLVM Clang 4.0.1</code> 是最佳组合。</p><h3 id="致谢">致谢</h3><ul><li><a href="https://github.com/Valloric/YouCompleteMe" target="_blank" rel="noopener">YouCompleteMe</a></li><li><a href="https://clang.llvm.org/" target="_blank" rel="noopener">LLVM</a></li><li><a href="https://gcc.gnu.org/" target="_blank" rel="noopener">GCC</a></li><li><a href="http://blog.techbeta.me/2015/10/linux-centos6-5-upgrade-gcc/" target="_blank" rel="noopener">centos6.5升级gcc到4.9</a></li><li><a href="http://www.cnblogs.com/wanghaiyang1930/p/5608531.html" target="_blank" rel="noopener">CentOS 6.5 升级 GCC 4.9.3</a></li><li><a href="http://blog.csdn.net/officercat/article/details/39519265" target="_blank" rel="noopener">Linux下GLIBCXX和GLIBC版本低造成的编译错误的解决方案</a></li><li><a href="http://blog.csdn.net/nzyalj/article/details/75331822" target="_blank" rel="noopener">Centos7安装vim8.0 + YouCompleteMe</a><ul><li>该博主利用 <code>devtoolset</code> 来更新 GCC 版本，不过在测试中无效</li></ul></li><li><a href="http://www.jianshu.com/p/e9cb158f7048" target="_blank" rel="noopener">打造VIM利器</a></li></ul><hr><h2 id="问题">问题</h2><ul><li>不能对 Anaconda 中的包进行补全。应重新编译 YCM，编译时与 Anaconda 相关的路径不应出现在 <code>PATH</code> 中，且 <code>.vimrc</code> 中应注释掉关于 <code>g:ycm_server_python_interpreter</code> 的行。参考 <a href="https://github.com/Valloric/YouCompleteMe/issues/1241#issuecomment-335051278" target="_blank" rel="noopener">YouCompleteMe does not work with Anaconda Python</a>。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由 &lt;a href=&quot;https://github.com/Valloric&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Valloric&lt;/a&gt; 开发的 Vim 插件 &lt;a href=&quot;https://github.com/Valloric/YouCompleteMe&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;YouCompleteMe&lt;/a&gt; 可以算上是最难安装的 Vim 插件了，折腾记录如下。&lt;/p&gt;
    
    </summary>
    
      <category term="Operation and Maintenance" scheme="http://notes.shinemic.cn/categories/Operation-and-Maintenance/"/>
    
    
      <category term="Vim" scheme="http://notes.shinemic.cn/tags/Vim/"/>
    
      <category term="YCM" scheme="http://notes.shinemic.cn/tags/YCM/"/>
    
  </entry>
  
  <entry>
    <title>Windows 问题与技巧</title>
    <link href="http://notes.shinemic.cn/problems-tricks-and-memo-on-windows/"/>
    <id>http://notes.shinemic.cn/problems-tricks-and-memo-on-windows/</id>
    <published>2018-01-24T12:39:34.000Z</published>
    <updated>2020-04-07T23:11:38.413Z</updated>
    
    <content type="html"><![CDATA[<p>记录 Windows <i class="fa fa-windows fa-fw"></i> 下遇到的问题、技巧与备忘。</p><a id="more"></a><ol type="1"><li><p>JetBrains 的 Vim 插件配置文件放在 <code>~/.ideavimrc</code></p></li><li><p>MS Access 自动切换输入法修复方法： Options -&gt; Client Settings -&gt; Datasheet IME control</p></li><li><p>关闭恼人的 <code>Connected User Experiences and Telemetry</code> 服务：</p><ol type="1"><li>打开计划任务程序，定位到 Microsoft - Windows - Application Experience，禁用 Microsoft Compatibility Appraiser</li><li>打开服务，禁用 Connected User Experiences and Telemetry</li><li>打开组策略，依次定位 Computer Configuration - Administrative Templates - Windows Components - Data Collection and Preview Builds - Allow Telemetry，设为 Disabled</li></ol></li><li><p>卸载 OneDrive：</p><ol type="1"><li>不让 OneDrive 弹出： <code>Win-X-A</code> - <code>taskkill /f /im OneDrive.exe</code></li><li><code>%SystemRoot%\SysWOW64\OneDriveSetup.exe /uninstall</code>（注意系统位）</li></ol></li><li><p>Mobaxterm 中设置 Cygwin 的源：</p><ul><li><code>apt-cyg -m http://mirrors.neusoft.edu.cn/cygwin/ install/remove. ...</code></li><li><code>apt-cyg -m http://mirrors.ustc.edu.cn/cygwin/ install/remove ...</code></li><li><code>apt-cyg -m http://mirrors.aliyun.com/cygwin/ install/remove ...</code></li><li><code>apt-cyg -m http://mirrors.163.com/cygwin/ install/remove ...</code></li></ul></li><li><p>MobaXterm 中的 Cygwin 如有命令出错，有可能是版本过低</p></li><li><p>MobaXterm 中如果无法安装包（一般出现校验值错误的情况），可手动下载 <code>setup.ini</code>，注意版本为 <code>x86</code></p></li><li><p>Sublime Text 插件 SFTP 注册码：（在 <code>Settings-User</code> 中加入） <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"email"</span>:<span class="string">"Rimke@163.com"</span>,</span><br><span class="line">    <span class="attr">"product_key"</span>:<span class="string">"e83eda-38644b-43c828-e3669b-cd8a85"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li><li><p>Sublime Text 插件 AStyleFormatter 报错：安装 Microsoft Visual C++ 2010 SP1 Redistributable Package (x64)</p></li><li><p>Sublime Text 主题插件 Boxy 深度定制：</p><ul><li><code>Boxy</code> 侧边栏背景色：<code>Sidebar Tree Defaults - "sidebar_tree"</code></li><li><code>Boxy</code> 侧边栏分隔：<code>"class": sidebar_container"，"layer0.tint"</code></li></ul></li><li><p>Potplayer 遇到「单声道」的情况，将声音 - 环绕置 0 即可</p></li><li><p>任务栏透明: <a href="http://www.zdfans.com/5573.html" target="_blank" rel="noopener">StartIsBack</a></p></li><li><p>win 7 下一些控件、动态链接库无法注册问题的终极解决办法（<strong>不推荐</strong>）: 激活并登陆 <code>Administrator</code> 账户（一定必须为该名称， 即使为管理员账户也不能行使此账户的一些职权）</p></li><li><p>清除各种显卡右键菜单：</p><ul><li>Nvidia：<ul><li>清除：<code>regsvr32 /u nvcpl.dll</code></li><li>显示：<code>regsvr32 nvcpl.dll</code></li></ul></li><li>Intel：<ul><li>清除：<code>regsvr32 /u igfxsrvc.dll</code></li><li>显示：<code>regsvr32 igfxsrvc.dll</code></li></ul></li><li>Ati：<ul><li>清除：<code>regsvr32 /u atiacmxx.dll</code></li><li>显示：<code>regsvr32 atiacmxx.dll</code></li></ul></li><li>Intel集成：<ul><li>清除：<code>regsvr32 /u igfxpph.dll</code></li><li>显示：<code>regsvr32 igfxpph.dll</code></li></ul></li></ul></li><li><p>修复 vbs 默认打开方式：<code>cmd /c cscript/h:wscript</code></p></li><li><p>无法附着到任务栏： <figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cmd</span> /k reg add "HKEY_CLASSES_ROOT\lnkfile" /v IsShortcut /f</span><br><span class="line"><span class="built_in">cmd</span> /k reg add "HKEY_CLASSES_ROOT\piffile" /v IsShortcut /f</span><br><span class="line"><span class="built_in">cmd</span> /k <span class="built_in">taskkill</span> /f /im explorer.exe &amp; explorer.exe</span><br></pre></td></tr></table></figure></p></li><li><p>启动项文件夹：<code>shell:Startup</code></p></li><li><p>Cygwin 中 Mintty 快捷方式：<code>mintty.exe -i /Cygwin-Terminal.ico -</code></p></li><li><p>npm 路径：<code>C:\Users\xxx\AppData\Roaming\npm</code></p></li><li><p>tlmgr 更换 repository： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tlmgr option repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet</span><br><span class="line">tlmgr option repository http://mirrors.ustc.edu.cn/CTAN/systems/texlive/tlnet</span><br></pre></td></tr></table></figure> CLI 下更新： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tlmgr update --self --repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet/</span><br><span class="line">tlmgr update --all --repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet/</span><br></pre></td></tr></table></figure></p></li><li><p>Sublime Text 插件 SublimeREPL 出现 <code>OSError: [WinError 6] The handle is invalid</code> 解决方案： <figure class="highlight python"><figcaption><span>Data/Packages/SublimeREPL/repls/subprocess_repl.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_alive</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">True</span></span><br></pre></td></tr></table></figure></p></li><li><p>Sublime Text 开启 Debug 模式：<code>sublime.log_commands(True)</code></p></li><li><p>华丽的提示符：添加环境变量 <code>PROMPT</code>，比如 <code>[ $e[35;40mNasty-Newbie$e[0m $b $e[1;33;40m$d $t$e[0m $b $e[1;31m$p$e[0m ]$_$e[1;33mλ$e[0m</code>，显示成： <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ Nasty-Newbie | Sun 09/09/2018 21:52:58.55 | C:\Users\Heller ]</span><br><span class="line">λ </span><br></pre></td></tr></table></figure></p></li><li><p><code>MSYS2</code> 中自动挂载文件：<code>/etc/fstab</code>，比如： <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># For a description of the file format, see the Users Guide</span><br><span class="line"># http://cygwin.com/cygwin-ug-net/using.html#mount-table</span><br><span class="line"></span><br><span class="line"># DO NOT REMOVE NEXT LINE. It remove cygdrive prefix from path</span><br><span class="line">none / cygdrive binary,posix=0,noacl,user 0 0</span><br><span class="line">C:\Users\Michael\Desktop /desktop</span><br><span class="line">D:\MSYS2\home\Michael\Notes /notes</span><br><span class="line">F:\WorkingDirectory\Work\__current /current</span><br></pre></td></tr></table></figure></p></li><li><p>Chrome 浏览器在高分屏幕下的快捷方式： <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;\chrome.exe&quot; /high-dpi-support=1 /force-device-scale-factor=1</span><br></pre></td></tr></table></figure></p></li><li><p>为 <a href="https://sourceforge.net" target="_blank" rel="noopener">SourceForge</a> 加速： <a href="http://sourceforge.mirrorservice.org" target="_blank" rel="noopener">http://sourceforge.mirrorservice.org</a></p></li><li><p>Sublime Text 插件 LaTeXTools 关于 PDF 阅读器 SumaptraPDF 反向搜索的设置： <figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sumatrapdf.exe -inverse-search "\"C:\Program Files\Sublime Text <span class="number">3</span>\sublime_text.exe\" \"<span class="variable">%f:%</span>l\""</span><br></pre></td></tr></table></figure> 关于公式不能预览的问题：手动从 <a href="https://ghostscript.com" target="_blank" rel="noopener">Ghostscript 官网</a> 安装，并将环境路径添加至 <code>TexLive</code> 路径前面; 添加 ImageMagick 的环境路径</p></li><li><p>Mathtype 的官方安装包名为 <code>InstallMTW6.9b.exe</code></p></li><li><p>Avast 杀毒软件的安装需要取消勾选 <code>Real Site</code>（中文名可能为 <code>DNS</code> 相关），否则网速奇慢！顺便，防火墙也别装了，简直神坑！</p></li><li><p>Avast 添加排除目录（添加信任）：<code>Settings</code> - <code>Components</code> - <code>File Shield</code> &amp;&amp; <code>Behavior Shield</code> - <code>Customize</code> - <code>Exclusions</code>，否则某些程序会无端卡死（比如赖以生存的 <code>ConEmu</code>）</p></li><li><p>用 UltraISO 刻录的 Windows 10 系统 U 盘无法创建分区（提示为 MBR / GPT 分区）解决方案：删除 U 盘中文件夹 <code>efi/</code> 以及文件 <code>bootmgr.efi</code></p></li><li><p>TeamViewer(TV) 提示</p><blockquote><p>The screen cannot be captured at the moment. This is probably due to fast user switching or a disconnected/minimized Remote Desktop session.</p></blockquote><p>且场景为：被连接的机器为笔记本，盒上盖子，已打开 tv 服务。 解决方案：</p><ul><li>打开笔记本盖子</li><li>或将一根 HDMI 线连接至显示器</li></ul></li><li><p>Sublime Text 插件 Anaconda 显示类似如下错误且伴有切换至 <code>python</code> 文件卡顿： <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Anaconda.anaconda_lib.workers.local_worker.LocalWorker object at 0x000001EA4B464FD0&gt; initial check failed because:</span><br><span class="line">connection to localhost:51568 timed out after 0.2s. tried to connect 7 times during 2 seconds</span><br><span class="line">check that there is Python process executing the anaconda jsonserver.py script running in your system. If there is, check that you can connect to your localhost writing the following script in your Sublime Text 3 console:</span><br><span class="line">import socket; socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((&quot;localhost&quot;, 51568))</span><br></pre></td></tr></table></figure> 场景：MSYS2 环境变量 <code>/usr/bin</code>，<code>/mingw64/bin</code>；Anaconda 没有加入环境变量。 解决方案：将 <code>"python_interpreter": "/path/to/python_exe"</code> 加入<strong>用户配置文件</strong> <code>Preferences.sublime-settings</code></p></li><li><p>Xshell 5 中 <code>Shift-Tab</code> 效果却为切换标签处理办法：设置一次针对 <code>Shift-Tab</code> 的快捷键，再取消设置这个快捷键</p></li><li><p>Word 里面用 Mathtype 编辑的公式用默认的方法导出 PDF 文件时出现各类显示问题：改用 <a href="http://www.dopdf.com" target="_blank" rel="noopener">doPDF</a></p></li><li><p>Sublime Text 插件 Clang Format 令其对全文件格式化： <a href="https://github.com/rosshemsley/SublimeClangFormat/pull/10/commits/ea22686f40009104935a0378b7c4fd387121c8a1" target="_blank" rel="noopener">Format whole file if nothing selected</a></p></li><li><p>Sublime Text 插件 LaTeXTools 中公式渲染/预览不全解决方案： 配置文件中为 <code>preview_math_template_preamble</code> 添加 <code>\usepackage[margin=2cm]{geometry}</code></p></li><li><p>Windows 批处理在后台运行程序：<code>start /b xxx</code>，输出会在当前窗口（当然可以通过 <code>&gt;nul 2&gt;&amp;1</code> 抑制输出），但是可以进行其他操作（有点类似于 *nix 中的 <code>&amp;</code>）。或者 <code>start /min "" program params</code>，会在最小化的新窗口中运行程序，同时控制权交给当前终端</p></li><li><p>Potplayer 关闭左上角的进度显示：基本 -&gt; 消息 -&gt; 取消勾选「在屏幕上显示播放信息」</p></li><li><p>自动锁屏可在屏幕保护程序中进行设置，即便是空的锁屏样式</p></li><li><p>MSYS2 中安装 <code>watch</code>：<code>pacman -S procps-ng</code></p></li><li><p>GNU 工具源码镜像：<a href="http://mirrors.ustc.edu.cn/gnu" target="_blank" rel="noopener">http://mirrors.ustc.edu.cn/gnu</a></p></li><li><p>Ghost 系统桌面出现顽固图标注册表： <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Desktop\NameSpace</span><br></pre></td></tr></table></figure></p></li><li><p>列出所有 Windows 服务状态: <code>sc queryex type= service state= all | find /i "NATION"</code></p></li><li><p>删除 Outlook 所有账户。Outlook 删除到最后一个账户不给删除了，解决方案如下：</p><ol type="1"><li>Close Outlook.</li><li>Run Windows Control Panel.</li><li>Open the “Mail（Microsoft Outlook 2016）” applet and click the “Show Profiles…” button.</li><li>Remove the existing “Outlook” profile.</li><li>Add a new profile, name it “Outlook” and create a new account as needed.</li></ol></li><li><p>Clion 中遇到输入时结果显现两次处理方案：<code>C-S-a</code>，输入 <code>registry</code>，取消勾选 <code>run.processes.with.pty</code> （参考 <a href="https://youtrack.jetbrains.com/issue/CPP-2580" target="_blank" rel="noopener">User input appears twice in output window in CLion under MinGW</a>）</p></li><li><p>Windows 10 彻底禁用自动更新方案：</p><ol type="1"><li><code>services.msc</code> 中设置 <code>Windows Update</code> 服务为禁用，并在 <code>Recovery</code> 中设置为不恢复</li><li><code>gpedit.msc</code> 中: <code>Computer Configuration</code> - <code>Administrative Templates</code> - <code>Windows Components</code> - <code>Windows Update</code> - <code>Specify intranet ...</code>，启用此策略，并将 3 个服务器地址设为 <code>127.0.0.1</code></li></ol></li><li><p>解决 Microsoft Word 打开时自动切换输入法问题: 选项 - 高级 - 编辑选项 - 取消勾选「输入法控制处于活动状态」</p></li><li><p>Word 2016 中设置正文分栏而脚注不分栏：脚注区右键菜单 - 便笺选项 - 列 - 1 列。 <strong>注：</strong> Word 2003 及之前版本如此设置无效</p></li><li><p>安装完 Mathtype 后 PowerPoint 2016 打开报错「无法加载 …ppam 加载项」，所以干脆不用，在 Windows 10 (1709) 注册表中的位置为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Computer\HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Office\16.0\PowerPoint\AddIns\MathType AddIn (PowerPoint 2016)</span><br></pre></td></tr></table></figure> 删除即可</p></li><li><p>右键打开方式中程序列表所在注册表路径： <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts</span><br></pre></td></tr></table></figure></p></li><li><p>Microsoft Word 中设置边框时要记得重新应用边框，否则应用无效</p></li><li><p>往 Microsoft Word 里面插入矢量图时建议使用 <code>.wmf</code> 类型文件，<code>.emf</code> 文件在另存为 PDF 文件时可能导致图片严重失真</p></li><li><p>Windows 下给快捷方式指派的快捷键有明显延迟解决方案：<a href="https://superuser.com/questions/426947/slow-windows-desktop-keyboard-shortcuts" target="_blank" rel="noopener">slow windows desktop keyboard shortcuts</a></p></li><li><p>修改 Windows 用户名：</p><ol type="1"><li><p>以其它管理员用户 B 身份登录系统，并注销需要改名的用户 A（如果这个用户已经登录的话）。如仅有一个用户，可考虑新建管理员账户，或开启默认被禁止的 Administrator 账户（计算机管理 - 系统工具 - 本地用户和组 - 用户 - Administrator - 取消勾选账户已禁用）</p></li><li><p>直接修改用户 A 的用户目录名（「运行」输入 <code>..</code>，将文件夹 A 改名为 C）</p></li><li><p>找到注册表项 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList\&lt;User SID&gt;\</span><br></pre></td></tr></table></figure></p><p>并将其改为 <code>C:\Users\C</code>。<br>「注」如何定位到 <code>&lt;User SID&gt;</code>：每个 <code>&lt;User SID&gt;</code> 的子键 <code>ProfileImagePath</code> 即为此用户的 <code>Profile</code> 目录，找到用户目录为 A 的键即可</p></li><li><p>「运行」中键入 <code>netplwiz</code>，双击用户 A 将用户名修改为 C，重启</p></li></ol></li><li><p>NVIDIA 显卡搭载部分显示器屏幕发白 / 虚，可通过自定义 NVIDIA 色彩设定：</p><ul><li>Desktop Color Depth: <code>Highest (32-bit)</code></li><li>Output Color Depth: <code>8 bpc</code></li><li>Output Color format: <code>YCbCr444</code></li><li>Output dynamic range: <code>Limited</code></li></ul></li><li><p>更改右键菜单相对于鼠标点击处的位置：运行中键入 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell:::&#123;80F3F1D5-FECA-45F3-BC32-752C152E456E&#125;</span><br></pre></td></tr></table></figure></p><p>在弹出对话框 <code>Tablet PC Settings</code> 中切换用手习惯 <code>Handedness</code></p></li><li><p>Chrome 浏览器默认支持 Flash 需更改注册表项： <figure class="highlight plain"><figcaption><span>chrome_flash.reg</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Google\Chrome]</span><br><span class="line">&quot;AllowOutdatedPlugins&quot;=dword:00000001</span><br><span class="line">&quot;RunAllFlashInAllowMode&quot;=dword:00000001</span><br><span class="line">&quot;DefaultPluginsSetting&quot;=dword:00000001</span><br><span class="line">&quot;HardwareAccelerationModeEnabled&quot;=dword:00000001</span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Google\Chrome\PluginsAllowedForUrls]</span><br><span class="line">&quot;1&quot;=&quot;https://*&quot;</span><br><span class="line">&quot;2&quot;=&quot;http://*&quot;</span><br></pre></td></tr></table></figure></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录 Windows &lt;i class=&quot;fa fa-windows fa-fw&quot;&gt;&lt;/i&gt; 下遇到的问题、技巧与备忘。&lt;/p&gt;
    
    </summary>
    
      <category term="Tips and Tricks" scheme="http://notes.shinemic.cn/categories/Tips-and-Tricks/"/>
    
    
      <category term="Windows" scheme="http://notes.shinemic.cn/tags/Windows/"/>
    
  </entry>
  
</feed>
